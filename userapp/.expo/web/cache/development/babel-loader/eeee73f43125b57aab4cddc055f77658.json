{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Formik } from 'formik';\nimport React, { useState } from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Snackbar, TextInput } from 'react-native-paper';\nimport ButtonComponent from \"../components/button\";\nimport InputComponent from \"../components/input\";\nimport TextComponent from \"../components/text\";\nimport style from \"../styles/screens/login\";\nimport Constance from \"../theme/const\";\nimport * as yup from 'yup';\nimport * as Animatable from 'react-native-animatable';\nimport Anim from \"../components/anim\";\nimport axios from 'axios';\nimport Progress from \"../components/indicator\";\nvar loginSchema = yup.object({\n  email: yup.string().required().email(),\n  username: yup.string().required(\"Required\").min(3).matches(/^[a-zA-Z0-9]+$/, \"Invalid username\")\n});\n\nvar ComfirmAccount = function ComfirmAccount(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setemail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setpassword = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      visible = _useState6[0],\n      setVisible = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      load = _useState8[0],\n      setload = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      message = _useState10[0],\n      setmessage = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      invalid = _useState12[0],\n      setinvalid = _useState12[1];\n\n  var handleComfirmUser = function handleComfirmUser(values) {\n    setload(true);\n    axios.post(\"https://sunstarapi.herokuapp.com/login/verify/account\", values).then(function (res) {\n      setmessage(res.data.message);\n      setinvalid(true);\n      setload(false);\n      navigation.navigate('verifyscreen', {\n        email: values.email,\n        password: values.password,\n        key: res.data.key,\n        task: 'reset'\n      });\n    }).catch(function (err) {\n      console.log(err);\n      setmessage(\"Process failed, please try again.\");\n      setinvalid(true);\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%'\n    }\n  }, React.createElement(StatusBar, {\n    barStyle: 'dark-content',\n    backgroundColor: Constance.White\n  }), React.createElement(View, {\n    style: style.parent\n  }, React.createElement(View, {\n    style: [style.topcontainer, {\n      justifyContent: 'center',\n      alignItems: 'center'\n    }]\n  }, React.createElement(View, {\n    style: {\n      position: 'absolute',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 40\n    }\n  }, React.createElement(Anim, {\n    json: require(\"../../assets/lottie/75988-forgot-password.json\"),\n    autoplay: true,\n    autosize: true,\n    loop: true,\n    speed: 1,\n    style: {\n      height: '100%',\n      width: '100%'\n    }\n  }))), React.createElement(View, {\n    style: style.bottomcontainer\n  }, React.createElement(TextComponent, {\n    style: {\n      fontSize: Constance.medium,\n      marginVertical: 15\n    },\n    text: \"Reset password\"\n  }), React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      username: ''\n    },\n    onSubmit: function onSubmit(values, action) {\n      handleComfirmUser(values);\n    },\n    validationSchema: loginSchema\n  }, function (props) {\n    return React.createElement(View, null, React.createElement(InputComponent, {\n      hint: \"E-mail\",\n      left: React.createElement(TextInput.Icon, {\n        name: \"at\"\n      }),\n      changeText: props.handleChange(\"email\"),\n      value: props.values.email,\n      style: {\n        borderColor: Constance.light_border,\n        borderWidth: 1,\n        borderRadius: 5\n      }\n    }), props.errors.email || null ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.email\n    })) : null, React.createElement(InputComponent, {\n      hint: \"username\",\n      left: React.createElement(TextInput.Icon, {\n        name: \"account-box\"\n      }),\n      changeText: props.handleChange(\"username\"),\n      value: props.values.username,\n      style: {\n        borderColor: Constance.light_border,\n        borderRadius: 5,\n        borderWidth: 1,\n        top: 5\n      }\n    }), props.errors.username ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.username\n    })) : null, React.createElement(ButtonComponent, {\n      mode: \"contained\",\n      btnstyle: {\n        backgroundColor: Constance.Yellow,\n        marginTop: 30\n      },\n      lblstyle: {\n        color: Constance.White,\n        textTransform: 'capitalize'\n      },\n      text: \"Reset Password\",\n      press: props.handleSubmit\n    }));\n  })), React.createElement(Snackbar, {\n    visible: invalid,\n    onDismiss: function onDismiss() {\n      return setinvalid(false);\n    },\n    action: {\n      label: 'Undo',\n      onPress: function onPress() {}\n    }\n  }, message), load ? React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%',\n      position: 'absolute',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Progress, null)) : null));\n};\n\nexport default ComfirmAccount;","map":{"version":3,"sources":["D:/Development/Mobile Development/React native/Hotel/SunStar/SunStar/userapp/source/screens/comfirm.tsx"],"names":["Formik","React","useState","Snackbar","TextInput","ButtonComponent","InputComponent","TextComponent","style","Constance","yup","Animatable","Anim","axios","Progress","loginSchema","object","email","string","required","username","min","matches","ComfirmAccount","navigation","setemail","password","setpassword","visible","setVisible","load","setload","message","setmessage","invalid","setinvalid","handleComfirmUser","values","post","then","res","data","navigate","key","task","catch","err","console","log","height","width","White","parent","topcontainer","justifyContent","alignItems","position","padding","require","bottomcontainer","fontSize","medium","marginVertical","action","props","handleChange","borderColor","light_border","borderWidth","borderRadius","errors","color","Red","top","backgroundColor","Yellow","marginTop","textTransform","handleSubmit","label","onPress"],"mappings":"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","sourcesContent":["import { Formik } from 'formik';\r\nimport React, { Component, useContext, useRef, useState } from 'react'\r\nimport { Animated, Image, StatusBar, View } from 'react-native'\r\nimport { BottomNavigation, Snackbar, TextInput } from 'react-native-paper';\r\nimport ButtonComponent from '../components/button';\r\nimport InputComponent from '../components/input';\r\nimport TextComponent from '../components/text';\r\nimport style from '../styles/screens/login';\r\nimport Constance from '../theme/const';\r\nimport { ThemeContext } from '../theme/themeProvider';\r\nimport * as yup from 'yup';\r\nimport * as Animatable from 'react-native-animatable';\r\nimport Anim from '../components/anim';\r\nimport axios from 'axios';\r\nimport Progress from '../components/indicator';\r\n\r\n\r\nconst loginSchema = yup.object({\r\n  email: yup.string().required().email(),\r\n  username: yup.string().required(\"Required\").min(3).matches(/^[a-zA-Z0-9]+$/, \"Invalid username\"),\r\n})\r\n\r\n\r\nconst ComfirmAccount = ({ navigation }) => {\r\n\r\n  const [email, setemail] = useState('');\r\n  const [password, setpassword] = useState('');\r\n  const [visible, setVisible] = useState(true);\r\n  const [load, setload] = useState(false);\r\n  const [message, setmessage] = useState('');\r\n\r\n\r\n\r\n  const [invalid, setinvalid] = useState(false);\r\n\r\n  const handleComfirmUser = (values: any) => {\r\n    setload(true);\r\n    \r\n    axios.post(\"https://sunstarapi.herokuapp.com/login/verify/account\", values).then(res=>{\r\n        \r\n        setmessage(res.data.message)\r\n        setinvalid(true);\r\n        setload(false);\r\n        navigation.navigate('verifyscreen', {\r\n          email: values.email,\r\n          password: values.password,\r\n          key: res.data.key,\r\n          task:'reset'\r\n        });\r\n    }).catch(err=>{\r\n      console.log(err);\r\n      setmessage(\"Process failed, please try again.\")\r\n    setinvalid(true);\r\n    })\r\n  }\r\n\r\n  return (\r\n    <View style={{ height: '100%', width: '100%' }}>\r\n      <StatusBar barStyle={'dark-content'} backgroundColor={Constance.White}/>\r\n\r\n      <View style={style.parent}>\r\n\r\n        <View style={[style.topcontainer, { justifyContent: 'center', alignItems: 'center' }]}>\r\n          <View style={{ position: 'absolute', justifyContent: 'center', alignItems: 'center', padding: 40 }}>\r\n            <Anim json={require('../../assets/lottie/75988-forgot-password.json')} autoplay={true} autosize={true} loop={true} speed={1} style={{ height: '100%', width: '100%' }} />\r\n          </View>\r\n        </View>\r\n\r\n        <View style={style.bottomcontainer}>\r\n          <TextComponent style={{ fontSize: Constance.medium, marginVertical: 15 }} text='Reset password' />\r\n\r\n          <Formik\r\n            initialValues={{ email: '', username: '' }}\r\n            onSubmit={(values, action) => {\r\n              handleComfirmUser(values)\r\n            }}\r\n            validationSchema={loginSchema}\r\n          >\r\n\r\n            {(props) => (\r\n              <View>\r\n                <InputComponent hint='E-mail'\r\n                  left={<TextInput.Icon name=\"at\" />}\r\n                  changeText={props.handleChange(\"email\")}\r\n                  value={props.values.email}\r\n                  style={{\r\n                    borderColor: Constance.light_border,\r\n                    borderWidth: 1, borderRadius: 5\r\n                  }}\r\n                />\r\n\r\n                {props.errors.email || null ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red }} text={props.errors.email} /></Animatable.View> : null}\r\n                <InputComponent hint='username'\r\n                  left={<TextInput.Icon name=\"account-box\" />}\r\n                  changeText={props.handleChange(\"username\")}\r\n                  value={props.values.username}\r\n                  style={{\r\n                    borderColor: Constance.light_border,\r\n                    borderRadius: 5,\r\n                    borderWidth: 1, top: 5\r\n                  }}\r\n                />\r\n                {props.errors.username ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red }} text={props.errors.username} /></Animatable.View> : null}\r\n\r\n\r\n                <ButtonComponent mode='contained' btnstyle={{ backgroundColor: Constance.Yellow, marginTop: 30 }} lblstyle={{ color: Constance.White, textTransform: 'capitalize' }} text='Reset Password' press={props.handleSubmit} />\r\n\r\n              </View>\r\n            )}\r\n          </Formik>\r\n\r\n        </View>\r\n\r\n\r\n        <Snackbar\r\n          visible={invalid}\r\n          onDismiss={() => setinvalid(false)}\r\n\r\n          action={{\r\n            label: 'Undo',\r\n            onPress: () => {\r\n              // Do something\r\n            },\r\n          }}>\r\n          {message}\r\n        </Snackbar>\r\n\r\n        {load ? <View style={{ height: '100%', width: '100%', position: 'absolute', justifyContent: 'center', alignItems: 'center' }}>\r\n          <Progress />\r\n        </View> : null}\r\n      </View>\r\n\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default ComfirmAccount\r\n"]},"metadata":{},"sourceType":"module"}