{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ThemeContext } from \"../theme/themeProvider\";\nimport MapView, { MarkerAnimated, PROVIDER_GOOGLE } from 'react-native-maps';\n3;\nimport { Divider, Icon, Text } from \"react-native-elements\";\nimport Constance from \"../theme/const\";\nimport ButtonComponent from \"../components/button\";\nimport ActionBar from \"../components/actionbar\";\nimport style from \"../styles/screens/card\";\nimport Modal from \"react-native-modalbox\";\nimport modal from \"../styles/components/modal\";\nimport * as yup from 'yup';\nimport { useRoute } from '@react-navigation/native';\nimport * as Location from 'expo-location';\nimport { requestForegroundPermissionsAsync } from \"expo-location\";\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';\nimport MapViewDirections from 'react-native-maps-directions';\nvar cardSchema = yup.object({\n  names: yup.string().required('Required').min(3).matches(/^(?![\\s.]+$)[a-zA-Z\\s.]*$/, \"Only characters are allowed.\"),\n  cardnumber: yup.string().required('Required').length(16).matches(/^(?:(?<visa>4[0-9]{12}(?:[0-9]{3})?)|(?<mastercard>5[1-5][0-9]{14})|(?<discover>6(?:011|5[0-9]{2})[0-9]{12})|(?<amex>3[47][0-9]{13})|(?<diners>3(?:0[0-5]|[68][0-9])[0-9]{11})|(?<jcb>(?:2131|1800|35[0-9]{3})[0-9]{11}))$/, \"Invalid card number\"),\n  expdate: yup.string().required('Required').matches(/^(0[1-9]|1[0-2])\\/?([0-9]{4}|[0-9]{2})$/, \"invalid date\"),\n  cvv: yup.string().required('Required').length(4).matches(/[0-9]{4}/, \"Invalid pin\")\n});\n\nvar PickupLocation = function PickupLocation(_ref) {\n  var navigation = _ref.navigation;\n  var GooglePlacesRef = useRef();\n  var params = useRoute().params;\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme,\n      dark = _useContext.dark,\n      toggle = _useContext.toggle;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalUpdateCard = _useState2[0],\n      setmodalUpdateCard = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      err = _useState4[0],\n      seterr = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      latitude = _useState6[0],\n      setlatitude = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      longitude = _useState8[0],\n      setlongitude = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      address = _useState10[0],\n      setaddress = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      modalpickedAddress = _useState12[0],\n      setmodalpickedAddress = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      searchFocused = _useState14[0],\n      setsearchFocused = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      coordinates = _useState16[0],\n      setcoordinates = _useState16[1];\n\n  var _useState17 = useState(),\n      _useState18 = _slicedToArray(_useState17, 2),\n      mapview = _useState18[0],\n      setmapview = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      distance = _useState20[0],\n      setdistance = _useState20[1];\n\n  var _useState21 = useState(''),\n      _useState22 = _slicedToArray(_useState21, 2),\n      duration = _useState22[0],\n      setduration = _useState22[1];\n\n  var _useState23 = useState(\"DRIVING\"),\n      _useState24 = _slicedToArray(_useState23, 2),\n      travelingMode = _useState24[0],\n      settravelingMode = _useState24[1];\n\n  var _useState25 = useState(''),\n      _useState26 = _slicedToArray(_useState25, 2),\n      ridecost = _useState26[0],\n      setridecost = _useState26[1];\n\n  var starWarching = function starWarching() {\n    return _regeneratorRuntime.async(function starWarching$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(requestForegroundPermissionsAsync());\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            seterr(_context.t0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var updateState = function updateState() {\n    var _await$Location$reque, status, location, rigion;\n\n    return _regeneratorRuntime.async(function updateState$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n          case 3:\n            _await$Location$reque = _context2.sent;\n            status = _await$Location$reque.status;\n\n            if (!(status !== 'granted')) {\n              _context2.next = 7;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 7:\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(Location.watchPositionAsync({\n              accuracy: Location.Accuracy.High,\n              timeInterval: 10000,\n              distanceInterval: 80\n            }, function (location) {\n              setlatitude(location.coords.latitude);\n              setlongitude(location.coords.longitude);\n              setcoordinates([{\n                latitude: location.coords.latitude,\n                longitude: location.coords.longitude\n              }, {\n                latitude: -23.900163,\n                longitude: 29.449058\n              }]);\n            }));\n\n          case 9:\n            location = _context2.sent;\n            _context2.next = 12;\n            return _regeneratorRuntime.awrap(Location.reverseGeocodeAsync({\n              longitude: longitude,\n              latitude: latitude\n            }));\n\n          case 12:\n            rigion = _context2.sent;\n            _context2.next = 17;\n            break;\n\n          case 15:\n            _context2.prev = 15;\n            _context2.t0 = _context2[\"catch\"](0);\n\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 15]], Promise);\n  };\n\n  var calculatePrice = function calculatePrice(km, duration) {\n    var price = km * 1.90 % (duration * 4) * 5;\n    var bookingWithRide = price + params.data.amount;\n    setridecost(bookingWithRide);\n  };\n\n  var GetAddress = function GetAddress(latitude, longitude) {\n    var local;\n    return _regeneratorRuntime.async(function GetAddress$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(Location.reverseGeocodeAsync({\n              latitude: latitude,\n              longitude: longitude\n            }).then(function (local) {\n              console.log(local);\n              setcoordinates([{\n                latitude: latitude,\n                longitude: longitude\n              }, {\n                latitude: -23.900163,\n                longitude: 29.449058\n              }]);\n              setmodalpickedAddress(true);\n              setaddress(local[0].name + \" \" + local[0].street + \", \" + local[0].district + \", \" + local[0].city + \",  \" + local[0].country);\n              setlatitude(latitude);\n              setlongitude(longitude);\n            }).catch(function (err) {\n              console.log(err);\n            }));\n\n          case 2:\n            local = _context3.sent;\n\n            if (!(local === null)) {\n              _context3.next = 6;\n              break;\n            }\n\n            console.log(\"invalid coordinates\");\n            return _context3.abrupt(\"return\");\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var GooglePlacesInput = function GooglePlacesInput() {\n    console.log(GooglePlacesRef.current);\n  };\n\n  useEffect(function () {\n    starWarching();\n    updateState();\n    GooglePlacesInput();\n  }, []);\n  return React.createElement(View, {\n    style: {\n      backgroundColor: theme.background,\n      height: '100%',\n      width: '100%'\n    }\n  }, React.createElement(StatusBar, {\n    barStyle: dark ? 'light-content' : 'dark-content',\n    backgroundColor: theme.background\n  }), React.createElement(View, {\n    style: [style.map, {\n      height: '100%'\n    }]\n  }, React.createElement(MapView, {\n    provider: PROVIDER_GOOGLE,\n    style: style.map,\n    key: \"AIzaSyCSdP5YSrTZGe56so60mGDMdE9h4Rp-sR0\",\n    region: {\n      latitude: latitude,\n      longitude: longitude,\n      latitudeDelta: 0.0185,\n      longitudeDelta: 0.0185\n    },\n    ref: mapview,\n    zoomControlEnabled: true,\n    focusable: true,\n    hasTVPreferredFocus: true\n  }, coordinates.map(function (marker, index) {\n    return React.createElement(MarkerAnimated, {\n      coordinate: {\n        \"latitude\": marker.latitude,\n        \"longitude\": marker.longitude\n      },\n      title: address,\n      draggable: index === 0 ? true : false,\n      image: require(\"../../assets/images/pin.png\"),\n      onDragEnd: function onDragEnd(e) {\n        GetAddress(e.nativeEvent.coordinate.latitude, e.nativeEvent.coordinate.longitude);\n      }\n    });\n  }), React.createElement(MapViewDirections, {\n    origin: coordinates[0],\n    lineDashPattern: [10],\n    waypoints: coordinates,\n    destination: coordinates[1],\n    splitWaypoints: true,\n    apikey: \"AIzaSyCSdP5YSrTZGe56so60mGDMdE9h4Rp-sR0\",\n    strokeWidth: 5,\n    strokeColor: Constance.Green,\n    optimizeWaypoints: true,\n    onStart: function onStart(params) {\n      console.log(\"Started routing between \\\"\" + params.origin + \"\\\" and \\\"\" + params.destination + \"\\\"\");\n    },\n    mode: travelingMode,\n    onReady: function onReady(result) {\n      setdistance(\" \" + result.distance + \" km\");\n      setduration(\" \" + result.duration + \" min.\");\n      calculatePrice(result.distance, result.duration);\n    },\n    onError: function onError(errorMessage) {\n      console.log(errorMessage);\n    }\n  })), React.createElement(ActionBar, {\n    barStyle: {\n      position: 'absolute'\n    },\n    backgroundColor: null,\n    onBackPress: function onBackPress() {\n      return navigation.goBack();\n    },\n    iconBack: Platform.OS === 'ios' ? 'chevron-back' : 'arrow-back'\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setmodalUpdateCard(true);\n    },\n    style: {\n      width: '100%',\n      borderRadius: 7,\n      height: 40,\n      alignItems: 'center',\n      position: 'absolute',\n      bottom: -25\n    }\n  }, React.createElement(View, {\n    style: {\n      height: 8,\n      width: '40%',\n      backgroundColor: theme.borderAlt,\n      borderRadius: 7\n    }\n  }))), React.createElement(Modal, {\n    entry: \"bottom\",\n    backdropPressToClose: true,\n    isOpen: modalUpdateCard,\n    style: [modal.modalBox],\n    onClosed: function onClosed() {\n      return setmodalUpdateCard(false);\n    }\n  }, React.createElement(View, {\n    style: [modal.content, {\n      backgroundColor: theme.background,\n      height: 300\n    }]\n  }, React.createElement(Divider, {\n    style: {\n      borderRadius: 12,\n      height: Constance.largeDivider,\n      width: 100,\n      backgroundColor: theme.borderAlt,\n      alignSelf: 'center'\n    }\n  }), React.createElement(View, {\n    style: modal.modelContainerChild\n  }, React.createElement(Text, {\n    style: modal.textStyle\n  }), React.createElement(Icon, {\n    type: \"ionicon\",\n    name: \"close\",\n    onPress: function onPress() {\n      setmodalUpdateCard(false);\n    }\n  })), React.createElement(GooglePlacesAutocomplete, {\n    ref: GooglePlacesRef,\n    placeholder: \"Find Address?\",\n    placeholderTextColor: \"#222\",\n    returnKeyType: 'search',\n    onPress: function onPress(data, details) {\n      GetAddress(details.geometry.location.lat, details.geometry.location.lng);\n      setcoordinates([{\n        latitude: latitude,\n        longitude: longitude\n      }, {\n        latitude: details.geometry.location.lat,\n        longitude: details.geometry.location.lng\n      }]);\n      console.log(details.geometry.location);\n      setmodalUpdateCard(false);\n    },\n    getDefaultValue: function getDefaultValue() {\n      return '';\n    },\n    currentLocation: true,\n    currentLocationLabel: address,\n    predefinedPlaces: address,\n    query: {\n      key: 'AIzaSyCSdP5YSrTZGe56so60mGDMdE9h4Rp-sR0',\n      language: 'en'\n    },\n    nearbyPlacesAPI: \"GooglePlacesSearch\",\n    debounce: 200,\n    textInputProps: {\n      onFocus: function onFocus() {\n        setsearchFocused(true);\n      },\n      onBlur: function onBlur() {\n        setsearchFocused(false);\n      },\n      autoCapitalize: \"none\",\n      autoCorrect: false\n    },\n    listViewDisplayed: searchFocused,\n    fetchDetails: true,\n    enablePoweredByContainer: false,\n    styles: {\n      container: {\n        position: \"absolute\",\n        top: Platform.select({\n          ios: 50,\n          android: 40\n        }),\n        width: \"100%\"\n      },\n      textInputContainer: {\n        flex: 1,\n        backgroundColor: \"#e5e5e5\",\n        height: 40,\n        marginHorizontal: 10,\n        borderTopWidth: 0,\n        borderRadius: 15,\n        borderBottomWidth: 0\n      },\n      textInput: {\n        height: 40,\n        margin: 0,\n        borderRadius: 5,\n        backgroundColor: \"#e5e5e5\",\n        paddingTop: 0,\n        paddingBottom: 0,\n        paddingLeft: 20,\n        paddingRight: 20,\n        marginTop: 0,\n        marginLeft: 0,\n        marginRight: 0,\n        elevation: 5,\n        shadowColor: \"#000\",\n        shadowOpacity: 0.1,\n        shadowOffset: {\n          x: 0,\n          y: 0\n        },\n        shadowRadius: 15,\n        borderWidth: 1,\n        borderColor: \"#DDD\",\n        fontSize: 15\n      },\n      listView: {\n        borderWidth: 1,\n        borderColor: \"#DDD\",\n        backgroundColor: \"#e5e5e5\",\n        marginHorizontal: 10,\n        elevation: 5,\n        shadowColor: \"#000\",\n        shadowOpacity: 0.1,\n        shadowOffset: {\n          x: 0,\n          y: 0\n        },\n        shadowRadius: 15,\n        marginTop: 5,\n        fontSize: 15\n      },\n      description: {\n        fontSize: 15\n      },\n      row: {\n        padding: 15,\n        height: 55\n      }\n    }\n  }))), React.createElement(Modal, {\n    entry: \"bottom\",\n    backdropPressToClose: true,\n    isOpen: modalpickedAddress,\n    style: [modal.modalBox],\n    onClosed: function onClosed() {\n      return setmodalpickedAddress(false);\n    }\n  }, React.createElement(View, {\n    style: [modal.content, {\n      backgroundColor: theme.background\n    }]\n  }, React.createElement(Divider, {\n    style: {\n      borderRadius: 12,\n      height: Constance.largeDivider,\n      width: 100,\n      backgroundColor: theme.borderAlt,\n      alignSelf: 'center'\n    }\n  }), React.createElement(View, {\n    style: modal.modelContainerChild\n  }, React.createElement(Text, {\n    style: modal.textStyle\n  }), React.createElement(Icon, {\n    type: \"ionicon\",\n    name: \"close\",\n    onPress: function onPress() {\n      setmodalpickedAddress(false);\n    }\n  })), React.createElement(View, {\n    style: {\n      height: 200\n    }\n  }, React.createElement(Text, {\n    style: [modal.textStyle, {\n      fontSize: Constance.large,\n      fontWeight: 'bold'\n    }]\n  }, \"Traveling Details\"), React.createElement(Text, {\n    style: [modal.textStyle, {\n      fontSize: Constance.medium,\n      fontWeight: 'bold'\n    }]\n  }, \"Address:\"), React.createElement(Text, {\n    style: [modal.textStyle, {\n      fontSize: Constance.medium,\n      fontWeight: '900'\n    }]\n  }, address), React.createElement(Text, {\n    style: [modal.textStyle, {\n      fontSize: Constance.medium,\n      fontWeight: 'bold'\n    }]\n  }, \"Distance:\"), React.createElement(View, {\n    style: {\n      justifyContent: 'space-between',\n      flexDirection: 'row'\n    }\n  }, React.createElement(Text, {\n    style: [modal.textStyle, {\n      fontSize: Constance.medium,\n      fontWeight: '900'\n    }]\n  }, \"Distance: \", distance), React.createElement(Icon, {\n    type: \"ionicon\",\n    name: \"car\",\n    color: Constance.Blue,\n    size: 24\n  })), React.createElement(Text, {\n    style: [modal.textStyle, {\n      fontSize: Constance.medium,\n      fontWeight: 'bold'\n    }]\n  }, \"Duration:\"), React.createElement(Text, {\n    style: [modal.textStyle, {\n      fontSize: Constance.medium,\n      fontWeight: '900'\n    }]\n  }, \" \", duration, \" \"), React.createElement(Text, {\n    style: [modal.textStyle, {\n      fontSize: Constance.medium,\n      fontWeight: 'bold'\n    }]\n  }, \"Price \"), React.createElement(Text, {\n    style: [modal.textStyle, {\n      fontSize: Constance.medium,\n      fontWeight: '900'\n    }]\n  }, \"R \", ridecost ? ridecost.toString().substring(0, ridecost.toString().indexOf('.') + 2) : null)), React.createElement(ButtonComponent, {\n    press: function press() {\n      navigation.navigate('creditcardscreen', {\n        payment: true,\n        data: {\n          checkinDate: params.data.checkinDate,\n          checkoutDate: params.data.checkinDate,\n          adults: params.data.checkinDate,\n          children: params.data.checkinDate,\n          amount: parseInt(ridecost)\n        },\n        rideRequest: params.rideRequest,\n        roomKey: params.roomKey,\n        hotelKey: params.hotelKey,\n        address: address\n      });\n    },\n    lblstyle: {\n      color: theme.text\n    },\n    mode: '',\n    text: 'Comfirm address',\n    btnstyle: {\n      width: '100%',\n      marginTop: 10,\n      backgroundColor: Constance.Blue,\n      borderColor: theme.borderAlt,\n      borderWidth: 1,\n      borderRadius: 7,\n      height: 40,\n      alignItems: 'center'\n    }\n  }))));\n};\n\nexport default PickupLocation;","map":{"version":3,"sources":["D:/Development/Mobile Development/React native/Hotel/SunStar/SunStar/userapp/source/screens/pickuplocation.tsx"],"names":["React","useContext","useEffect","useRef","useState","ThemeContext","MapView","MarkerAnimated","PROVIDER_GOOGLE","Divider","Icon","Text","Constance","ButtonComponent","ActionBar","style","Modal","modal","yup","useRoute","Location","requestForegroundPermissionsAsync","GooglePlacesAutocomplete","MapViewDirections","cardSchema","object","names","string","required","min","matches","cardnumber","length","expdate","cvv","PickupLocation","navigation","GooglePlacesRef","params","theme","dark","toggle","modalUpdateCard","setmodalUpdateCard","err","seterr","latitude","setlatitude","longitude","setlongitude","address","setaddress","modalpickedAddress","setmodalpickedAddress","searchFocused","setsearchFocused","coordinates","setcoordinates","mapview","setmapview","distance","setdistance","duration","setduration","travelingMode","settravelingMode","ridecost","setridecost","starWarching","updateState","status","watchPositionAsync","accuracy","Accuracy","High","timeInterval","distanceInterval","location","coords","reverseGeocodeAsync","rigion","calculatePrice","km","price","bookingWithRide","data","amount","GetAddress","then","local","console","log","name","street","district","city","country","catch","GooglePlacesInput","current","backgroundColor","background","height","width","map","latitudeDelta","longitudeDelta","marker","index","require","e","nativeEvent","coordinate","Green","origin","destination","result","errorMessage","position","goBack","Platform","OS","borderRadius","alignItems","bottom","borderAlt","modalBox","content","largeDivider","alignSelf","modelContainerChild","textStyle","details","geometry","lat","lng","key","language","onFocus","onBlur","autoCapitalize","autoCorrect","container","top","select","ios","android","textInputContainer","flex","marginHorizontal","borderTopWidth","borderBottomWidth","textInput","margin","paddingTop","paddingBottom","paddingLeft","paddingRight","marginTop","marginLeft","marginRight","elevation","shadowColor","shadowOpacity","shadowOffset","x","y","shadowRadius","borderWidth","borderColor","fontSize","listView","description","row","padding","large","fontWeight","medium","justifyContent","flexDirection","Blue","toString","substring","indexOf","navigate","payment","checkinDate","checkoutDate","adults","children","parseInt","rideRequest","roomKey","hotelKey","color","text"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { Platform, ScrollView, StatusBar, TouchableOpacity, View } from \"react-native\";\r\nimport { ThemeContext } from \"../theme/themeProvider\";\r\nimport MapView, { DirectionsRenderer, Marker, MarkerAnimated, PROVIDER_GOOGLE } from 'react-native-maps'; 3\r\nimport { Divider, Icon, Text } from \"react-native-elements\";\r\nimport Constance from \"../theme/const\";\r\nimport ImageComponent from \"../components/image\";\r\nimport ButtonComponent from \"../components/button\";\r\nimport ActionBar from \"../components/actionbar\";\r\nimport style from '../styles/screens/card';\r\nimport Modal from \"react-native-modalbox\";\r\nimport modal from '../styles/components/modal';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport TextComponent from '../components/text';\r\nimport * as Animatable from 'react-native-animatable';\r\nimport InputComponent from \"../components/input\";\r\nimport { TextInput } from \"react-native-paper\";\r\nimport { useRoute } from '@react-navigation/native';\r\nimport * as Location from 'expo-location';\r\nimport { requestForegroundPermissionsAsync } from \"expo-location\";\r\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';\r\nimport Autocomplete from \"react-google-autocomplete\";\r\nimport MapViewDirections from 'react-native-maps-directions';\r\n\r\nconst cardSchema = yup.object({\r\n    names: yup.string().required('Required').min(3)\r\n        .matches(/^(?![\\s.]+$)[a-zA-Z\\s.]*$/, \"Only characters are allowed.\"),\r\n    cardnumber: yup.string().required('Required').length(16).matches(/^(?:(?<visa>4[0-9]{12}(?:[0-9]{3})?)|(?<mastercard>5[1-5][0-9]{14})|(?<discover>6(?:011|5[0-9]{2})[0-9]{12})|(?<amex>3[47][0-9]{13})|(?<diners>3(?:0[0-5]|[68][0-9])[0-9]{11})|(?<jcb>(?:2131|1800|35[0-9]{3})[0-9]{11}))$/, \"Invalid card number\"),\r\n    expdate: yup.string().required('Required').matches(/^(0[1-9]|1[0-2])\\/?([0-9]{4}|[0-9]{2})$/, \"invalid date\"),\r\n    cvv: yup.string().required('Required').length(4).matches(/[0-9]{4}/, \"Invalid pin\")\r\n});\r\n\r\nconst PickupLocation = ({ navigation }) => {\r\n\r\n    const GooglePlacesRef = useRef();\r\n    const params = useRoute().params;\r\n    const { theme, dark, toggle } = useContext(ThemeContext);\r\n    const [modalUpdateCard, setmodalUpdateCard] = useState(false);\r\n    const [err, seterr] = useState('');\r\n    const [latitude, setlatitude] = useState<number>(0);\r\n    const [longitude, setlongitude] = useState<number>(0);\r\n    const [address, setaddress] = useState<any>();\r\n    const [modalpickedAddress, setmodalpickedAddress] = useState(false);\r\n    const [searchFocused, setsearchFocused] = useState();\r\n    const [coordinates, setcoordinates] = useState<any>([]);\r\n    const [mapview, setmapview] = useState<any>();\r\n    const [distance, setdistance] = useState('');\r\n    const [duration, setduration] = useState('');\r\n    const [travelingMode, settravelingMode] = useState(\"DRIVING\")\r\n    const [ridecost, setridecost] = useState('');\r\n    const starWarching = async () => {\r\n        try {\r\n            await requestForegroundPermissionsAsync();\r\n\r\n        } catch (err: any) {\r\n            seterr(err)\r\n        }\r\n    }\r\n\r\n    const updateState = async () => {\r\n\r\n        try {\r\n\r\n            const { status } = await Location.requestForegroundPermissionsAsync();\r\n\r\n            if (status !== 'granted') { return; }\r\n\r\n            let location = await Location.watchPositionAsync({\r\n                accuracy: Location.Accuracy.High,\r\n                timeInterval: 10000,\r\n                distanceInterval: 80,\r\n            }, (location: any) => {\r\n\r\n                setlatitude(location.coords.latitude);\r\n                setlongitude(location.coords.longitude);\r\n                setcoordinates([{ latitude: location.coords.latitude, longitude: location.coords.longitude }, { latitude: -23.900163, longitude: 29.449058 }])\r\n              })\r\n\r\n\r\n           \r\n            let rigion = await Location.reverseGeocodeAsync({\r\n                longitude,\r\n                latitude\r\n            });\r\n\r\n        } catch (err) {\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const calculatePrice=(km:any,duration:any)=>{\r\n        let price = ((km * 1.90) % ((duration*4))) * 5;\r\n        \r\n        let bookingWithRide = price + params.data.amount;\r\n        setridecost(bookingWithRide);\r\n    }\r\n\r\n    const GetAddress = async (latitude: any, longitude: any) => {\r\n\r\n        let local = await Location.reverseGeocodeAsync({ latitude: latitude, longitude: longitude }).then((local)=>{\r\n\r\n            console.log(local);\r\n            setcoordinates([{ latitude: latitude, longitude: longitude }, { latitude: -23.900163, longitude: 29.449058 }])\r\n\r\n            setmodalpickedAddress(true);\r\n            setaddress(`${local[0].name} ${local[0].street}, ${local[0].district}, ${local[0].city},  ${local[0].country}`);\r\n            setlatitude(latitude);\r\n            setlongitude(longitude);\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n            \r\n        });\r\n        \r\n        if (local === null) {\r\n            console.log(\"invalid coordinates\");\r\n            return;\r\n        }\r\n\r\n    }\r\n\r\n    const GooglePlacesInput = () => {\r\n\r\n        console.log(GooglePlacesRef.current);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        starWarching();\r\n        updateState();\r\n        GooglePlacesInput();\r\n\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <View style={{ backgroundColor: theme.background, height: '100%', width: '100%' }}>\r\n            <StatusBar barStyle={dark ? 'light-content' : 'dark-content'} backgroundColor={theme.background} />\r\n\r\n            <View style={[style.map, { height: '100%' }]}>\r\n                <MapView\r\n                    provider={PROVIDER_GOOGLE} // remove if not using Google Maps\r\n                    style={style.map}\r\n                    key={\"AIzaSyCSdP5YSrTZGe56so60mGDMdE9h4Rp-sR0\"}\r\n                    region={{\r\n                        latitude: latitude,\r\n                        longitude: longitude,\r\n                        latitudeDelta: 0.0185,\r\n                        longitudeDelta: 0.0185,\r\n                    }}\r\n                    ref={mapview}\r\n                    zoomControlEnabled\r\n                    focusable\r\n                    hasTVPreferredFocus\r\n                >\r\n                    {coordinates.map((marker, index) =>\r\n                        <MarkerAnimated\r\n                            coordinate={{ \"latitude\": marker.latitude, \"longitude\": marker.longitude }}\r\n                            title={address}\r\n                            draggable={index === 0 ? true : false}\r\n                            image={require('../../assets/images/pin.png')}\r\n                            onDragEnd={(e) => {\r\n\r\n                                GetAddress(e.nativeEvent.coordinate.latitude, e.nativeEvent.coordinate.longitude)\r\n\r\n                            }}\r\n                        />)}\r\n\r\n\r\n                    <MapViewDirections\r\n                        origin={coordinates[0]}\r\n                        lineDashPattern={[10]}\r\n                        waypoints={coordinates}\r\n                        destination={coordinates[1]}\r\n                        splitWaypoints={true}\r\n                        apikey={\"AIzaSyCSdP5YSrTZGe56so60mGDMdE9h4Rp-sR0\"}\r\n                        strokeWidth={5}\r\n                        strokeColor={Constance.Green}\r\n                        optimizeWaypoints={true}\r\n                        onStart={(params) => {\r\n                            console.log(`Started routing between \"${params.origin}\" and \"${params.destination}\"`);\r\n                        }}\r\n                        mode={travelingMode}\r\n                        onReady={result => { \r\n                            setdistance(` ${result.distance} km`);\r\n                            setduration(` ${result.duration} min.`);\r\n                            calculatePrice(result.distance, result.duration);\r\n                        }}\r\n                        onError={(errorMessage) => {\r\n                            console.log(errorMessage);\r\n                        }}\r\n                    />\r\n                </MapView>\r\n                <ActionBar barStyle={{ position: 'absolute' }} backgroundColor={null} onBackPress={() => navigation.goBack()} iconBack={Platform.OS === 'ios' ? 'chevron-back' : 'arrow-back'} />\r\n\r\n\r\n                <TouchableOpacity onPress={() => { setmodalUpdateCard(true) }} style={{ width: '100%', borderRadius: 7, height: 40, alignItems: 'center', position: 'absolute', bottom: -25 }}>\r\n                    <View style={{ height: 8, width: '40%', backgroundColor: theme.borderAlt, borderRadius: 7 }}>\r\n\r\n                    </View>\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n\r\n            {/* Update card model  */}\r\n            <Modal\r\n                entry=\"bottom\"\r\n                backdropPressToClose={true}\r\n                isOpen={modalUpdateCard}\r\n                style={[modal.modalBox]}\r\n                onClosed={() => setmodalUpdateCard(false)}\r\n            >\r\n                <View style={[modal.content, { backgroundColor: theme.background, height: 300 }]}>\r\n\r\n                    <Divider style={{ borderRadius: 12, height: Constance.largeDivider, width: 100, backgroundColor: theme.borderAlt, alignSelf: 'center' }} />\r\n                    <View style={modal.modelContainerChild}>\r\n                        <Text style={modal.textStyle}></Text>\r\n                        <Icon type=\"ionicon\" name=\"close\" onPress={() => { setmodalUpdateCard(false) }} />\r\n                    </View>\r\n\r\n\r\n\r\n                    <GooglePlacesAutocomplete\r\n                        ref={GooglePlacesRef}\r\n                        placeholder=\"Find Address?\"\r\n                        placeholderTextColor=\"#222\"\r\n                        returnKeyType={'search'} // Can be left out for default return key \r\n                        onPress={(data, details ) => {\r\n                            //setaddress(details.geometry.location)\r\n                            GetAddress(details.geometry.location.lat, details.geometry.location.lng)\r\n                            setcoordinates([{ latitude: latitude, longitude: longitude }, { latitude: details.geometry.location.lat, longitude: details.geometry.location.lng }])\r\n                            console.log(details.geometry.location);\r\n                            setmodalUpdateCard(false);\r\n\r\n                        }}// 'details' is provided when fetchDetails = true\r\n                        getDefaultValue={() => ''}\r\n                        currentLocation={true} // Will add a 'Current location' button at the top of the predefined places list\r\n                        currentLocationLabel={ address}\r\n                        predefinedPlaces={address}\r\n                        query={{\r\n                            key: 'AIzaSyCSdP5YSrTZGe56so60mGDMdE9h4Rp-sR0',\r\n                            language: 'en',\r\n                        }}\r\n                        nearbyPlacesAPI='GooglePlacesSearch'\r\n                        debounce={200}\r\n                        textInputProps={{\r\n                            onFocus: () => {\r\n                                setsearchFocused(true);\r\n                            },\r\n                            onBlur: () => {\r\n                                setsearchFocused(false);\r\n                            },\r\n                            autoCapitalize: \"none\",\r\n                            autoCorrect: false\r\n                        }}\r\n                        listViewDisplayed={searchFocused}\r\n                        fetchDetails={true}\r\n                        enablePoweredByContainer={false}\r\n                        styles={{\r\n                            container: {\r\n                                position: \"absolute\",\r\n                                top: Platform.select({ ios: 50, android: 40 }),\r\n                                width: \"100%\"\r\n                            },\r\n                            textInputContainer: {\r\n                                flex: 1,\r\n                                backgroundColor: \"#e5e5e5\",\r\n                                height: 40,\r\n                                marginHorizontal: 10,\r\n                                borderTopWidth: 0,\r\n                                borderRadius: 15,\r\n                                borderBottomWidth: 0\r\n                            },\r\n                            textInput: {\r\n                                height: 40,\r\n                                margin: 0,\r\n                                borderRadius: 5,\r\n                                backgroundColor: \"#e5e5e5\",\r\n                                paddingTop: 0,\r\n                                paddingBottom: 0,\r\n                                paddingLeft: 20,\r\n                                paddingRight: 20,\r\n                                marginTop: 0,\r\n                                marginLeft: 0,\r\n                                marginRight: 0,\r\n                                elevation: 5,\r\n                                shadowColor: \"#000\",\r\n                                shadowOpacity: 0.1,\r\n                                shadowOffset: { x: 0, y: 0 },\r\n                                shadowRadius: 15,\r\n                                borderWidth: 1,\r\n                                borderColor: \"#DDD\",\r\n                                fontSize: 15\r\n                            },\r\n                            listView: {\r\n                                borderWidth: 1,\r\n                                borderColor: \"#DDD\",\r\n                                backgroundColor: \"#e5e5e5\",\r\n                                marginHorizontal: 10,\r\n                                elevation: 5,\r\n                                shadowColor: \"#000\",\r\n                                shadowOpacity: 0.1,\r\n                                shadowOffset: { x: 0, y: 0 },\r\n                                shadowRadius: 15,\r\n                                marginTop: 5,\r\n                                fontSize: 15\r\n                            },\r\n                            description: {\r\n                                fontSize: 15\r\n                            },\r\n                            row: {\r\n                                padding: 15,\r\n                                height: 55\r\n                            }\r\n                        }}\r\n                    />\r\n                </View>\r\n            </Modal>\r\n\r\n            <Modal\r\n                entry=\"bottom\"\r\n                backdropPressToClose={true}\r\n                isOpen={modalpickedAddress}\r\n                style={[modal.modalBox]}\r\n                onClosed={() => setmodalpickedAddress(false)}\r\n            >\r\n                <View style={[modal.content, { backgroundColor: theme.background }]}>\r\n\r\n                    <Divider style={{ borderRadius: 12, height: Constance.largeDivider, width: 100, backgroundColor: theme.borderAlt, alignSelf: 'center' }} />\r\n                    <View style={modal.modelContainerChild}>\r\n                        <Text style={modal.textStyle}></Text>\r\n                        <Icon type=\"ionicon\" name=\"close\" onPress={() => { setmodalpickedAddress(false) }} />\r\n                    </View>\r\n  \r\n                    <View style={{ height: 200 }}>\r\n\r\n                    <Text style={[modal.textStyle,{fontSize:Constance.large,fontWeight:'bold'  }]}>Traveling Details</Text>\r\n                    \r\n                    <Text style={[modal.textStyle,{fontSize:Constance.medium, fontWeight:'bold' }]}>Address:</Text>\r\n                        <Text style={[modal.textStyle,{fontSize:Constance.medium,fontWeight:'900'  }]}>{address}</Text>\r\n                        \r\n                        <Text style={[modal.textStyle,{fontSize:Constance.medium, fontWeight:'bold' }]}>Distance:</Text>\r\n                        <View style={{ justifyContent: 'space-between', flexDirection:'row'}}>    \r\n                        <Text style={[modal.textStyle,{fontSize:Constance.medium, fontWeight:'900' }]}>Distance: {distance}</Text>\r\n                        <Icon type=\"ionicon\" name=\"car\" color={Constance.Blue} size={24}/>\r\n                        </View>\r\n                        <Text style={[modal.textStyle,{fontSize:Constance.medium, fontWeight:'bold' }]}>Duration:</Text>\r\n                        \r\n                        <Text style={[modal.textStyle,{fontSize:Constance.medium,fontWeight:'900'  }]}> {duration} </Text>\r\n                    \r\n                        <Text style={[modal.textStyle,{fontSize:Constance.medium,fontWeight:'bold'  }]}>Price </Text>\r\n                        <Text style={[modal.textStyle,{fontSize:Constance.medium,fontWeight:'900' }]}>R {ridecost? ridecost.toString().substring(0, ridecost.toString().indexOf('.')+ 2):null}</Text>\r\n\r\n                    </View>\r\n\r\n\r\n                    <ButtonComponent press={() => { navigation.navigate('creditcardscreen', { payment: true, data: { checkinDate: params.data.checkinDate, checkoutDate: params.data.checkinDate, adults: params.data.checkinDate, children: params.data.checkinDate, amount: parseInt(ridecost) }\r\n                    , rideRequest: params.rideRequest, roomKey: params.roomKey, hotelKey: params.hotelKey, address: address }) }} lblstyle={{ color: theme.text }} mode={''} text={'Comfirm address'} btnstyle={{ width: '100%', marginTop: 10, backgroundColor: Constance.Blue, borderColor: theme.borderAlt, borderWidth: 1, borderRadius: 7, height: 40, alignItems: 'center' }} />\r\n\r\n                </View>\r\n            </Modal>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default PickupLocation;\r\n"]},"metadata":{},"sourceType":"module"}