{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport * as SecureStore from 'expo-secure-store';\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport OnBoarding from \"../screens/onboardin\";\nimport Login from \"../screens/login\";\nimport Register from \"../screens/register\";\nimport ResetPassword from \"../screens/reset\";\nimport Dashboard from \"../screens/dashboard\";\nimport Account from \"../screens/account\";\nimport CreditCard from \"../screens/card\";\nimport Room from \"../screens/room\";\nimport Booking from \"../screens/booking\";\nimport Managing from \"../screens/managing\";\nimport BottomNavigation from \"./bottomStack\";\nimport PickupLocation from \"../screens/pickuplocation\";\nimport Search from \"../screens/search\";\nimport Notification from \"../screens/notification\";\nimport Reservation from \"../screens/reservations\";\nimport Hotel from \"../screens/hotel\";\nimport Paid from \"../screens/successfullypaid\";\nimport Verify from \"./../screens/verify\";\nimport App from \"./../../App\";\nimport Payment from \"../screens/payment\";\nimport ComfirmAccount from \"../screens/comfirm\";\nvar Stack = createNativeStackNavigator();\n\nvar Route = function Route(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstTimeLaunch = _useState2[0],\n      setfirstTimeLaunch = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      token = _useState4[0],\n      settoken = _useState4[1];\n\n  var IsFirstTimeLaunch = function IsFirstTimeLaunch() {\n    return _regeneratorRuntime.async(function IsFirstTimeLaunch$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync('launched').then(function (value) {\n              if (value == null) {\n                setfirstTimeLaunch(true);\n                hasToken();\n              } else {\n                setfirstTimeLaunch(false);\n              }\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var hasToken = function hasToken() {\n    return _regeneratorRuntime.async(function hasToken$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync('token').then(function (value) {\n              if (value == null) {\n                settoken(false);\n                console.log(token + ' nn--' + value);\n              } else {\n                settoken(true);\n                console.log(token + ' ggg--' + value);\n              }\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    IsFirstTimeLaunch();\n  }, []);\n\n  if (firstTimeLaunch == true) {\n    return React.createElement(NavigationContainer, null, React.createElement(Stack.Navigator, {\n      initialRouteName: \"onbordingscreen\",\n      screenOptions: {\n        headerShown: false\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"onbordingscreen\",\n      component: OnBoarding\n    }), React.createElement(Stack.Screen, {\n      name: \"loginscreen\",\n      component: Login\n    }), React.createElement(Stack.Screen, {\n      name: \"registerscreen\",\n      component: Register\n    }), React.createElement(Stack.Screen, {\n      name: \"resetscreen\",\n      component: ResetPassword\n    }), React.createElement(Stack.Screen, {\n      name: \"bottonstackscreen\",\n      component: BottomNavigation\n    }), React.createElement(Stack.Screen, {\n      name: \"dashboardscreen\",\n      component: Dashboard\n    }), React.createElement(Stack.Screen, {\n      name: \"accountscreen\",\n      component: Account\n    }), React.createElement(Stack.Screen, {\n      name: \"creditcardscreen\",\n      component: CreditCard\n    }), React.createElement(Stack.Screen, {\n      name: \"roomscreen\",\n      component: Room\n    }), React.createElement(Stack.Screen, {\n      name: \"managingscreen\",\n      component: Managing\n    }), React.createElement(Stack.Screen, {\n      name: \"bookingscreen\",\n      component: Booking\n    }), React.createElement(Stack.Screen, {\n      name: \"pickuplocationscreen\",\n      component: PickupLocation\n    }), React.createElement(Stack.Screen, {\n      name: \"searchscreen\",\n      component: Search\n    }), React.createElement(Stack.Screen, {\n      name: \"notivationscreen\",\n      component: Notification\n    }), React.createElement(Stack.Screen, {\n      name: \"reservationscreen\",\n      component: Reservation\n    }), React.createElement(Stack.Screen, {\n      name: \"hotelscreen\",\n      component: Hotel\n    }), React.createElement(Stack.Screen, {\n      name: \"paidscreen\",\n      component: Paid\n    }), React.createElement(Stack.Screen, {\n      name: \"appscreen\",\n      component: App\n    }), React.createElement(Stack.Screen, {\n      name: \"verifyscreen\",\n      component: Verify\n    }), React.createElement(Stack.Screen, {\n      name: \"payscreen\",\n      component: Payment\n    }), React.createElement(Stack.Screen, {\n      name: \"comfirmscreen\",\n      component: ComfirmAccount\n    })));\n  } else {\n    if (token == false) {\n      return React.createElement(NavigationContainer, null, React.createElement(Stack.Navigator, {\n        initialRouteName: \"loginscreen\",\n        screenOptions: {\n          headerShown: false\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"loginscreen\",\n        component: Login\n      }), React.createElement(Stack.Screen, {\n        name: \"registerscreen\",\n        component: Register\n      }), React.createElement(Stack.Screen, {\n        name: \"resetscreen\",\n        component: ResetPassword\n      }), React.createElement(Stack.Screen, {\n        name: \"bottonstackscreen\",\n        component: BottomNavigation\n      }), React.createElement(Stack.Screen, {\n        name: \"dashboardscreen\",\n        component: Dashboard\n      }), React.createElement(Stack.Screen, {\n        name: \"accountscreen\",\n        component: Account\n      }), React.createElement(Stack.Screen, {\n        name: \"creditcardscreen\",\n        component: CreditCard\n      }), React.createElement(Stack.Screen, {\n        name: \"roomscreen\",\n        component: Room\n      }), React.createElement(Stack.Screen, {\n        name: \"managingscreen\",\n        component: Managing\n      }), React.createElement(Stack.Screen, {\n        name: \"bookingscreen\",\n        component: Booking\n      }), React.createElement(Stack.Screen, {\n        name: \"pickuplocationscreen\",\n        component: PickupLocation\n      }), React.createElement(Stack.Screen, {\n        name: \"searchscreen\",\n        component: Search\n      }), React.createElement(Stack.Screen, {\n        name: \"notivationscreen\",\n        component: Notification\n      }), React.createElement(Stack.Screen, {\n        name: \"reservationscreen\",\n        component: Reservation\n      }), React.createElement(Stack.Screen, {\n        name: \"hotelscreen\",\n        component: Hotel\n      }), React.createElement(Stack.Screen, {\n        name: \"paidscreen\",\n        component: Paid\n      }), React.createElement(Stack.Screen, {\n        name: \"verifyscreen\",\n        component: Verify\n      }), React.createElement(Stack.Screen, {\n        name: \"appscreen\",\n        component: App\n      }), React.createElement(Stack.Screen, {\n        name: \"payscreen\",\n        component: Payment\n      }), React.createElement(Stack.Screen, {\n        name: \"comfirmscreen\",\n        component: ComfirmAccount\n      })));\n    } else {\n      return React.createElement(NavigationContainer, null, React.createElement(Stack.Navigator, {\n        initialRouteName: \"loginscreen\",\n        screenOptions: {\n          headerShown: false\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"dashboardscreen\",\n        component: Dashboard\n      }), React.createElement(Stack.Screen, {\n        name: \"loginscreen\",\n        component: Login\n      }), React.createElement(Stack.Screen, {\n        name: \"registerscreen\",\n        component: Register\n      }), React.createElement(Stack.Screen, {\n        name: \"resetscreen\",\n        component: ResetPassword\n      }), React.createElement(Stack.Screen, {\n        name: \"bottonstackscreen\",\n        component: BottomNavigation\n      }), React.createElement(Stack.Screen, {\n        name: \"accountscreen\",\n        component: Account\n      }), React.createElement(Stack.Screen, {\n        name: \"creditcardscreen\",\n        component: CreditCard\n      }), React.createElement(Stack.Screen, {\n        name: \"roomscreen\",\n        component: Room\n      }), React.createElement(Stack.Screen, {\n        name: \"managingscreen\",\n        component: Managing\n      }), React.createElement(Stack.Screen, {\n        name: \"bookingscreen\",\n        component: Booking\n      }), React.createElement(Stack.Screen, {\n        name: \"pickuplocationscreen\",\n        component: PickupLocation\n      }), React.createElement(Stack.Screen, {\n        name: \"searchscreen\",\n        component: Search\n      }), React.createElement(Stack.Screen, {\n        name: \"notivationscreen\",\n        component: Notification\n      }), React.createElement(Stack.Screen, {\n        name: \"reservationscreen\",\n        component: Reservation\n      }), React.createElement(Stack.Screen, {\n        name: \"hotelscreen\",\n        component: Hotel\n      }), React.createElement(Stack.Screen, {\n        name: \"paidscreen\",\n        component: Paid\n      }), React.createElement(Stack.Screen, {\n        name: \"appscreen\",\n        component: App\n      }), React.createElement(Stack.Screen, {\n        name: \"verifyscreen\",\n        component: Verify\n      }), React.createElement(Stack.Screen, {\n        name: \"payscreen\",\n        component: Payment\n      }), React.createElement(Stack.Screen, {\n        name: \"comfirmscreen\",\n        component: ComfirmAccount\n      })));\n    }\n  }\n};\n\nexport default Route;","map":{"version":3,"sources":["D:/Development/Mobile Development/React native/Hotel/SunStar/SunStar/userapp/source/routes/systemroutes.tsx"],"names":["React","useEffect","useState","SecureStore","NavigationContainer","createNativeStackNavigator","OnBoarding","Login","Register","ResetPassword","Dashboard","Account","CreditCard","Room","Booking","Managing","BottomNavigation","PickupLocation","Search","Notification","Reservation","Hotel","Paid","Verify","App","Payment","ComfirmAccount","Stack","Route","navigation","firstTimeLaunch","setfirstTimeLaunch","token","settoken","IsFirstTimeLaunch","getItemAsync","then","value","hasToken","console","log","headerShown"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport OnBoarding from \"../screens/onboardin\";\r\nimport Login from \"../screens/login\";\r\nimport Register from \"../screens/register\";\r\nimport ResetPassword from \"../screens/reset\";\r\nimport Dashboard from \"../screens/dashboard\";\r\nimport Account from \"../screens/account\";\r\nimport CreditCard from \"../screens/card\";\r\nimport Room from \"../screens/room\";\r\nimport Booking from \"../screens/booking\";\r\nimport Managing from \"../screens/managing\";\r\nimport BottomNavigation from \"./bottomStack\";\r\nimport PickupLocation from \"../screens/pickuplocation\";\r\nimport Search from \"../screens/search\";\r\nimport Notification from \"../screens/notification\";\r\nimport Reservation from \"../screens/reservations\";\r\nimport Hotel from \"../screens/hotel\";\r\nimport Paid from \"../screens/successfullypaid\";\r\nimport Verify from './../screens/verify';\r\nimport App from './../../App';\r\nimport Payment from \"../screens/payment\";\r\nimport ComfirmAccount from \"../screens/comfirm\";\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nconst Route = ({ navigation }) => {\r\n\r\n  const [firstTimeLaunch, setfirstTimeLaunch] = useState(true)\r\n  const [token, settoken] = useState(true);\r\n\r\n  const IsFirstTimeLaunch = async () => {\r\n    await SecureStore.getItemAsync('launched')\r\n      .then((value) => {\r\n        if (value == null) {\r\n          setfirstTimeLaunch(true);\r\n          hasToken();\r\n        } else {\r\n          setfirstTimeLaunch(false);\r\n        }\r\n      });\r\n  }\r\n\r\n  const hasToken = async () => {\r\n    await SecureStore.getItemAsync('token')\r\n      .then((value) => {\r\n        if (value == null) {\r\n          settoken(false);\r\n          console.log(token + ' nn--' + value);\r\n        } else {\r\n          settoken(true);\r\n          console.log(token + ' ggg--' + value);\r\n\r\n        }\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    IsFirstTimeLaunch();\r\n  }, [])\r\n\r\n\r\n  if (firstTimeLaunch == true) {\r\n    return (\r\n      <NavigationContainer>\r\n        <Stack.Navigator\r\n          initialRouteName={\"onbordingscreen\"}\r\n          screenOptions={{ headerShown: false }}\r\n        >\r\n          <Stack.Screen name={\"onbordingscreen\"} component={OnBoarding} />\r\n          <Stack.Screen name={\"loginscreen\"} component={Login} />\r\n          <Stack.Screen name={\"registerscreen\"} component={Register} />\r\n          <Stack.Screen name={\"resetscreen\"} component={ResetPassword} />\r\n          <Stack.Screen name={\"bottonstackscreen\"} component={BottomNavigation} />\r\n          <Stack.Screen name={\"dashboardscreen\"} component={Dashboard} />\r\n          <Stack.Screen name={\"accountscreen\"} component={Account} />\r\n          <Stack.Screen name={\"creditcardscreen\"} component={CreditCard} />\r\n          <Stack.Screen name={\"roomscreen\"} component={Room} />\r\n          <Stack.Screen name={\"managingscreen\"} component={Managing} />\r\n          <Stack.Screen name={\"bookingscreen\"} component={Booking} />\r\n          <Stack.Screen name={\"pickuplocationscreen\"} component={PickupLocation} />\r\n          <Stack.Screen name={\"searchscreen\"} component={Search} />\r\n          <Stack.Screen name={\"notivationscreen\"} component={Notification} />\r\n          <Stack.Screen name={\"reservationscreen\"} component={Reservation} />\r\n          <Stack.Screen name={\"hotelscreen\"} component={Hotel} />\r\n          <Stack.Screen name={\"paidscreen\"} component={Paid} />\r\n          <Stack.Screen name={\"appscreen\"} component={App} />\r\n          <Stack.Screen name={\"verifyscreen\"} component={Verify} />\r\n          <Stack.Screen name={\"payscreen\"} component={Payment} />\r\n          <Stack.Screen name={\"comfirmscreen\"} component={ComfirmAccount} />\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    );\r\n  } else {\r\n\r\n    if (token == false) {\r\n      return (\r\n        <NavigationContainer>\r\n          <Stack.Navigator\r\n            initialRouteName={\"loginscreen\"}\r\n            screenOptions={{ headerShown: false }}\r\n          >\r\n            <Stack.Screen name={\"loginscreen\"} component={Login} />\r\n            <Stack.Screen name={\"registerscreen\"} component={Register} />\r\n            <Stack.Screen name={\"resetscreen\"} component={ResetPassword} />\r\n            <Stack.Screen name={\"bottonstackscreen\"} component={BottomNavigation} />\r\n            <Stack.Screen name={\"dashboardscreen\"} component={Dashboard} />\r\n            <Stack.Screen name={\"accountscreen\"} component={Account} />\r\n            <Stack.Screen name={\"creditcardscreen\"} component={CreditCard} />\r\n            <Stack.Screen name={\"roomscreen\"} component={Room} />\r\n            <Stack.Screen name={\"managingscreen\"} component={Managing} />\r\n            <Stack.Screen name={\"bookingscreen\"} component={Booking} />\r\n            <Stack.Screen name={\"pickuplocationscreen\"} component={PickupLocation} />\r\n            <Stack.Screen name={\"searchscreen\"} component={Search} />\r\n            <Stack.Screen name={\"notivationscreen\"} component={Notification} />\r\n            <Stack.Screen name={\"reservationscreen\"} component={Reservation} />\r\n            <Stack.Screen name={\"hotelscreen\"} component={Hotel} />\r\n            <Stack.Screen name={\"paidscreen\"} component={Paid} />\r\n            <Stack.Screen name={\"verifyscreen\"} component={Verify} />\r\n            <Stack.Screen name={\"appscreen\"} component={App} />\r\n            <Stack.Screen name={\"payscreen\"} component={Payment} />\r\n            <Stack.Screen name={\"comfirmscreen\"} component={ComfirmAccount} />\r\n\r\n          </Stack.Navigator>\r\n        </NavigationContainer>\r\n      )\r\n    } else {\r\n      return (\r\n        <NavigationContainer>\r\n          <Stack.Navigator\r\n            initialRouteName={\"loginscreen\"}\r\n            screenOptions={{ headerShown: false }}\r\n          >\r\n            <Stack.Screen name={\"dashboardscreen\"} component={Dashboard} />\r\n            <Stack.Screen name={\"loginscreen\"} component={Login} />\r\n            <Stack.Screen name={\"registerscreen\"} component={Register} />\r\n            <Stack.Screen name={\"resetscreen\"} component={ResetPassword} />\r\n            <Stack.Screen name={\"bottonstackscreen\"} component={BottomNavigation} />\r\n            <Stack.Screen name={\"accountscreen\"} component={Account} />\r\n            <Stack.Screen name={\"creditcardscreen\"} component={CreditCard} />\r\n            <Stack.Screen name={\"roomscreen\"} component={Room} />\r\n            <Stack.Screen name={\"managingscreen\"} component={Managing} />\r\n            <Stack.Screen name={\"bookingscreen\"} component={Booking} />\r\n            <Stack.Screen name={\"pickuplocationscreen\"} component={PickupLocation} />\r\n            <Stack.Screen name={\"searchscreen\"} component={Search} />\r\n            <Stack.Screen name={\"notivationscreen\"} component={Notification} />\r\n            <Stack.Screen name={\"reservationscreen\"} component={Reservation} />\r\n            <Stack.Screen name={\"hotelscreen\"} component={Hotel} />\r\n            <Stack.Screen name={\"paidscreen\"} component={Paid} />\r\n            <Stack.Screen name={\"appscreen\"} component={App} />\r\n            <Stack.Screen name={\"verifyscreen\"} component={Verify} />\r\n            <Stack.Screen name={\"payscreen\"} component={Payment} />\r\n            <Stack.Screen name={\"comfirmscreen\"} component={ComfirmAccount} />\r\n\r\n          </Stack.Navigator>\r\n        </NavigationContainer>\r\n      )\r\n    }\r\n  }\r\n};\r\n\r\nexport default Route\r\n"]},"metadata":{},"sourceType":"module"}