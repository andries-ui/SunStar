{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Formik } from 'formik';\nimport React, { useState } from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Snackbar, TextInput } from 'react-native-paper';\nimport ButtonComponent from \"../components/button\";\nimport InputComponent from \"../components/input\";\nimport TextComponent from \"../components/text\";\nimport style from \"../styles/screens/login\";\nimport Constance from \"../theme/const\";\nimport * as yup from 'yup';\nimport * as Animatable from 'react-native-animatable';\nimport axios from 'axios';\nimport Progress from \"../components/indicator\";\nimport Anim from \"../components/anim\";\nimport * as SecureStore from 'expo-secure-store';\nimport { registerIndieID } from 'native-notify';\nvar loginSchema = yup.object({\n  email: yup.string().required().email(),\n  password: yup.string().required().min(6)\n});\nvar url = \"https://sunstarapi.herokuapp.com/login\";\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setemail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setpassword = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      visible = _useState6[0],\n      setVisible = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      message = _useState8[0],\n      setmessage = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      load = _useState10[0],\n      setload = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      invalid = _useState12[0],\n      setinvalid = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      token = _useState14[0],\n      settoken = _useState14[1];\n\n  var handleSignIn = function handleSignIn(values) {\n    console.log(values);\n    setload(true);\n    var url = \"https://sunstarapi.herokuapp.com/login\";\n    axios.post(url, values).then(function _callee(res) {\n      var results;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              results = res.data;\n\n              if (!(results.status == 'Success')) {\n                _context.next = 12;\n                break;\n              }\n\n              setload(false);\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(SecureStore.setItemAsync('token', results.token));\n\n            case 5:\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(SecureStore.setItemAsync('key', \"\" + results.key));\n\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(registerIndieID(\"\" + results.key, 910, 'IBzo5MJJB46vcD3JGfjwRf'));\n\n            case 9:\n              navigation.navigate('dashboardscreen', {\n                key: results.key\n              });\n              _context.next = 15;\n              break;\n\n            case 12:\n              setmessage(results.message);\n              setinvalid(true);\n              setload(false);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }).catch(function (err) {\n      setinvalid(true);\n      setmessage(err);\n      console.log(err);\n      setload(false);\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%'\n    }\n  }, React.createElement(StatusBar, {\n    barStyle: 'dark-content'\n  }), React.createElement(View, {\n    style: style.parent\n  }, React.createElement(View, {\n    style: [style.topcontainer, {\n      justifyContent: 'center',\n      alignItems: 'center'\n    }]\n  }, React.createElement(View, {\n    style: {\n      position: 'absolute',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 90\n    }\n  }, React.createElement(Anim, {\n    json: require(\"../../assets/lottie/81243-login-successfully.json\"),\n    autoplay: true,\n    autosize: true,\n    loop: true,\n    speed: 1,\n    style: {\n      height: '100%',\n      width: '100%'\n    }\n  }))), React.createElement(View, {\n    style: style.bottomcontainer\n  }, React.createElement(TextComponent, {\n    style: {\n      fontSize: Constance.medium,\n      marginVertical: 15\n    },\n    text: \"Sign-in\"\n  }), React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: function onSubmit(values, action) {\n      var data = {\n        email: values.email,\n        password: values.password,\n        type: 'client'\n      };\n      handleSignIn(data);\n    },\n    validationSchema: loginSchema\n  }, function (props) {\n    return React.createElement(View, null, React.createElement(InputComponent, {\n      hint: \"E-mail\",\n      left: React.createElement(TextInput.Icon, {\n        name: \"at\"\n      }),\n      changeText: props.handleChange(\"email\"),\n      keyboard: \"email-address\",\n      value: props.values.email,\n      style: {\n        borderColor: Constance.light_border,\n        borderWidth: 1,\n        borderRadius: 5,\n        marginTop: 10\n      }\n    }), props.errors.email || null ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.email\n    })) : null, React.createElement(InputComponent, {\n      hint: \"Password\",\n      secured: visible,\n      keyboard: \"default\",\n      left: React.createElement(TextInput.Icon, {\n        name: \"lock\"\n      }),\n      right: React.createElement(TextInput.Icon, {\n        name: visible ? \"eye\" : \"eye-off\",\n        onPress: function onPress() {\n          return visible ? setVisible(false) : setVisible(true);\n        }\n      }),\n      changeText: props.handleChange(\"password\"),\n      value: props.values.password,\n      style: {\n        borderColor: Constance.light_border,\n        borderRadius: 5,\n        borderWidth: 1,\n        marginTop: 5\n      }\n    }), props.errors.password ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.password\n    })) : null, React.createElement(TextComponent, {\n      style: {\n        textAlign: 'right',\n        marginVertical: 5,\n        height: 30,\n        marginTop: 10,\n        fontWeight: 'bold'\n      },\n      text: \"Forgot Password?\",\n      press: function press() {\n        return navigation.navigate('comfirmscreen');\n      }\n    }), React.createElement(ButtonComponent, {\n      mode: \"contained\",\n      btnstyle: {\n        backgroundColor: Constance.Yellow,\n        marginTop: 0\n      },\n      lblstyle: {\n        color: Constance.White,\n        textTransform: 'capitalize'\n      },\n      text: \"Sign-in\",\n      press: props.handleSubmit\n    }));\n  }), React.createElement(ButtonComponent, {\n    mode: \"contained\",\n    btnstyle: {\n      backgroundColor: Constance.Grey\n    },\n    lblstyle: {\n      color: Constance.White,\n      textTransform: 'capitalize'\n    },\n    text: \"Register\",\n    press: function press() {\n      navigation.navigate('registerscreen');\n    }\n  })), React.createElement(Snackbar, {\n    visible: invalid,\n    onDismiss: function onDismiss() {\n      return setinvalid(false);\n    },\n    style: {\n      backgroundColor: Constance.Red\n    }\n  }, message)), load ? React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%',\n      position: 'absolute',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Progress, null)) : null);\n};\n\nexport default Login;","map":{"version":3,"sources":["D:/Development/Mobile Development/React native/Hotel/SunStar/SunStar/userapp/source/screens/login.tsx"],"names":["Formik","React","useState","Snackbar","TextInput","ButtonComponent","InputComponent","TextComponent","style","Constance","yup","Animatable","axios","Progress","Anim","SecureStore","registerIndieID","loginSchema","object","email","string","required","password","min","url","Login","navigation","setemail","setpassword","visible","setVisible","message","setmessage","load","setload","invalid","setinvalid","token","settoken","handleSignIn","values","console","log","post","then","res","results","data","status","setItemAsync","key","navigate","catch","err","height","width","parent","topcontainer","justifyContent","alignItems","position","padding","require","bottomcontainer","fontSize","medium","marginVertical","action","type","props","handleChange","borderColor","light_border","borderWidth","borderRadius","marginTop","errors","color","Red","textAlign","fontWeight","backgroundColor","Yellow","White","textTransform","handleSubmit","Grey"],"mappings":"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","sourcesContent":["import { Formik } from 'formik';\r\nimport React, { Component, useContext, useEffect, useRef, useState } from 'react'\r\nimport { Animated, Image, StatusBar, View } from 'react-native'\r\nimport { BottomNavigation, Snackbar, TextInput } from 'react-native-paper';\r\nimport ButtonComponent from '../components/button';\r\nimport InputComponent from '../components/input';\r\nimport TextComponent from '../components/text';\r\nimport style from '../styles/screens/login';\r\nimport Constance from '../theme/const';\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport * as yup from 'yup';\r\nimport * as Animatable from 'react-native-animatable';\r\nimport axios from 'axios';\r\nimport Progress from '../components/indicator';\r\nimport Anim from '../components/anim';\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport Dashboard from './dashboard';\r\nimport { registerIndieID } from 'native-notify';\r\n\r\n\r\nconst loginSchema = yup.object({\r\n  email: yup.string().required().email(),\r\n  password: yup.string().required().min(6),\r\n})\r\n\r\n\r\nconst url = \"https://sunstarapi.herokuapp.com/login\";\r\n\r\nconst Login = ({ navigation }) => {\r\n\r\n  const [email, setemail] = useState('');\r\n  const [password, setpassword] = useState('');\r\n  const [visible, setVisible] = useState(true);\r\n  const [message, setmessage] = useState('');\r\n  const [load, setload] = useState(false);\r\n  const [invalid, setinvalid] = useState(false);\r\n  const [token, settoken] = useState(false);\r\n\r\n  const handleSignIn = (values: any) => {\r\n\r\n    console.log(values);\r\n    setload(true);\r\n    const url = \"https://sunstarapi.herokuapp.com/login\"\r\n    axios.post(url, values).then(async (res) => {\r\n      const results = res.data;\r\n      if (results.status == 'Success') {\r\n        setload(false);\r\n\r\n        await SecureStore.setItemAsync('token', results.token);\r\n        await SecureStore.setItemAsync('key', `${results.key}`);\r\n          \r\n        await registerIndieID(`${results.key}`, 910, 'IBzo5MJJB46vcD3JGfjwRf');\r\n        navigation.navigate('dashboardscreen', { key: results.key });\r\n\r\n      } else {\r\n        setmessage(results.message);\r\n        setinvalid(true);\r\n        setload(false);\r\n      }\r\n    }).catch((err) => {\r\n      setinvalid(true);\r\n      setmessage(err);\r\n      console.log(err);\r\n      setload(false);\r\n\r\n    })\r\n\r\n\r\n  }\r\n\r\n    return (\r\n      <View style={{ height: '100%', width: '100%' }}>\r\n        <StatusBar barStyle={'dark-content'} />\r\n\r\n\r\n        <View style={style.parent}>\r\n\r\n          <View style={[style.topcontainer, { justifyContent: 'center', alignItems: 'center' }]}>\r\n            <View style={{ position: 'absolute', justifyContent: 'center', alignItems: 'center', padding: 90 }}>\r\n              <Anim json={require('../../assets/lottie/81243-login-successfully.json')} autoplay={true} autosize={true} loop={true} speed={1} style={{ height: '100%', width: '100%' }} />\r\n            </View>\r\n          </View>\r\n\r\n          <View style={style.bottomcontainer}>\r\n            <TextComponent style={{ fontSize: Constance.medium, marginVertical: 15 }} text='Sign-in' />\r\n\r\n            <Formik\r\n              initialValues={{ email: '', password: '' }}\r\n              onSubmit={(values, action) => {\r\n\r\n                let data = {\r\n                  email: values.email,\r\n                  password: values.password,\r\n                  type: 'client'\r\n                };\r\n\r\n                handleSignIn(data)\r\n              }}\r\n              validationSchema={loginSchema}\r\n            >\r\n\r\n              {(props) => (\r\n                <View>\r\n                  <InputComponent hint='E-mail'\r\n                    left={<TextInput.Icon name=\"at\" />}\r\n                    changeText={props.handleChange(\"email\")}\r\n                    keyboard={\"email-address\"}\r\n                    value={props.values.email}\r\n                    style={{\r\n                      borderColor: Constance.light_border,\r\n                      borderWidth: 1, borderRadius: 5, marginTop: 10\r\n                    }}\r\n                  />\r\n\r\n                  {props.errors.email || null ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red }} text={props.errors.email} /></Animatable.View> : null}\r\n                  <InputComponent hint='Password'\r\n                    secured={visible}\r\n                    keyboard={\"default\"}\r\n                    left={<TextInput.Icon name=\"lock\" />}\r\n                    right={<TextInput.Icon name={visible ? \"eye\" : \"eye-off\"} onPress={() => visible ? setVisible(false) : setVisible(true)} />}\r\n                    changeText={props.handleChange(\"password\")}\r\n                    value={props.values.password}\r\n                    style={{\r\n                      borderColor: Constance.light_border,\r\n                      borderRadius: 5,\r\n                      borderWidth: 1, marginTop: 5\r\n                    }}\r\n                  />\r\n                  {props.errors.password ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red }} text={props.errors.password} /></Animatable.View> : null}\r\n\r\n                  <TextComponent\r\n                    style={{ textAlign: 'right', marginVertical: 5, height: 30, marginTop: 10 , fontWeight:'bold'}} text='Forgot Password?' press={() => navigation.navigate('comfirmscreen')} />\r\n\r\n\r\n                  <ButtonComponent mode='contained' btnstyle={{ backgroundColor: Constance.Yellow, marginTop: 0 }} lblstyle={{ color: Constance.White, textTransform: 'capitalize' }} text='Sign-in' press={props.handleSubmit} />\r\n\r\n                </View>\r\n              )}\r\n            </Formik>\r\n            <ButtonComponent mode='contained' btnstyle={{ backgroundColor: Constance.Grey, }} lblstyle={{ color: Constance.White, textTransform: 'capitalize' }} text='Register' press={() => { navigation.navigate('registerscreen') }} />\r\n            {/* <ButtonComponent mode='text' btnstyle={{ position: 'absolute', bottom: 0, alignSelf: 'center' }} lblstyle={{ color: Constance.Black, textTransform: 'capitalize' }} text='Browse the app' press={() => navigation.navigate('dashboardscreen')} /> */}\r\n\r\n          </View>\r\n\r\n\r\n          <Snackbar\r\n            visible={invalid}\r\n            onDismiss={() => setinvalid(false)}\r\n            style={{backgroundColor: Constance.Red}}>\r\n            {message}\r\n          </Snackbar>\r\n        </View>\r\n\r\n        {load ? <View style={{ height: '100%', width: '100%', position: 'absolute', justifyContent: 'center', alignItems: 'center' }}>\r\n          <Progress />\r\n        </View> : null}\r\n\r\n      </View>\r\n    )\r\n  \r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}