{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ThemeContext } from \"../theme/themeProvider\";\nimport style from \"../styles/screens/room\";\nimport MapView, { MarkerAnimated, PROVIDER_GOOGLE } from 'react-native-maps';\nimport TextComponent from \"../components/text\";\nimport { Divider, Icon } from \"react-native-elements\";\nimport Constance from \"../theme/const\";\nimport ImageComponent from \"../components/image\";\nimport ButtonComponent from \"../components/button\";\nimport ActionBar from \"../components/actionbar\";\nimport Separator from \"../components/separater\";\nimport { useRoute } from '@react-navigation/native';\nimport axios from \"axios\";\nimport * as Location from 'expo-location';\nimport { requestForegroundPermissionsAsync } from \"expo-location\";\nimport MapViewDirections from 'react-native-maps-directions';\n\nvar Room = function Room(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme,\n      dark = _useContext.dark,\n      toggle = _useContext.toggle;\n\n  var params = useRoute().params;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      images = _useState2[0],\n      setimages = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tv = _useState4[0],\n      settv = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      parking = _useState6[0],\n      setparking = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      wifi = _useState8[0],\n      setwifi = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      hotelname = _useState10[0],\n      sethotelname = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      hotelKey = _useState12[0],\n      sethotelKey = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      bedtype = _useState14[0],\n      setbedtype = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      numOfBeds = _useState16[0],\n      setnumOfBeds = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      price = _useState18[0],\n      setprice = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      err = _useState20[0],\n      seterr = _useState20[1];\n\n  var _useState21 = useState(0),\n      _useState22 = _slicedToArray(_useState21, 2),\n      latitude = _useState22[0],\n      setlatitude = _useState22[1];\n\n  var _useState23 = useState(0),\n      _useState24 = _slicedToArray(_useState23, 2),\n      longitude = _useState24[0],\n      setlongitude = _useState24[1];\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 2),\n      coordinates = _useState26[0],\n      setcoordinates = _useState26[1];\n\n  var _useState27 = useState(),\n      _useState28 = _slicedToArray(_useState27, 2),\n      mapview = _useState28[0],\n      setmapview = _useState28[1];\n\n  var _useState29 = useState(''),\n      _useState30 = _slicedToArray(_useState29, 2),\n      floor = _useState30[0],\n      setfloor = _useState30[1];\n\n  var _Dimensions$get = Dimensions.get('window'),\n      width = _Dimensions$get.width,\n      height = _Dimensions$get.height;\n\n  var handleSelect = function handleSelect(key) {\n    navigation.navigate('roomscreen');\n  };\n\n  var GetProperty = function GetProperty() {\n    var locationUrl = \"https://sunstarapi.herokuapp.com/property/\" + params.key;\n    axios.get(locationUrl).then(function (property_res) {\n      settv(property_res.data.tv);\n      setparking(property_res.data.parking);\n      setwifi(property_res.data.wifi);\n      setimages(property_res.data.images);\n      setbedtype(property_res.data.bedtype);\n      setnumOfBeds(property_res.data.numberOfBed);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  var GetRoom = function GetRoom() {\n    axios.get(\"https://sunstarapi.herokuapp.com/room/\" + params.key).then(function (room_res) {\n      var room = room_res.data;\n      setprice(room.price);\n      sethotelKey(room.hotelId);\n      setfloor(room.floor);\n      console.log(room.hotelId, \"=====>>>>>>\");\n      axios.get(\"https://sunstarapi.herokuapp.com/hotel/\" + room.hotelId).then(function _callee(hotel_res) {\n        var room;\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                room = hotel_res.data;\n                sethotelname(room.name);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }).catch(function (err) {\n        console.log(err, \">>>>>>>>>\");\n      });\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  var starWarching = function starWarching() {\n    return _regeneratorRuntime.async(function starWarching$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(requestForegroundPermissionsAsync());\n\n          case 3:\n            _context2.next = 8;\n            break;\n\n          case 5:\n            _context2.prev = 5;\n            _context2.t0 = _context2[\"catch\"](0);\n            seterr(_context2.t0);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var updateState = function updateState() {\n    var _await$Location$reque, status, location, rigion;\n\n    return _regeneratorRuntime.async(function updateState$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n          case 3:\n            _await$Location$reque = _context3.sent;\n            status = _await$Location$reque.status;\n\n            if (!(status !== 'granted')) {\n              _context3.next = 7;\n              break;\n            }\n\n            return _context3.abrupt(\"return\");\n\n          case 7:\n            _context3.next = 9;\n            return _regeneratorRuntime.awrap(Location.watchPositionAsync({\n              accuracy: Location.Accuracy.High,\n              timeInterval: 10000,\n              distanceInterval: 80\n            }, function (location) {\n              setlatitude(location.coords.latitude);\n              setlongitude(location.coords.longitude);\n              setcoordinates([{\n                latitude: location.coords.latitude,\n                longitude: location.coords.longitude\n              }, {\n                latitude: -23.900163,\n                longitude: 29.449058\n              }]);\n            }));\n\n          case 9:\n            location = _context3.sent;\n            console.log(coordinates);\n            _context3.next = 13;\n            return _regeneratorRuntime.awrap(Location.reverseGeocodeAsync({\n              longitude: longitude,\n              latitude: latitude\n            }));\n\n          case 13:\n            rigion = _context3.sent;\n            _context3.next = 18;\n            break;\n\n          case 16:\n            _context3.prev = 16;\n            _context3.t0 = _context3[\"catch\"](0);\n\n          case 18:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 16]], Promise);\n  };\n\n  useEffect(function () {\n    GetRoom();\n    GetProperty();\n    starWarching();\n    updateState();\n  }, []);\n  return React.createElement(View, {\n    style: {\n      backgroundColor: theme.background,\n      height: '100%',\n      width: '100%'\n    }\n  }, React.createElement(StatusBar, {\n    barStyle: dark ? 'light-content' : 'dark-content',\n    backgroundColor: theme.background\n  }), React.createElement(View, {\n    style: style.map\n  }, React.createElement(MapView, {\n    provider: PROVIDER_GOOGLE,\n    style: style.map,\n    key: \"AIzaSyCSdP5YSrTZGe56so60mGDMdE9h4Rp-sR0\",\n    region: {\n      latitude: latitude,\n      longitude: longitude,\n      latitudeDelta: 0.0185,\n      longitudeDelta: 0.0185\n    },\n    ref: mapview,\n    zoomControlEnabled: true,\n    focusable: true,\n    hasTVPreferredFocus: true\n  }, coordinates.map(function (marker) {\n    return React.createElement(MarkerAnimated, {\n      coordinate: {\n        latitude: marker.latitude,\n        longitude: marker.longitude\n      },\n      title: \"params.address\",\n      image: require(\"../../assets/images/pin.png\"),\n      onDragEnd: function onDragEnd(e) {\n        return console.log({\n          x: e.nativeEvent.coordinate,\n          at: \"sdfhjk\"\n        });\n      }\n    });\n  }), React.createElement(MapViewDirections, {\n    origin: coordinates[0],\n    lineDashPattern: [10],\n    waypoints: coordinates,\n    destination: coordinates[1],\n    splitWaypoints: true,\n    apikey: \"AIzaSyCSdP5YSrTZGe56so60mGDMdE9h4Rp-sR0\",\n    strokeWidth: 5,\n    strokeColor: Constance.Green,\n    optimizeWaypoints: true,\n    onStart: function onStart(params) {\n      console.log(\"Started routing between \\\"\" + params.origin + \"\\\" and \\\"\" + params.destination + \"\\\"\");\n    },\n    onReady: function onReady(result) {\n      console.log(\"Distance: \" + result.distance + \" km\");\n      console.log(\"Duration: \" + result.duration + \" min.\");\n    },\n    onError: function onError(errorMessage) {\n      console.log(errorMessage);\n    }\n  })), React.createElement(ActionBar, {\n    backOpacity: theme.borderAlt,\n    barStyle: {\n      position: 'absolute'\n    },\n    backgroundColor: null,\n    onBackPress: function onBackPress() {\n      return navigation.goBack();\n    },\n    iconBack: Platform.OS === 'ios' ? 'chevron-back' : 'arrow-back'\n  })), React.createElement(View, {\n    style: [style.content, {\n      backgroundColor: theme.borderAlt\n    }]\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false\n  }, React.createElement(View, null, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      marginVertical: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'flex-start',\n      alignItems: 'center'\n    }\n  }, React.createElement(Icon, {\n    type: \"ionicon\",\n    name: \"star\",\n    color: theme.gold,\n    size: 16\n  }), React.createElement(TextComponent, {\n    text: 3.6,\n    style: {\n      fontSize: Constance.small,\n      color: theme.text,\n      fontWeight: '900'\n    }\n  })), React.createElement(TextComponent, {\n    text: 'views',\n    style: {\n      fontSize: Constance.small,\n      color: theme.text,\n      fontWeight: 'bold'\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.navigate('hotelscreen', {\n        key: hotelKey\n      });\n    }\n  }, React.createElement(TextComponent, {\n    text: hotelname,\n    style: {\n      fontSize: Constance.large,\n      color: theme.text,\n      fontWeight: 'bold'\n    }\n  })), React.createElement(FlatList, {\n    pagingEnabled: true,\n    ItemSeparatorComponent: Separator,\n    horizontal: true,\n    data: images,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item,\n          index = _ref2.index;\n      return React.createElement(ImageComponent, {\n        key: index,\n        image: {\n          uri: item\n        },\n        text: item.name\n      });\n    }\n  }), React.createElement(View, {\n    style: [{\n      flexDirection: 'row',\n      paddingBottom: 20,\n      marginTop: 10,\n      justifyContent: \"space-between\"\n    }]\n  }, React.createElement(View, {\n    style: [{\n      width: '50%',\n      paddingHorizontal: 2\n    }]\n  }, React.createElement(TextComponent, {\n    text: 'Room setting',\n    style: {\n      fontSize: Constance.semi_large,\n      color: theme.text,\n      fontWeight: 'bold'\n    }\n  }), React.createElement(Divider, {\n    style: [{\n      height: Constance.smallDivider,\n      marginHorizontal: 2,\n      backgroundColor: theme.background\n    }]\n  }), React.createElement(TextComponent, {\n    text: numOfBeds + \" beds\",\n    style: {\n      fontSize: Constance.small,\n      color: theme.text,\n      fontWeight: '600'\n    }\n  }), React.createElement(TextComponent, {\n    text: bedtype + \" bed\",\n    style: {\n      fontSize: Constance.small,\n      color: theme.text,\n      fontWeight: '600'\n    }\n  }), React.createElement(TextComponent, {\n    text: \"Level \" + floor,\n    style: {\n      fontSize: Constance.small,\n      color: theme.text,\n      fontWeight: '600'\n    }\n  }), React.createElement(TextComponent, {\n    text: 'Internal bathroom',\n    style: {\n      fontSize: Constance.small,\n      color: theme.text,\n      fontWeight: '600'\n    }\n  })), React.createElement(View, {\n    style: [{\n      width: '50%',\n      paddingHorizontal: 2\n    }]\n  }, React.createElement(TextComponent, {\n    text: 'Services',\n    style: {\n      fontSize: Constance.semi_large,\n      color: theme.text,\n      fontWeight: 'bold'\n    }\n  }), React.createElement(Divider, {\n    style: [{\n      height: Constance.smallDivider,\n      marginHorizontal: 2,\n      backgroundColor: theme.background\n    }]\n  }), React.createElement(TextComponent, {\n    text: 'breakfast',\n    style: {\n      fontSize: Constance.small,\n      color: theme.text,\n      fontWeight: '600'\n    }\n  }), React.createElement(TextComponent, {\n    text: 'lunch',\n    style: {\n      fontSize: Constance.small,\n      color: theme.text,\n      fontWeight: '600'\n    }\n  })), React.createElement(TextComponent, {\n    text: \"R \" + price,\n    style: {\n      textAlign: 'right',\n      fontSize: Constance.small,\n      color: theme.text,\n      fontWeight: 'bold',\n      position: 'absolute',\n      right: 12,\n      bottom: 0,\n      borderTopWidth: 2,\n      borderTopColor: theme.backgroundAlt\n    }\n  })), React.createElement(View, {\n    style: {\n      paddingHorizontal: 30,\n      height: 50,\n      marginHorizontal: 20,\n      borderRadius: 12,\n      marginTop: 20,\n      shadowOpacity: 0.08,\n      shadowOffset: {\n        width: 20,\n        height: 10\n      },\n      backgroundColor: theme.backgroundAlt,\n      shadowColor: theme.text,\n      justifyContent: 'space-between',\n      flexDirection: 'row'\n    }\n  }, React.createElement(View, {\n    style: {\n      width: 40,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Icon, {\n    type: \"material-community\",\n    name: \"parking\",\n    color: parking == \"true\" ? Constance.Green : Constance.Red\n  })), React.createElement(View, {\n    style: {\n      width: 40,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Icon, {\n    type: \"material-community\",\n    name: \"wifi\",\n    color: wifi == \"true\" ? Constance.Green : Constance.Red\n  })), React.createElement(View, {\n    style: {\n      width: 40,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Icon, {\n    type: \"material-community\",\n    name: \"television\",\n    color: tv == \"true\" ? Constance.Green : Constance.Red\n  })), React.createElement(View, {\n    style: {\n      width: 40,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Icon, {\n    type: \"material-community\",\n    name: \"security\",\n    color: Constance.Green\n  }))), React.createElement(View, {\n    style: {\n      height: 80\n    }\n  }, React.createElement(ButtonComponent, {\n    btnstyle: {\n      position: 'absolute',\n      right: 5,\n      bottom: 5,\n      borderRadius: 12,\n      backgroundColor: Constance.Gold\n    },\n    text: \"Book\",\n    lblstyle: {\n      color: Constance.White\n    },\n    mode: 'text',\n    press: function press() {\n      navigation.navigate('bookingscreen', {\n        key: params.key,\n        hotelKey: hotelKey,\n        roomkey: params.key\n      });\n    }\n  }))))));\n};\n\nexport default Room;","map":{"version":3,"sources":["D:/Development/Mobile Development/React native/Hotel/SunStar/SunStar/userapp/source/screens/room.tsx"],"names":["React","useContext","useEffect","useState","ThemeContext","style","MapView","MarkerAnimated","PROVIDER_GOOGLE","TextComponent","Divider","Icon","Constance","ImageComponent","ButtonComponent","ActionBar","Separator","useRoute","axios","Location","requestForegroundPermissionsAsync","MapViewDirections","Room","navigation","theme","dark","toggle","params","images","setimages","tv","settv","parking","setparking","wifi","setwifi","hotelname","sethotelname","hotelKey","sethotelKey","bedtype","setbedtype","numOfBeds","setnumOfBeds","price","setprice","err","seterr","latitude","setlatitude","longitude","setlongitude","coordinates","setcoordinates","mapview","setmapview","floor","setfloor","Dimensions","get","width","height","handleSelect","key","navigate","GetProperty","locationUrl","then","property_res","data","numberOfBed","catch","console","log","GetRoom","room_res","room","hotelId","hotel_res","name","starWarching","updateState","status","watchPositionAsync","accuracy","Accuracy","High","timeInterval","distanceInterval","location","coords","reverseGeocodeAsync","rigion","backgroundColor","background","map","latitudeDelta","longitudeDelta","marker","require","e","x","nativeEvent","coordinate","at","Green","origin","destination","result","distance","duration","errorMessage","borderAlt","position","goBack","Platform","OS","content","flexDirection","justifyContent","marginVertical","alignItems","gold","fontSize","small","color","text","fontWeight","large","item","index","uri","paddingBottom","marginTop","paddingHorizontal","semi_large","smallDivider","marginHorizontal","textAlign","right","bottom","borderTopWidth","borderTopColor","backgroundAlt","borderRadius","shadowOpacity","shadowOffset","shadowColor","Red","Gold","White","roomkey"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Dimensions, FlatList, Platform, ScrollView, StatusBar, TouchableOpacity, View } from \"react-native\";\r\nimport { ThemeContext } from \"../theme/themeProvider\";\r\nimport style from \"../styles/screens/room\";\r\nimport MapView, { DirectionsRenderer, Marker, MarkerAnimated, PROVIDER_GOOGLE } from 'react-native-maps';\r\nimport TextComponent from \"../components/text\";\r\nimport { Divider, Icon } from \"react-native-elements\";\r\nimport Constance from \"../theme/const\";\r\nimport ImageComponent from \"../components/image\";\r\nimport ButtonComponent from \"../components/button\";\r\nimport ActionBar from \"../components/actionbar\";\r\nimport Separator from \"../components/separater\";\r\nimport NearestItemComponent from \"../components/nearest\";\r\nimport { useRoute } from '@react-navigation/native';\r\nimport * as TaskManager from 'expo-task-manager';\r\nimport axios from \"axios\";\r\nimport * as Location from 'expo-location';\r\nimport { requestForegroundPermissionsAsync } from \"expo-location\";\r\nimport MapViewDirections from 'react-native-maps-directions';\r\nimport { registerIndieID } from 'native-notify';\r\n\r\nconst Room = ({ navigation }) => {\r\n\r\n    const { theme, dark, toggle } = useContext(ThemeContext)\r\n\r\n    const params = useRoute().params;\r\n    const [images, setimages] = useState();\r\n    const [tv, settv] = useState();\r\n    const [parking, setparking] = useState();\r\n    const [wifi, setwifi] = useState();\r\n    const [hotelname, sethotelname] = useState('');\r\n    const [hotelKey, sethotelKey] = useState('');\r\n    const [bedtype, setbedtype] = useState('');\r\n    const [numOfBeds, setnumOfBeds] = useState('');\r\n    const [price, setprice] = useState('');\r\n    const [err, seterr] = useState('');\r\n    const [latitude, setlatitude] = useState<number>(0);\r\n    const [longitude, setlongitude] = useState<number>(0);\r\n    const [coordinates, setcoordinates] = useState<any>([]);\r\n    const [mapview, setmapview] = useState<any>();\r\n    const [floor, setfloor] = useState('');\r\n\r\n    const { width, height } = Dimensions.get('window');\r\n\r\n    const handleSelect = (key) => {\r\n        navigation.navigate('roomscreen');\r\n    }\r\n\r\n    const GetProperty = () => {\r\n        const locationUrl = `https://sunstarapi.herokuapp.com/property/${params.key}`;\r\n        axios.get(locationUrl).then((property_res) => {\r\n\r\n            settv(property_res.data.tv);\r\n            setparking(property_res.data.parking)\r\n            setwifi(property_res.data.wifi);\r\n            setimages(property_res.data.images);\r\n            setbedtype(property_res.data.bedtype);\r\n            setnumOfBeds(property_res.data.numberOfBed)\r\n\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const GetRoom = () => {\r\n        axios.get(`https://sunstarapi.herokuapp.com/room/${params.key}`).then((room_res) => {\r\n            let room = room_res.data;\r\n            setprice(room.price);\r\n            sethotelKey(room.hotelId);\r\n            setfloor(room.floor)\r\n            console.log(room.hotelId, \"=====>>>>>>\");\r\n\r\n            axios.get(`https://sunstarapi.herokuapp.com/hotel/${room.hotelId}`).then(async (hotel_res) => {\r\n                let room = hotel_res.data;\r\n                sethotelname(room.name);\r\n\r\n            }).catch((err) => {\r\n                console.log(err, \">>>>>>>>>\")\r\n            })\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    // const LOCATION_TASK_NAME = 'background-location-task';\r\n    // TaskManager.defineTask(LOCATION_TASK_NAME, ( data:any, error:any ) => {\r\n    //     if (error) {\r\n    //         console.log(error);\r\n\r\n    //         return;\r\n    //     }\r\n    //     if (data) {\r\n    //         const { locations } = data;\r\n    //         setlatitude(locations.coords.latitude);\r\n    //         setlongitude(locations.coords.longitude);\r\n    //         // do something with the locations captured in the background\r\n    //     }\r\n    // });\r\n\r\n    const starWarching = async () => {\r\n        try {\r\n            await requestForegroundPermissionsAsync();\r\n        } catch (err: any) {\r\n            seterr(err)\r\n        }\r\n    }\r\n\r\n    const updateState = async () => {\r\n\r\n        try {\r\n\r\n            const { status } = await Location.requestForegroundPermissionsAsync();\r\n\r\n            if (status !== 'granted') { return; }\r\n\r\n            let location = await Location.watchPositionAsync({\r\n                accuracy: Location.Accuracy.High,\r\n                timeInterval: 10000,\r\n                distanceInterval: 80,\r\n            }, (location: any) => {\r\n\r\n                setlatitude(location.coords.latitude);\r\n                setlongitude(location.coords.longitude);\r\n                setcoordinates([{ latitude: location.coords.latitude, longitude: location.coords.longitude }, { latitude: -23.900163, longitude: 29.449058 }])\r\n\r\n            })\r\n\r\n\r\n            console.log(coordinates);\r\n\r\n            let rigion = await Location.reverseGeocodeAsync({\r\n                longitude,\r\n                latitude\r\n            });\r\n\r\n\r\n\r\n        } catch (err) {\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        GetRoom();\r\n        GetProperty();\r\n\r\n        starWarching();\r\n        updateState();\r\n    }, [])\r\n\r\n    return (\r\n        <View style={{ backgroundColor: theme.background, height: '100%', width: '100%' }}>\r\n            <StatusBar barStyle={dark ? 'light-content' : 'dark-content'} backgroundColor={theme.background} />\r\n\r\n            <View style={style.map}>\r\n                <MapView\r\n                    provider={PROVIDER_GOOGLE} // remove if not using Google Maps\r\n                    style={style.map}\r\n                    key={\"AIzaSyCSdP5YSrTZGe56so60mGDMdE9h4Rp-sR0\"}\r\n                    region={{\r\n                        latitude: latitude,\r\n                        longitude: longitude,\r\n                        latitudeDelta: 0.0185,\r\n                        longitudeDelta: 0.0185,\r\n                    }}\r\n                    ref={mapview}\r\n                    zoomControlEnabled\r\n                    focusable\r\n                    hasTVPreferredFocus\r\n                >\r\n                    {coordinates.map((marker) =>\r\n                        <MarkerAnimated\r\n                            coordinate={{ latitude: marker.latitude, longitude: marker.longitude }}\r\n                            title={\"params.address\"}\r\n                            image={require('../../assets/images/pin.png')}\r\n                            onDragEnd={(e) => console.log({ x: e.nativeEvent.coordinate, at: \"sdfhjk\" })}\r\n                        />)}\r\n\r\n\r\n                    <MapViewDirections\r\n                        origin={coordinates[0]}\r\n                        lineDashPattern={[10]}\r\n                        waypoints={coordinates}\r\n                        destination={coordinates[1]}\r\n                        splitWaypoints={true}\r\n\r\n                        apikey={\"AIzaSyCSdP5YSrTZGe56so60mGDMdE9h4Rp-sR0\"}\r\n                        strokeWidth={5}\r\n                        strokeColor={Constance.Green}\r\n                        optimizeWaypoints={true}\r\n                        onStart={(params) => {\r\n                            console.log(`Started routing between \"${params.origin}\" and \"${params.destination}\"`);\r\n                        }}\r\n\r\n                        onReady={result => {\r\n                            console.log(`Distance: ${result.distance} km`);\r\n                            console.log(`Duration: ${result.duration} min.`);\r\n\r\n\r\n\r\n                        }}\r\n                        onError={(errorMessage) => {\r\n                            console.log(errorMessage);\r\n                        }}\r\n                    />\r\n                </MapView>\r\n                <ActionBar backOpacity={theme.borderAlt} barStyle={{ position: 'absolute' }} backgroundColor={null} onBackPress={() => navigation.goBack()} iconBack={Platform.OS === 'ios' ? 'chevron-back' : 'arrow-back'} />\r\n\r\n            </View>\r\n\r\n\r\n            <View style={[style.content, { backgroundColor: theme.borderAlt }]}>\r\n                <ScrollView showsVerticalScrollIndicator={false}>\r\n                    <View >\r\n\r\n                        <View style={{ flexDirection: 'row', justifyContent: 'space-between', marginVertical: 5 }}>\r\n                            <View style={{ flexDirection: 'row', justifyContent: 'flex-start', alignItems: 'center' }}>\r\n                                <Icon type='ionicon' name='star' color={theme.gold} size={16} />\r\n                                <TextComponent text={3.6} style={{ fontSize: Constance.small, color: theme.text, fontWeight: '900' }} />\r\n                            </View>\r\n                            <TextComponent text={'views'} style={{ fontSize: Constance.small, color: theme.text, fontWeight: 'bold' }} />\r\n                        </View>\r\n                        <TouchableOpacity onPress={() => { navigation.navigate('hotelscreen', { key: hotelKey }) }}>\r\n                            <TextComponent text={hotelname} style={{ fontSize: Constance.large, color: theme.text, fontWeight: 'bold' }} />\r\n                        </TouchableOpacity>\r\n\r\n                        <FlatList pagingEnabled ItemSeparatorComponent={Separator} horizontal data={images} renderItem={({ item, index }) => (\r\n                            <ImageComponent key={index} image={{ uri: item }} text={item.name} />\r\n                        )} />\r\n\r\n\r\n                        <View style={[{ flexDirection: 'row', paddingBottom: 20, marginTop: 10, justifyContent: \"space-between\" }]}>\r\n                            <View style={[{ width: '50%', paddingHorizontal: 2 }]}>\r\n                                <TextComponent text={'Room setting'} style={{ fontSize: Constance.semi_large, color: theme.text, fontWeight: 'bold' }} />\r\n                                <Divider style={[{ height: Constance.smallDivider, marginHorizontal: 2, backgroundColor: theme.background }]} />\r\n                                <TextComponent text={`${numOfBeds} beds`} style={{ fontSize: Constance.small, color: theme.text, fontWeight: '600' }} />\r\n                                <TextComponent text={`${bedtype} bed`} style={{ fontSize: Constance.small, color: theme.text, fontWeight: '600' }} />\r\n                                <TextComponent text={`Level ${floor}`} style={{ fontSize: Constance.small, color: theme.text, fontWeight: '600' }} />\r\n                                <TextComponent text={'Internal bathroom'} style={{ fontSize: Constance.small, color: theme.text, fontWeight: '600' }} />\r\n\r\n                            </View>\r\n                            <View style={[{ width: '50%', paddingHorizontal: 2, }]}>\r\n                                <TextComponent text={'Services'} style={{ fontSize: Constance.semi_large, color: theme.text, fontWeight: 'bold' }} />\r\n                                <Divider style={[{ height: Constance.smallDivider, marginHorizontal: 2, backgroundColor: theme.background }]} />\r\n                                <TextComponent text={'breakfast'} style={{ fontSize: Constance.small, color: theme.text, fontWeight: '600' }} />\r\n                                <TextComponent text={'lunch'} style={{ fontSize: Constance.small, color: theme.text, fontWeight: '600' }} />\r\n\r\n                            </View>\r\n\r\n                            <TextComponent text={`R ${price}`} style={{ textAlign: 'right', fontSize: Constance.small, color: theme.text, fontWeight: 'bold', position: 'absolute', right: 12, bottom: 0, borderTopWidth: 2, borderTopColor: theme.backgroundAlt }} />\r\n\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            paddingHorizontal: 30,\r\n                            height: 50, marginHorizontal: 20, borderRadius: 12, marginTop: 20,\r\n                            shadowOpacity: 0.08,\r\n                            shadowOffset: {\r\n                                width: 20,\r\n                                height: 10,\r\n                            }, backgroundColor: theme.backgroundAlt, shadowColor: theme.text, justifyContent: 'space-between', flexDirection: 'row'\r\n                        }}>\r\n                            <View style={{ width: 40, justifyContent: 'center', alignItems: 'center' }}>\r\n                                <Icon type=\"material-community\" name=\"parking\" color={parking == \"true\" ? Constance.Green : Constance.Red} />\r\n                            </View>\r\n                            <View style={{ width: 40, justifyContent: 'center', alignItems: 'center' }}>\r\n                                <Icon type=\"material-community\" name=\"wifi\" color={wifi == \"true\" ? Constance.Green : Constance.Red} />\r\n                            </View>\r\n                            <View style={{ width: 40, justifyContent: 'center', alignItems: 'center' }}>\r\n                                <Icon type=\"material-community\" name=\"television\" color={tv == \"true\" ? Constance.Green : Constance.Red} />\r\n                            </View>\r\n                            <View style={{ width: 40, justifyContent: 'center', alignItems: 'center' }}>\r\n                                <Icon type=\"material-community\" name=\"security\" color={Constance.Green} />\r\n                            </View>\r\n                        </View>\r\n\r\n                        <View style={{ height: 80 }}>\r\n                            <ButtonComponent btnstyle={{ position: 'absolute', right: 5, bottom: 5, borderRadius: 12, backgroundColor: Constance.Gold }}\r\n                                text={\"Book\"}\r\n                                lblstyle={{ color: Constance.White }}\r\n                                mode={'text'}\r\n                                press={() => { navigation.navigate('bookingscreen', { key: params.key, hotelKey: hotelKey, roomkey: params.key }) }}\r\n                            />\r\n                        </View>\r\n                    </View>\r\n                </ScrollView>\r\n            </View>\r\n        </View>\r\n\r\n    )\r\n}\r\n\r\nexport default Room;"]},"metadata":{},"sourceType":"module"}