{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Icon } from \"react-native-elements\";\nimport ActionBar from \"../components/actionbar\";\nimport Constance from \"../theme/const\";\nimport { ThemeContext } from \"../theme/themeProvider\";\nimport CalendarPicker from 'react-native-calendar-picker';\nimport style from \"./../styles/screens/managing\";\nimport Modal from \"react-native-modalbox\";\nimport modal from \"../styles/components/modal\";\nimport { Divider, Snackbar } from \"react-native-paper\";\nimport StarRating from 'react-native-star-rating';\nimport InputComponent from \"../components/input\";\nimport { useRoute } from '@react-navigation/native';\nimport axios from 'axios';\nimport * as SecureStore from 'expo-secure-store';\nimport Progress from \"../components/indicator\";\n\nvar Managing = function Managing(_ref) {\n  var navigation = _ref.navigation;\n  var params = useRoute().params;\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme,\n      dark = _useContext.dark,\n      toggle = _useContext.toggle;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedStartDate = _useState2[0],\n      setSelectedStartDate = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedEndDate = _useState4[0],\n      setSelectedEndDate = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      amountDue = _useState6[0],\n      setamountDue = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isDatePickerVisible = _useState8[0],\n      setDatePickerVisibility = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      year = _useState10[0],\n      setyear = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      month = _useState12[0],\n      setmonth = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      day = _useState14[0],\n      setday = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      price = _useState16[0],\n      setprice = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      pickdates = _useState18[0],\n      setpickdates = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      modalroomrating = _useState20[0],\n      setmodalroomrating = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      modalhotelrating = _useState22[0],\n      setmodalhotelrating = _useState22[1];\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      modalsystemrating = _useState24[0],\n      setmodalsystemrating = _useState24[1];\n\n  var _useState25 = useState(),\n      _useState26 = _slicedToArray(_useState25, 2),\n      roomrating = _useState26[0],\n      setroomrating = _useState26[1];\n\n  var _useState27 = useState(),\n      _useState28 = _slicedToArray(_useState27, 2),\n      hotelrating = _useState28[0],\n      sethotelrating = _useState28[1];\n\n  var _useState29 = useState(),\n      _useState30 = _slicedToArray(_useState29, 2),\n      systemrating = _useState30[0],\n      setsystemrating = _useState30[1];\n\n  var _useState31 = useState(),\n      _useState32 = _slicedToArray(_useState31, 2),\n      roomcomment = _useState32[0],\n      setroomcomment = _useState32[1];\n\n  var _useState33 = useState(),\n      _useState34 = _slicedToArray(_useState33, 2),\n      hotelcomment = _useState34[0],\n      sethotelcomment = _useState34[1];\n\n  var _useState35 = useState(),\n      _useState36 = _slicedToArray(_useState35, 2),\n      systemcomment = _useState36[0],\n      setsystemcomment = _useState36[1];\n\n  var _useState37 = useState(''),\n      _useState38 = _slicedToArray(_useState37, 2),\n      startDate = _useState38[0],\n      setstartDate = _useState38[1];\n\n  var _useState39 = useState(''),\n      _useState40 = _slicedToArray(_useState39, 2),\n      endDate = _useState40[0],\n      setendDate = _useState40[1];\n\n  var _useState41 = useState(''),\n      _useState42 = _slicedToArray(_useState41, 2),\n      days = _useState42[0],\n      setdays = _useState42[1];\n\n  var _useState43 = useState(false),\n      _useState44 = _slicedToArray(_useState43, 2),\n      load = _useState44[0],\n      setload = _useState44[1];\n\n  var _useState45 = useState(true),\n      _useState46 = _slicedToArray(_useState45, 2),\n      activelyCheckedIn = _useState46[0],\n      setactivelyCheckedIn = _useState46[1];\n\n  var _useState47 = useState(''),\n      _useState48 = _slicedToArray(_useState47, 2),\n      service = _useState48[0],\n      setservice = _useState48[1];\n\n  var _useState49 = useState([]),\n      _useState50 = _slicedToArray(_useState49, 2),\n      details = _useState50[0],\n      setdetails = _useState50[1];\n\n  var _useState51 = useState(false),\n      _useState52 = _slicedToArray(_useState51, 2),\n      invalid = _useState52[0],\n      setinvalid = _useState52[1];\n\n  var _useState53 = useState(''),\n      _useState54 = _slicedToArray(_useState53, 2),\n      message = _useState54[0],\n      setmessage = _useState54[1];\n\n  var _useState55 = useState(),\n      _useState56 = _slicedToArray(_useState55, 2),\n      timer = _useState56[0],\n      settimer = _useState56[1];\n\n  var showDatePicker = function showDatePicker() {\n    setDatePickerVisibility(true);\n  };\n\n  var hideDatePicker = function hideDatePicker() {\n    setDatePickerVisibility(false);\n  };\n\n  var handlePriceCalculation = function handlePriceCalculation(startdate, enddate) {\n    var one_day = 1000 * 60 * 60 * 24;\n    var days = Math.round(enddate - startdate) / one_day;\n    setamountDue((parseInt(price) * days).toString());\n    setday(days);\n  };\n\n  var CountDown = function CountDown(updateDate) {\n    for (var i = 0; i > 5; i++) {\n      setTimeout(function () {\n        var now = new Date().getTime();\n        var update = new Date(updateDate).getTime();\n        var distance = now - update;\n        var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n        var hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n        var minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n        var seconds = Math.floor(distance % (1000 * 60) / 1000);\n        settimer(hours + \":\" + minutes + \":\" + seconds + \" \");\n      }, 100);\n    }\n  };\n\n  var GetSesshionNotification = function GetSesshionNotification() {\n    return _regeneratorRuntime.async(function GetSesshionNotification$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setload(true);\n            console.log(params.data._id);\n            axios.patch(\"https://sunstarapi.herokuapp.com/roomReservation/\" + params.data._id, {}).then(function _callee2(res) {\n              var date, key, title, message, notification;\n              return _regeneratorRuntime.async(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      date = new Date();\n                      _context2.next = 3;\n                      return _regeneratorRuntime.awrap(SecureStore.getItemAsync('key'));\n\n                    case 3:\n                      _context2.t0 = _context2.sent;\n\n                      if (_context2.t0) {\n                        _context2.next = 6;\n                        break;\n                      }\n\n                      _context2.t0 = 'null';\n\n                    case 6:\n                      key = _context2.t0;\n                      title = \"Cheched out.\";\n                      message = \"You have successfully checked out, The hotel will alergebly accept you only withing the upcoming 60 min counting down from \" + date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds() + \" on \" + date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\n                      notification = {\n                        userId: key,\n                        title: title,\n                        message: message\n                      };\n                      axios.post(\"https://sunstarapi.herokuapp.com/userNotifications\", notification).then(function _callee(notificationRes) {\n                        return _regeneratorRuntime.async(function _callee$(_context) {\n                          while (1) {\n                            switch (_context.prev = _context.next) {\n                              case 0:\n                                if (notificationRes.data.status === \"Success\") {\n                                  axios.post(\"https://app.nativenotify.com/api/indie/notification\", {\n                                    subID: key,\n                                    appId: 910,\n                                    appToken: 'IBzo5MJJB46vcD3JGfjwRf',\n                                    title: title,\n                                    message: \"\" + message,\n                                    pushData: {\n                                      screen: \"notivationscreen\"\n                                    }\n                                  }).then(function (res) {\n                                    setinvalid(true);\n                                    GetReservations();\n                                    setmessage('Request sent successfully');\n                                    setload(false);\n                                  }).catch(function (err) {\n                                    setload(false);\n                                    console.log(err + \"===\");\n                                  });\n                                } else {\n                                  setinvalid(true);\n                                  setmessage('Request was not sent');\n                                  setload(false);\n                                  console.log(notificationRes.data.details);\n                                }\n\n                              case 1:\n                              case \"end\":\n                                return _context.stop();\n                            }\n                          }\n                        }, null, null, null, Promise);\n                      }).catch(function (err) {\n                        setinvalid(true);\n                        setmessage('Request was not sent');\n                        setload(false);\n                        console.log(err + \"======\");\n                      });\n\n                    case 11:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).catch(function (err) {\n              console.log(err);\n            });\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var ExtendStayingPerion = function ExtendStayingPerion() {\n    return _regeneratorRuntime.async(function ExtendStayingPerion$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            navigation.navigate('creditcardscreen', {\n              data: {\n                checkoutDate: selectedStartDate.toString(),\n                amount: amountDue\n              },\n              status: 'update'\n            });\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var SendServiceNotification = function SendServiceNotification() {\n    var date, key, title, message, notification;\n    return _regeneratorRuntime.async(function SendServiceNotification$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            setload(true);\n            date = new Date();\n            _context6.next = 4;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync('key'));\n\n          case 4:\n            _context6.t0 = _context6.sent;\n\n            if (_context6.t0) {\n              _context6.next = 7;\n              break;\n            }\n\n            _context6.t0 = 'null';\n\n          case 7:\n            key = _context6.t0;\n            title = \"Service request\";\n            message = \"The respected guest at room no \" + details[0].roomNumber + \" floor \" + details[0].floor + \" is need need of a service labeled \" + service + \".\";\n            notification = {\n              userId: details[0].hotelId,\n              title: title,\n              message: message\n            };\n            axios.post(\"https://sunstarapi.herokuapp.com/hotelNotifications\", notification).then(function _callee3(notificationRes) {\n              return _regeneratorRuntime.async(function _callee3$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      if (notificationRes.data.status === \"Success\") {\n                        axios.post(\"https://app.nativenotify.com/api/indie/notification\", {\n                          subID: key,\n                          appId: 910,\n                          appToken: 'IBzo5MJJB46vcD3JGfjwRf',\n                          title: title,\n                          message: \"\" + message,\n                          pushData: {\n                            screen: \"notivationscreen\"\n                          }\n                        }).then(function (res) {\n                          setinvalid(true);\n                          setmessage('Request sent successfully');\n                          setload(false);\n                        }).catch(function (err) {\n                          setinvalid(true);\n                          setmessage('Request was not sent');\n                          setload(false);\n                          console.log(err + \"===\");\n                        });\n                      } else {\n                        setinvalid(true);\n                        setmessage('Request was not sent');\n                        setload(false);\n                        console.log(notificationRes.data.details);\n                      }\n\n                    case 1:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).catch(function (err) {\n              setinvalid(true);\n              setmessage('Request was not sent');\n              setload(false);\n              console.log(err + \"======\");\n            });\n\n          case 12:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var SendEmergencyeNotification = function SendEmergencyeNotification() {\n    var date, key, title, message, notification;\n    return _regeneratorRuntime.async(function SendEmergencyeNotification$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            setload(true);\n            date = new Date();\n            _context8.next = 4;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync('key'));\n\n          case 4:\n            _context8.t0 = _context8.sent;\n\n            if (_context8.t0) {\n              _context8.next = 7;\n              break;\n            }\n\n            _context8.t0 = 'null';\n\n          case 7:\n            key = _context8.t0;\n            title = \"Emergency alert \";\n            message = \"The respected guest at room no \" + details[0].roomNumber + \" floor \" + details[0].floor + \" is need need of emergency assistance . please attend to the premise imidiatly.\";\n            notification = {\n              userId: details[0].hotelId,\n              title: title,\n              message: message\n            };\n            axios.post(\"https://sunstarapi.herokuapp.com/hotelNotifications\", notification).then(function _callee4(notificationRes) {\n              return _regeneratorRuntime.async(function _callee4$(_context7) {\n                while (1) {\n                  switch (_context7.prev = _context7.next) {\n                    case 0:\n                      if (notificationRes.data.status === \"Success\") {\n                        axios.post(\"https://app.nativenotify.com/api/indie/notification\", {\n                          subID: key,\n                          appId: 910,\n                          appToken: 'IBzo5MJJB46vcD3JGfjwRf',\n                          title: title,\n                          message: \"\" + message,\n                          pushData: {\n                            screen: \"notivationscreen\"\n                          }\n                        }).then(function (res) {\n                          setinvalid(true);\n                          setmessage('Request sent successfully');\n                          setload(false);\n                        }).catch(function (err) {\n                          setinvalid(true);\n                          setmessage('Request was not sent');\n                          setload(false);\n                          console.log(err + \"===\");\n                        });\n                      } else {\n                        setinvalid(true);\n                        setmessage('Request was not sent');\n                        setload(false);\n                        console.log(notificationRes.data.details);\n                      }\n\n                    case 1:\n                    case \"end\":\n                      return _context7.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).catch(function (err) {\n              setinvalid(true);\n              setmessage('Request was not sent');\n              setload(false);\n              console.log(err + \"======\");\n            });\n\n          case 12:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onDateChange = function onDateChange(date, type) {\n    handlePriceCalculation(startDate, endDate);\n    setSelectedStartDate(date);\n  };\n\n  var HandleDates = function HandleDates() {\n    var one_day = 1000 * 60 * 60 * 24;\n    var endDate = new Date(params.data.checkoutDate);\n    var startDate = new Date(params.data.checkinDate);\n    var days = Math.round(endDate - startDate) / one_day;\n    setdays(days);\n    setstartDate(params.data.checkinDate);\n    setendDate(params.data.checkoutDate);\n  };\n\n  var HandleServiceAlert = function HandleServiceAlert() {\n    Alert.alert('Service request', \"The special services may come with extra charges depending on the type of service requested, the bill for \\\"\" + service + \"\\\" wiil be sent to you if there is any\\n Would you like to proceed?\", [{\n      text: 'No thanks',\n      onPress: function onPress() {\n        return console.log('Cancel Pressed');\n      },\n      style: 'cancel'\n    }, {\n      text: 'Yes, please',\n      onPress: function onPress() {\n        return SendServiceNotification();\n      }\n    }]);\n  };\n\n  var HandleExtendAlert = function HandleExtendAlert() {\n    Alert.alert('Exiting the session beforehand', \"Extending your period of staying me require more funds, A R \" + \"selectedStartDate\" + \" will be required for your staying session of until \" + new Date(selectedStartDate) + \" to be successful. \\nWould you like to proceed with the payment?\", [{\n      text: 'No thanks',\n      onPress: function onPress() {\n        return console.log('Cancel Pressed');\n      },\n      style: 'cancel'\n    }, {\n      text: 'Yes, please',\n      onPress: function onPress() {\n        return GetSesshionNotification();\n      }\n    }]);\n  };\n\n  var HandleAlert = function HandleAlert() {\n    Alert.alert('Exiting the session beforehand', \"You are prompting to exit the your premise before the agreed time,\\nBe alert that this option initiates your premise imidiate exiting, you will be granted maximum of 60 min to recheck in and this will be a once of opportunity. \\n Would you like to proceed?\", [{\n      text: 'No thanks',\n      onPress: function onPress() {\n        return console.log('Cancel Pressed');\n      },\n      style: 'cancel'\n    }, {\n      text: 'Yes, please',\n      onPress: function onPress() {\n        return GetSesshionNotification();\n      }\n    }]);\n  };\n\n  var GetUserData = function GetUserData() {\n    var token, key;\n    return _regeneratorRuntime.async(function GetUserData$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync('token'));\n\n          case 2:\n            _context9.t0 = _context9.sent;\n\n            if (_context9.t0) {\n              _context9.next = 5;\n              break;\n            }\n\n            _context9.t0 = 'null';\n\n          case 5:\n            token = _context9.t0;\n            _context9.next = 8;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync('key'));\n\n          case 8:\n            _context9.t1 = _context9.sent;\n\n            if (_context9.t1) {\n              _context9.next = 11;\n              break;\n            }\n\n            _context9.t1 = 'null';\n\n          case 11:\n            key = _context9.t1;\n            axios.get('https://sunstarapi.herokuapp.com/user/'.concat(key)).then(function (results) {\n              var data = results.data;\n            }).catch(function (err) {\n              console.log(err + '.');\n            });\n\n          case 13:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var GetReservations = function GetReservations() {\n    var key;\n    return _regeneratorRuntime.async(function GetReservations$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync('key'));\n\n          case 2:\n            _context10.t0 = _context10.sent;\n\n            if (_context10.t0) {\n              _context10.next = 5;\n              break;\n            }\n\n            _context10.t0 = 'null';\n\n          case 5:\n            key = _context10.t0;\n            axios.get(\"https://sunstarapi.herokuapp.com/roomReservation/\" + params.data._id).then(function (notifications) {\n              var roomdata = [];\n              var reserve = notifications.data;\n\n              if (reserve.updatedAt !== null) {\n                CountDown(reserve.updatedAt);\n              }\n\n              axios.get(\"https://sunstarapi.herokuapp.com/room/\" + reserve.roomId).then(function (room) {\n                var locationUrl = \"https://sunstarapi.herokuapp.com/property/\" + reserve.roomId;\n                axios.get(locationUrl).then(function (property_res) {\n                  axios.get(\"https://sunstarapi.herokuapp.com/hotel/\" + reserve.hotelId).then(function (hotel_res) {\n                    var data = {\n                      key: reserve._id,\n                      roomId: reserve.roomId,\n                      type: room.data.type,\n                      status: room.data.status,\n                      floor: room.data.floor,\n                      days: days,\n                      price: price,\n                      hotelId: hotel_res.data._id,\n                      roomNumber: room.data.roomNumber,\n                      hotelName: hotel_res.data.name,\n                      bedtype: property_res.data.bedtype,\n                      tv: property_res.data.tv,\n                      wifi: property_res.data.wifi,\n                      parking: property_res.data.parking,\n                      numberOfBed: property_res.data.numberOfBed\n                    };\n                    roomdata.push(data);\n                    setdetails(roomdata);\n                  }).catch(function (err) {\n                    console.log(err + \"--------------\");\n                  });\n                }).catch(function (err) {\n                  console.log(err);\n                });\n              }).catch(function (err) {\n                console.log(err + \"========\");\n              });\n            }).catch(function (err) {\n              console.log(err + \" ==\");\n            });\n\n          case 7:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var HandleSystemRating = function HandleSystemRating() {\n    setinvalid(true);\n    setmessage(\"Feature not implemented yet! Please stay put.\");\n  };\n\n  var HandleHotelRating = function HandleHotelRating() {\n    setload(true);\n    axios.post(\"https://sunstarapi.herokuapp.com/hotelRating\", {\n      hotelId: params.data.hotelId,\n      ratedStar: roomrating,\n      comment: roomcomment\n    }).then(function (res) {\n      setload(false);\n      setinvalid(true);\n      setmessage(\"You have rated the room successfully\");\n    }).catch(function (err) {\n      setload(false);\n      console.log('====================================');\n      console.log(err);\n      console.log('====================================');\n    });\n  };\n\n  var HandleRoomRating = function HandleRoomRating() {\n    setload(true);\n    axios.post(\"https://sunstarapi.herokuapp.com/roomRating\", {\n      roomId: params.data.roomId,\n      ratedStar: roomrating,\n      comment: roomcomment\n    }).then(function (res) {\n      setload(false);\n      setinvalid(true);\n      setmessage(\"You have rated the room successfully\");\n    }).catch(function (err) {\n      setload(false);\n      console.log('====================================');\n      console.log(err);\n      console.log('====================================');\n    });\n  };\n\n  useEffect(function () {\n    HandleDates();\n    GetReservations();\n  }, []);\n  return React.createElement(View, {\n    style: {\n      backgroundColor: theme.background,\n      height: '100%',\n      width: '100%',\n      paddingHorizontal: 10\n    }\n  }, React.createElement(StatusBar, {\n    barStyle: dark ? 'light-content' : 'dark-content',\n    backgroundColor: theme.background\n  }), React.createElement(ActionBar, {\n    textStyle: [{\n      color: theme.text\n    }],\n    onBackPress: function onBackPress() {\n      return navigation.goBack();\n    },\n    iconBack: Platform.OS === 'ios' ? 'chevron-back' : 'arrow-back',\n    text: 'Service Monitor'\n  }), React.createElement(ScrollView, null, React.createElement(View, null, React.createElement(View, {\n    style: {\n      backgroundColor: Constance.Green,\n      borderRadius: 15,\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      padding: 15,\n      marginVertical: 15\n    }\n  }, React.createElement(Text, {\n    style: [style.lblButton, {\n      color: Constance.White\n    }]\n  }, \"This session has been scheduled from \", startDate.substring(0, 16), \" to \", endDate.substring(0, 16), \" (\", days, \" day(s)) ,Have a nice stay.\"), timer ? React.createElement(Text, {\n    style: [style.lblButton, {\n      color: Constance.Red,\n      fontSize: Constance.medium\n    }]\n  }, timer, \" \", React.createElement(Text, {\n    style: [style.lblButton, {\n      color: Constance.White\n    }]\n  }, \"min Left to recheck in.\")) : null), React.createElement(View, {\n    style: {\n      marginTop: 10\n    }\n  }, React.createElement(Text, {\n    style: [style.lblheader, {\n      color: theme.text\n    }]\n  }, \"Extend Period\"), React.createElement(View, null, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      paddingHorizontal: 10,\n      marginVertical: 15\n    }\n  }, React.createElement(Text, {\n    style: [style.lblcaption, {\n      color: theme.text\n    }]\n  }, \"Select session last dates\"), React.createElement(Icon, {\n    type: \"ionicon\",\n    name: \"calendar\",\n    color: theme.text,\n    onPress: function onPress() {\n      pickdates ? setpickdates(false) : setpickdates(true);\n    }\n  })), pickdates ? React.createElement(View, null, React.createElement(CalendarPicker, {\n    style: {\n      borderWidth: 1,\n      borderColor: theme.border\n    },\n    startFromMonday: true,\n    allowRangeSelection: false,\n    minDate: new Date(year, 1, month),\n    maxDate: new Date(2070, 6, 3),\n    weekdays: ['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun'],\n    months: ['January', 'Febraury', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n    previousTitle: \"Previous\",\n    nextTitle: \"Next\",\n    todayBackgroundColor: Constance.GreyLight,\n    selectedDayColor: Constance.White,\n    selectedDayTextColor: \"#000000\",\n    scaleFactor: 375,\n    textStyle: {\n      color: theme.text\n    },\n    onDateChange: onDateChange\n  }), React.createElement(TouchableOpacity, {\n    onPress: ExtendStayingPerion,\n    style: {\n      marginVertical: 10\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: Constance.Blue,\n      paddingVertical: 10,\n      paddingHorizontal: 5,\n      borderRadius: 7\n    }\n  }, React.createElement(Text, {\n    style: [style.lblButton, {\n      textAlign: 'center'\n    }]\n  }, \"Rate the Room\")))) : null)), React.createElement(Divider, {\n    style: {\n      backgroundColor: theme.borderAlt,\n      height: Constance.mediumDivider\n    }\n  }), React.createElement(View, {\n    style: {\n      marginTop: 10\n    }\n  }, React.createElement(Text, {\n    style: [style.lblheader, {\n      color: theme.text\n    }]\n  }, \"Request Service\"), React.createElement(View, null, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      paddingHorizontal: 10,\n      marginVertical: 15\n    }\n  }, React.createElement(Text, {\n    style: [style.lblcaption, {\n      color: theme.text\n    }]\n  }, \"specify the service you are in need of\")), React.createElement(InputComponent, {\n    changeText: function changeText(e) {\n      return setservice(e);\n    },\n    value: service\n  }), React.createElement(TouchableOpacity, {\n    style: {\n      marginVertical: 10\n    },\n    onPress: HandleServiceAlert\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: Constance.Blue,\n      width: '100%',\n      paddingVertical: 10,\n      paddingHorizontal: 25,\n      borderRadius: 7\n    }\n  }, React.createElement(Text, {\n    style: [style.lblButton, {\n      color: theme.text,\n      textAlign: 'center'\n    }]\n  }, \"Send Request\"))))), React.createElement(Divider, {\n    style: {\n      backgroundColor: theme.borderAlt,\n      height: Constance.mediumDivider\n    }\n  }), React.createElement(View, {\n    style: {\n      marginTop: 10\n    }\n  }, React.createElement(Text, {\n    style: [style.lblheader, {\n      color: theme.text\n    }]\n  }, \"Emergency service\"), React.createElement(View, null, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      paddingHorizontal: 10,\n      marginVertical: 15\n    }\n  }, React.createElement(Text, {\n    style: [style.lblcaption, {\n      color: theme.text\n    }]\n  }, \"An emergemcy alert feature\")), React.createElement(TouchableOpacity, {\n    style: {\n      marginVertical: 10\n    },\n    onPress: SendEmergencyeNotification\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: Constance.Red,\n      width: '100%',\n      paddingVertical: 10,\n      paddingHorizontal: 25,\n      borderRadius: 7\n    }\n  }, React.createElement(Text, {\n    style: [style.lblButton, {\n      color: theme.text,\n      textAlign: 'center'\n    }]\n  }, \"Panic Button\"))))), React.createElement(Divider, {\n    style: {\n      backgroundColor: theme.borderAlt,\n      height: Constance.mediumDivider\n    }\n  }), React.createElement(View, {\n    style: {\n      marginTop: 10\n    }\n  }, React.createElement(Text, {\n    style: [style.lblheader, {\n      color: theme.text\n    }]\n  }, \"End Session\"), React.createElement(View, null, React.createElement(View, {\n    style: {\n      alignItems: 'center',\n      paddingHorizontal: 10,\n      marginVertical: 15\n    }\n  }, React.createElement(View, null, React.createElement(Text, {\n    style: [style.lblcaption, {\n      color: Constance.Red\n    }]\n  }, \"Be alert that this option initiates your premise imidiate exiting, you will be granted maximum of 60 min to recheck in and this will be a once of opportunity. \")), React.createElement(TouchableOpacity, {\n    style: {\n      marginVertical: 10\n    },\n    onPress: HandleAlert\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: Constance.Red,\n      width: '100%',\n      paddingVertical: 10,\n      paddingHorizontal: 25,\n      borderRadius: 7\n    }\n  }, React.createElement(Text, {\n    style: [style.lblButton]\n  }, \"End Session\")))))), React.createElement(Divider, {\n    style: {\n      backgroundColor: theme.borderAlt,\n      height: Constance.mediumDivider\n    }\n  }), React.createElement(View, {\n    style: [{\n      width: '100%',\n      marginTop: 10\n    }]\n  }, React.createElement(Text, {\n    style: [style.lblheader, {\n      color: theme.text\n    }]\n  }, \"Ratings\"), React.createElement(View, null, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      paddingHorizontal: 10,\n      marginVertical: 15\n    }\n  }, React.createElement(View, {\n    style: [{\n      backgroundColor: theme.border,\n      maxWidth: '33%',\n      borderRadius: 7\n    }]\n  }, React.createElement(Text, {\n    style: [style.lblcaption, {\n      fontSize: Constance.small,\n      paddingHorizontal: 7,\n      paddingVertical: 5\n    }, {\n      color: theme.text\n    }]\n  }, \"Help the hotel improve their room setup and service\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setmodalroomrating(true);\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: Constance.GoldDark,\n      paddingVertical: 10,\n      paddingHorizontal: 5,\n      borderRadius: 7\n    }\n  }, React.createElement(Text, {\n    style: [style.lblButton, {\n      textAlign: 'center'\n    }]\n  }, \"Rate the Room\")))), React.createElement(View, {\n    style: [{\n      backgroundColor: theme.border,\n      maxWidth: '33%',\n      borderRadius: 7\n    }]\n  }, React.createElement(Text, {\n    style: [style.lblcaption, {\n      fontSize: Constance.small,\n      paddingHorizontal: 7,\n      paddingVertical: 5\n    }, {\n      color: theme.text\n    }]\n  }, \"Help the hotel improve their service by rating\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setmodalhotelrating(true);\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: Constance.GoldDark,\n      paddingVertical: 10,\n      paddingHorizontal: 5,\n      borderRadius: 7\n    }\n  }, React.createElement(Text, {\n    style: [style.lblButton, {\n      textAlign: 'center'\n    }, {\n      color: theme.text\n    }]\n  }, \"Rate The hotel\")))), React.createElement(View, {\n    style: [{\n      backgroundColor: theme.border,\n      maxWidth: '33%',\n      borderRadius: 7\n    }]\n  }, React.createElement(Text, {\n    style: [style.lblcaption, {\n      fontSize: Constance.small,\n      paddingHorizontal: 7,\n      paddingVertical: 5\n    }, {\n      color: theme.text\n    }]\n  }, \"Rate the SunStar yeam improve to impro this product\"), React.createElement(TouchableOpacity, {\n    onPress: HandleSystemRating\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: Constance.GoldDark,\n      paddingVertical: 10,\n      paddingHorizontal: 5,\n      borderRadius: 7\n    }\n  }, React.createElement(Text, {\n    style: [style.lblButton, {\n      textAlign: 'center'\n    }]\n  }, \"Rate the US :)\"))))))))), React.createElement(Snackbar, {\n    visible: invalid,\n    onDismiss: function onDismiss() {\n      return setinvalid(false);\n    }\n  }, message), load ? React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%',\n      position: 'absolute',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Progress, null)) : null, React.createElement(Modal, {\n    entry: \"bottom\",\n    backdropPressToClose: true,\n    isOpen: modalroomrating,\n    style: [modal.modalBox],\n    onClosed: function onClosed() {\n      return setmodalroomrating(false);\n    }\n  }, React.createElement(View, {\n    style: [modal.content, {\n      backgroundColor: theme.background,\n      height: 300\n    }]\n  }, React.createElement(Divider, {\n    style: {\n      borderRadius: 12,\n      height: Constance.largeDivider,\n      width: 100,\n      backgroundColor: theme.borderAlt,\n      alignSelf: 'center'\n    }\n  }), React.createElement(View, {\n    style: modal.modelContainerChild\n  }, React.createElement(Text, {\n    style: style.lblheader\n  }, \"Rating room\"), React.createElement(Icon, {\n    type: \"ionicon\",\n    name: \"close\",\n    onPress: function onPress() {\n      setmodalroomrating(false);\n    }\n  })), React.createElement(View, {\n    style: {\n      paddingVertical: 15,\n      paddingHorizontal: 80,\n      justifyContent: 'center'\n    }\n  }, React.createElement(StarRating, {\n    disabled: false,\n    emptyStar: 'ios-star-outline',\n    fullStar: 'ios-star',\n    halfStar: 'ios-star-half',\n    iconSet: 'Ionicons',\n    maxStars: 5,\n    containerStyle: {\n      height: 40\n    },\n    rating: roomrating,\n    selectedStar: function selectedStar(rating) {\n      return setroomrating(rating);\n    },\n    fullStarColor: Constance.GoldDark\n  })), React.createElement(InputComponent, {\n    keyboard: \"default\",\n    style: {\n      height: 60,\n      marginVertical: 20\n    },\n    changeText: function changeText(e) {\n      return setroomcomment(e);\n    },\n    value: hotelcomment,\n    hint: 'Comment'\n  }), React.createElement(TouchableOpacity, {\n    style: {\n      marginVertical: 10\n    },\n    onPress: HandleRoomRating\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: Constance.Blue,\n      width: '100%',\n      paddingVertical: 10,\n      paddingHorizontal: 25,\n      borderRadius: 7\n    }\n  }, React.createElement(Text, {\n    style: [style.lblButton, {\n      color: theme.text,\n      textAlign: 'center'\n    }]\n  }, \"Rate the room\"))))), React.createElement(Modal, {\n    entry: \"bottom\",\n    backdropPressToClose: true,\n    isOpen: modalhotelrating,\n    style: [modal.modalBox],\n    onClosed: function onClosed() {\n      return setmodalhotelrating(false);\n    }\n  }, React.createElement(View, {\n    style: [modal.content, {\n      backgroundColor: theme.background\n    }]\n  }, React.createElement(Divider, {\n    style: {\n      borderRadius: 12,\n      height: Constance.largeDivider,\n      width: 100,\n      backgroundColor: theme.borderAlt,\n      alignSelf: 'center'\n    }\n  }), React.createElement(View, {\n    style: modal.modelContainerChild\n  }, React.createElement(Text, {\n    style: style.lblheader\n  }, \"Hotel rating\"), React.createElement(Icon, {\n    type: \"ionicon\",\n    name: \"close\",\n    onPress: function onPress() {\n      setmodalhotelrating(false);\n    }\n  })), React.createElement(View, {\n    style: {\n      paddingVertical: 15,\n      paddingHorizontal: 80,\n      justifyContent: 'center'\n    }\n  }, React.createElement(StarRating, {\n    disabled: false,\n    emptyStar: 'ios-star-outline',\n    fullStar: 'ios-star',\n    halfStar: 'ios-star-half',\n    iconSet: 'Ionicons',\n    maxStars: 5,\n    containerStyle: {\n      width: '60%'\n    },\n    rating: hotelrating,\n    selectedStar: function selectedStar(rating) {\n      return sethotelrating(rating);\n    },\n    fullStarColor: Constance.GoldDark\n  })), React.createElement(InputComponent, {\n    keyboard: \"default\",\n    style: {\n      height: 60,\n      marginVertical: 20\n    },\n    changeText: function changeText(e) {\n      return sethotelcomment(e);\n    },\n    value: hotelcomment,\n    hint: 'Comment'\n  }), React.createElement(TouchableOpacity, {\n    style: {\n      marginVertical: 10\n    },\n    onPress: HandleHotelRating\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: Constance.Blue,\n      width: '100%',\n      paddingVertical: 10,\n      paddingHorizontal: 25,\n      borderRadius: 7\n    }\n  }, React.createElement(Text, {\n    style: [style.lblButton, {\n      color: theme.text,\n      textAlign: 'center'\n    }]\n  }, \"Rate hotel\"))))), React.createElement(Modal, {\n    entry: \"bottom\",\n    backdropPressToClose: true,\n    isOpen: modalsystemrating,\n    style: [modal.modalBox],\n    onClosed: function onClosed() {\n      return setmodalsystemrating(false);\n    }\n  }, React.createElement(View, {\n    style: [modal.content, {\n      backgroundColor: theme.background\n    }]\n  }, React.createElement(Divider, {\n    style: {\n      borderRadius: 12,\n      height: Constance.largeDivider,\n      width: 100,\n      backgroundColor: theme.borderAlt,\n      alignSelf: 'center'\n    }\n  }), React.createElement(View, {\n    style: modal.modelContainerChild\n  }, React.createElement(Text, {\n    style: style.lblheader\n  }, \"System rating\"), React.createElement(Icon, {\n    type: \"ionicon\",\n    name: \"close\",\n    onPress: function onPress() {\n      setmodalsystemrating(false);\n    }\n  })), React.createElement(View, {\n    style: {\n      paddingVertical: 15,\n      paddingHorizontal: 80,\n      justifyContent: 'center'\n    }\n  }, React.createElement(StarRating, {\n    disabled: false,\n    emptyStar: 'ios-star-outline',\n    fullStar: 'ios-star',\n    halfStar: 'ios-star-half',\n    iconSet: 'Ionicons',\n    maxStars: 5,\n    containerStyle: {\n      width: '60%'\n    },\n    rating: systemrating,\n    selectedStar: function selectedStar(rating) {\n      return setsystemrating(rating);\n    },\n    fullStarColor: Constance.GoldDark\n  })), React.createElement(InputComponent, {\n    keyboard: \"default\",\n    style: {\n      height: 60,\n      marginVertical: 20\n    },\n    changeText: function changeText(e) {\n      return setsystemcomment(e);\n    },\n    value: systemcomment,\n    hint: 'Comment'\n  }), React.createElement(TouchableOpacity, {\n    style: {\n      marginVertical: 10\n    },\n    onPress: HandleServiceAlert\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: Constance.Blue,\n      width: '100%',\n      paddingVertical: 10,\n      paddingHorizontal: 25,\n      borderRadius: 7\n    }\n  }, React.createElement(Text, {\n    style: [style.lblButton, {\n      color: theme.text,\n      textAlign: 'center'\n    }]\n  }, \"Rate the app\"))))));\n};\n\nexport default Managing;","map":{"version":3,"sources":["D:/Development/Mobile Development/React native/Hotel/SunStar/SunStar/userapp/source/screens/managing.tsx"],"names":["React","useContext","useEffect","useState","Icon","ActionBar","Constance","ThemeContext","CalendarPicker","style","Modal","modal","Divider","Snackbar","StarRating","InputComponent","useRoute","axios","SecureStore","Progress","Managing","navigation","params","theme","dark","toggle","selectedStartDate","setSelectedStartDate","selectedEndDate","setSelectedEndDate","amountDue","setamountDue","isDatePickerVisible","setDatePickerVisibility","year","setyear","month","setmonth","day","setday","price","setprice","pickdates","setpickdates","modalroomrating","setmodalroomrating","modalhotelrating","setmodalhotelrating","modalsystemrating","setmodalsystemrating","roomrating","setroomrating","hotelrating","sethotelrating","systemrating","setsystemrating","roomcomment","setroomcomment","hotelcomment","sethotelcomment","systemcomment","setsystemcomment","startDate","setstartDate","endDate","setendDate","days","setdays","load","setload","activelyCheckedIn","setactivelyCheckedIn","service","setservice","details","setdetails","invalid","setinvalid","message","setmessage","timer","settimer","showDatePicker","hideDatePicker","handlePriceCalculation","startdate","enddate","one_day","Math","round","parseInt","toString","CountDown","updateDate","i","setTimeout","now","Date","getTime","update","distance","floor","hours","minutes","seconds","GetSesshionNotification","console","log","data","_id","patch","then","res","date","getItemAsync","key","title","getHours","getMinutes","getSeconds","getDate","getMonth","getFullYear","notification","userId","post","notificationRes","status","subID","appId","appToken","pushData","screen","GetReservations","catch","err","ExtendStayingPerion","navigate","checkoutDate","amount","SendServiceNotification","roomNumber","hotelId","SendEmergencyeNotification","onDateChange","type","HandleDates","checkinDate","HandleServiceAlert","Alert","alert","text","onPress","HandleExtendAlert","HandleAlert","GetUserData","token","get","concat","results","notifications","roomdata","reserve","updatedAt","roomId","room","locationUrl","property_res","hotel_res","hotelName","name","bedtype","tv","wifi","parking","numberOfBed","push","HandleSystemRating","HandleHotelRating","ratedStar","comment","HandleRoomRating","backgroundColor","background","height","width","paddingHorizontal","color","goBack","Platform","OS","Green","borderRadius","justifyContent","alignItems","padding","marginVertical","lblButton","White","substring","Red","fontSize","medium","marginTop","lblheader","flexDirection","lblcaption","borderWidth","borderColor","border","GreyLight","Blue","paddingVertical","textAlign","borderAlt","mediumDivider","e","maxWidth","small","GoldDark","position","modalBox","content","largeDivider","alignSelf","modelContainerChild","rating"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\"\r\nimport { TouchableOpacity, Platform, StatusBar, Alert, Text, View, ScrollView } from \"react-native\"\r\nimport { Icon } from \"react-native-elements\"\r\nimport ActionBar from \"../components/actionbar\"\r\nimport Constance from \"../theme/const\"\r\nimport { ThemeContext } from \"../theme/themeProvider\"\r\nimport CalendarPicker from 'react-native-calendar-picker';\r\nimport style from './../styles/screens/managing';\r\nimport Modal from \"react-native-modalbox\";\r\nimport modal from \"../styles/components/modal\"\r\nimport { Divider, Snackbar } from \"react-native-paper\";\r\nimport StarRating from 'react-native-star-rating';\r\nimport * as Animatable from 'react-native-animatable';\r\nimport InputComponent from \"../components/input\"\r\nimport { useRoute } from '@react-navigation/native';\r\nimport axios from 'axios';\r\nimport * as SecureStore from 'expo-secure-store'\r\nimport Progress from \"../components/indicator\"\r\nimport Reservation from './reservations';\r\n\r\nconst Managing = ({ navigation }) => {\r\n\r\n    const params = useRoute().params;\r\n    const { theme, dark, toggle } = useContext(ThemeContext);\r\n    const [selectedStartDate, setSelectedStartDate] = useState(null);\r\n    const [selectedEndDate, setSelectedEndDate] = useState(null);\r\n    const [amountDue, setamountDue] = useState<any>();\r\n    const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\r\n    const [year, setyear] = useState<any>();\r\n    const [month, setmonth] = useState<any>();\r\n    const [day, setday] = useState<any>();\r\n    const [price, setprice] = useState('');\r\n    const [pickdates, setpickdates] = useState(false);\r\n    const [modalroomrating, setmodalroomrating] = useState(false)\r\n    const [modalhotelrating, setmodalhotelrating] = useState(false)\r\n    const [modalsystemrating, setmodalsystemrating] = useState(false)\r\n    const [roomrating, setroomrating] = useState<any>()\r\n    const [hotelrating, sethotelrating] = useState<any>()\r\n    const [systemrating, setsystemrating] = useState<any>()\r\n    const [roomcomment, setroomcomment] = useState<any>()\r\n    const [hotelcomment, sethotelcomment] = useState<any>()\r\n    const [systemcomment, setsystemcomment] = useState<any>()\r\n    const [startDate, setstartDate] = useState('');\r\n    const [endDate, setendDate] = useState('');\r\n    const [days, setdays] = useState('');\r\n    const [load, setload] = useState(false);\r\n    const [activelyCheckedIn, setactivelyCheckedIn] = useState(true)\r\n    const [service, setservice] = useState('');\r\n    const [details, setdetails] = useState([]);\r\n    const [invalid, setinvalid] = useState(false);\r\n    const [message, setmessage] = useState('');\r\n    const [timer, settimer] = useState<any>();\r\n\r\n    const showDatePicker = () => {\r\n        setDatePickerVisibility(true);\r\n    };\r\n\r\n    const hideDatePicker = () => {\r\n        setDatePickerVisibility(false);\r\n    };\r\n\r\n    const handlePriceCalculation = (startdate: any, enddate: any) => {\r\n\r\n        var one_day = 1000 * 60 * 60 * 24;\r\n        let days = Math.round(enddate - startdate) / (one_day);\r\n        setamountDue((parseInt(price) * days).toString())\r\n        setday(days);\r\n    }\r\n\r\n\r\n    const CountDown = (updateDate: any) => {\r\n        // Find the distance between now and the count down date\r\n\r\n        // Time calculations for days, hours, minutes and seconds\r\n        for (let i = 0; i > 5; i++) {\r\n            setTimeout(() => {\r\n\r\n                let now = new Date().getTime();\r\n                let update = new Date(updateDate).getTime();\r\n                let distance = now - update;\r\n\r\n                var days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n                var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n                var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n                var seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n                settimer(`${hours}:${minutes}:${seconds} `);\r\n\r\n            }, 100);\r\n        }\r\n    }\r\n\r\n    const GetSesshionNotification = async () => {\r\n\r\n        setload(true);\r\n\r\n        console.log(params.data._id);\r\n\r\n        axios.patch(`https://sunstarapi.herokuapp.com/roomReservation/${params.data._id}`, {}).then(async (res) => {\r\n\r\n            let date = new Date();\r\n            let key = await SecureStore.getItemAsync('key') || 'null';\r\n            let title = `Cheched out.`;\r\n            let message = `You have successfully checked out, The hotel will alergebly accept you only withing the upcoming 60 min counting down from ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()} on ${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`\r\n            let notification = {\r\n                userId: key,\r\n                title: title,\r\n                message: message\r\n            }\r\n\r\n            axios.post(`https://sunstarapi.herokuapp.com/userNotifications`, notification).then(async (notificationRes) => {\r\n                if (notificationRes.data.status === \"Success\") {\r\n\r\n                    axios.post(`https://app.nativenotify.com/api/indie/notification`, {\r\n                        subID: key,\r\n                        appId: 910,\r\n                        appToken: 'IBzo5MJJB46vcD3JGfjwRf',\r\n                        title: title,\r\n                        message: `${message}`,\r\n                        pushData: { screen: \"notivationscreen\" }\r\n                    }).then((res) => {\r\n\r\n                        setinvalid(true);\r\n                        GetReservations();\r\n                        setmessage('Request sent successfully');\r\n                        setload(false);\r\n                    }).catch((err) => {\r\n\r\n                        setload(false);\r\n                        console.log(err + \"===\");\r\n\r\n                    })\r\n\r\n                } else {\r\n\r\n                    setinvalid(true);\r\n                    setmessage('Request was not sent');\r\n                    setload(false);\r\n                    console.log(notificationRes.data.details);\r\n                }\r\n            }).catch((err) => {\r\n\r\n                setinvalid(true);\r\n                setmessage('Request was not sent');\r\n                setload(false);\r\n                console.log(err + \"======\");\r\n            })\r\n\r\n        }).catch((err) => {\r\n            console.log(err);\r\n\r\n        })\r\n\r\n    }\r\n\r\n    const ExtendStayingPerion = async () => {\r\n\r\n        navigation.navigate('creditcardscreen', { data: { checkoutDate: selectedStartDate.toString(), amount: amountDue }, status: 'update' })\r\n        // setload(true);\r\n\r\n        // console.log(params.data._id);\r\n\r\n        // axios.patch(`https://sunstarapi.herokuapp.com/roomReservation/${params.data._id}`, {checkoutDate:selectedStartDate}).then(async (res) => {\r\n\r\n        //     let date = new Date();\r\n        //     let key = await SecureStore.getItemAsync('key') || 'null';\r\n        //     let title = `Rental extention.`;\r\n        //     let message = `You have successfully updated you extention period by ${2} days. The administration will keep contact with you `\r\n        //     let notification = {\r\n        //         userId: key,\r\n        //         title: title,\r\n        //         message: message\r\n        //     }\r\n\r\n        //     axios.post(`https://sunstarapi.herokuapp.com/userNotifications`, notification).then(async (notificationRes) => {\r\n        //         if (notificationRes.data.status === \"Success\") {\r\n\r\n        //             axios.post(`https://app.nativenotify.com/api/indie/notification`, {\r\n        //                 subID: key,\r\n        //                 appId: 910,\r\n        //                 appToken: 'IBzo5MJJB46vcD3JGfjwRf',\r\n        //                 title: title,\r\n        //                 message: `${message}`,\r\n        //                 pushData: { screen: \"notivationscreen\" }\r\n        //             }).then((res) => {\r\n\r\n        //                 setinvalid(true);\r\n        //                 GetReservations();\r\n        //                 setmessage('Request sent successfully');\r\n        //                 setload(false);\r\n        //             }).catch((err) => {\r\n\r\n        //                 setload(false);\r\n        //                 console.log(err + \"===\");\r\n\r\n        //             })\r\n\r\n        //         } else {\r\n\r\n        //             setinvalid(true);\r\n        //             setmessage('Request was not sent');\r\n        //             setload(false);\r\n        //             console.log(notificationRes.data.details);\r\n        //         }\r\n        //     }).catch((err) => {\r\n\r\n        //         setinvalid(true);\r\n        //         setmessage('Request was not sent');\r\n        //         setload(false);\r\n        //         console.log(err + \"======\");\r\n        //     })\r\n\r\n        // }).catch((err) => {\r\n        //     console.log(err);\r\n\r\n        // })\r\n\r\n    }\r\n\r\n    const SendServiceNotification = async () => {\r\n\r\n        setload(true);\r\n\r\n        let date = new Date();\r\n        let key = await SecureStore.getItemAsync('key') || 'null';\r\n        let title = `Service request`;\r\n        let message = `The respected guest at room no ${details[0].roomNumber} floor ${details[0].floor} is need need of a service labeled ${service}.`\r\n        let notification = {\r\n            userId: details[0].hotelId,\r\n            title: title,\r\n            message: message\r\n        }\r\n        axios.post(`https://sunstarapi.herokuapp.com/hotelNotifications`, notification).then(async (notificationRes) => {\r\n            if (notificationRes.data.status === \"Success\") {\r\n\r\n                axios.post(`https://app.nativenotify.com/api/indie/notification`, {\r\n                    subID: key,\r\n                    appId: 910,\r\n                    appToken: 'IBzo5MJJB46vcD3JGfjwRf',\r\n                    title: title,\r\n                    message: `${message}`,\r\n                    pushData: { screen: \"notivationscreen\" }\r\n                }).then((res) => {\r\n                    setinvalid(true);\r\n                    setmessage('Request sent successfully');\r\n                    setload(false);\r\n                }).catch((err) => {\r\n\r\n                    setinvalid(true);\r\n                    setmessage('Request was not sent');\r\n                    setload(false);\r\n                    console.log(err + \"===\");\r\n\r\n                })\r\n\r\n            } else {\r\n\r\n                setinvalid(true);\r\n                setmessage('Request was not sent');\r\n                setload(false);\r\n                console.log(notificationRes.data.details);\r\n            }\r\n        }).catch((err) => {\r\n\r\n            setinvalid(true);\r\n            setmessage('Request was not sent');\r\n            setload(false);\r\n            console.log(err + \"======\");\r\n        })\r\n    }\r\n\r\n    const SendEmergencyeNotification = async () => {\r\n\r\n        setload(true);\r\n\r\n        let date = new Date();\r\n        let key = await SecureStore.getItemAsync('key') || 'null';\r\n        let title = `Emergency alert `;\r\n        let message = `The respected guest at room no ${details[0].roomNumber} floor ${details[0].floor} is need need of emergency assistance . please attend to the premise imidiatly.`\r\n        let notification = {\r\n            userId: details[0].hotelId,\r\n            title: title,\r\n            message: message\r\n        }\r\n        axios.post(`https://sunstarapi.herokuapp.com/hotelNotifications`, notification).then(async (notificationRes) => {\r\n            if (notificationRes.data.status === \"Success\") {\r\n\r\n                axios.post(`https://app.nativenotify.com/api/indie/notification`, {\r\n                    subID: key,\r\n                    appId: 910,\r\n                    appToken: 'IBzo5MJJB46vcD3JGfjwRf',\r\n                    title: title,\r\n                    message: `${message}`,\r\n                    pushData: { screen: \"notivationscreen\" }\r\n                }).then((res) => {\r\n                    setinvalid(true);\r\n                    setmessage('Request sent successfully');\r\n                    setload(false);\r\n                }).catch((err) => {\r\n\r\n                    setinvalid(true);\r\n                    setmessage('Request was not sent');\r\n                    setload(false);\r\n                    console.log(err + \"===\");\r\n\r\n                })\r\n\r\n            } else {\r\n\r\n                setinvalid(true);\r\n                setmessage('Request was not sent');\r\n                setload(false);\r\n                console.log(notificationRes.data.details);\r\n            }\r\n        }).catch((err) => {\r\n\r\n            setinvalid(true);\r\n            setmessage('Request was not sent');\r\n            setload(false);\r\n            console.log(err + \"======\");\r\n        })\r\n    }\r\n\r\n    const onDateChange = (date: any, type: any) => {\r\n        //function to handle the date change\r\n\r\n        handlePriceCalculation(startDate, endDate);\r\n        setSelectedStartDate(date);\r\n        // setamountDue(price);\r\n\r\n    };\r\n\r\n    const HandleDates = () => {\r\n        var one_day = 1000 * 60 * 60 * 24;\r\n\r\n        let endDate = new Date(params.data.checkoutDate);\r\n        let startDate = new Date(params.data.checkinDate);\r\n\r\n        let days = Math.round(endDate - startDate) / (one_day);\r\n\r\n        setdays(days);\r\n\r\n        setstartDate(params.data.checkinDate);\r\n        setendDate(params.data.checkoutDate)\r\n\r\n    }\r\n\r\n    const HandleServiceAlert = () => {\r\n        Alert.alert('Service request', `The special services may come with extra charges depending on the type of service requested, the bill for \"${service}\" wiil be sent to you if there is any\r\n Would you like to proceed?`, [\r\n            {\r\n                text: 'No thanks',\r\n                onPress: () => console.log('Cancel Pressed'),\r\n                style: 'cancel',\r\n            },\r\n            {\r\n                text: 'Yes, please', onPress: () => SendServiceNotification(),\r\n            },\r\n        ]);\r\n    }\r\n\r\n    const HandleExtendAlert = () => {\r\n        Alert.alert('Exiting the session beforehand', `Extending your period of staying me require more funds, A R ${\"selectedStartDate\"} will be required for your staying session of until ${new Date(selectedStartDate)} to be successful. \r\nWould you like to proceed with the payment?`, [\r\n            {\r\n                text: 'No thanks',\r\n                onPress: () => console.log('Cancel Pressed'),\r\n                style: 'cancel',\r\n            },\r\n            {\r\n                text: 'Yes, please', onPress: () => GetSesshionNotification(),\r\n            },\r\n        ]);\r\n    }\r\n\r\n    const HandleAlert = () => {\r\n        Alert.alert('Exiting the session beforehand', `You are prompting to exit the your premise before the agreed time,\r\nBe alert that this option initiates your premise imidiate exiting, you will be granted maximum of 60 min to recheck in and this will be a once of opportunity. \r\n Would you like to proceed?`, [\r\n            {\r\n                text: 'No thanks',\r\n                onPress: () => console.log('Cancel Pressed'),\r\n                style: 'cancel',\r\n            },\r\n            {\r\n                text: 'Yes, please', onPress: () => GetSesshionNotification(),\r\n            },\r\n        ]);\r\n    }\r\n\r\n    const GetUserData = async () => {\r\n        let token = await SecureStore.getItemAsync('token') || 'null';\r\n        let key = await SecureStore.getItemAsync('key') || 'null';\r\n\r\n        axios.get('https://sunstarapi.herokuapp.com/user/'.concat(key)).then((results) => {\r\n\r\n            let data = results.data;\r\n\r\n\r\n        }).catch((err) => {\r\n\r\n            console.log(err + '.');\r\n\r\n        });\r\n\r\n    }\r\n\r\n    const GetReservations = async () => {\r\n\r\n        let key = await SecureStore.getItemAsync('key') || 'null';\r\n        axios.get(`https://sunstarapi.herokuapp.com/roomReservation/${params.data._id}`).then((notifications) => {\r\n\r\n            const roomdata: any = [];\r\n\r\n            let reserve = notifications.data;\r\n            if (reserve.updatedAt !== null) {\r\n                CountDown(reserve.updatedAt);\r\n            }\r\n\r\n            axios.get(`https://sunstarapi.herokuapp.com/room/${reserve.roomId}`).then((room: any) => {\r\n\r\n                const locationUrl = \"https://sunstarapi.herokuapp.com/property/\" + reserve.roomId;\r\n                axios.get(locationUrl)\r\n                    .then((property_res) => {\r\n\r\n                        axios.get(`https://sunstarapi.herokuapp.com/hotel/${reserve.hotelId}`)\r\n                            .then((hotel_res) => {\r\n\r\n                                const data = {\r\n                                    key: reserve._id,\r\n                                    roomId: reserve.roomId,\r\n                                    type: room.data.type,\r\n                                    status: room.data.status,\r\n                                    floor: room.data.floor,\r\n                                    days: days,\r\n                                    price: price,\r\n                                    hotelId: hotel_res.data._id,\r\n                                    roomNumber: room.data.roomNumber,\r\n                                    hotelName: hotel_res.data.name,\r\n                                    bedtype: property_res.data.bedtype,\r\n                                    tv: property_res.data.tv,\r\n                                    wifi: property_res.data.wifi,\r\n                                    parking: property_res.data.parking,\r\n                                    numberOfBed: property_res.data.numberOfBed,\r\n                                }\r\n\r\n                                roomdata.push(data);\r\n\r\n                                setdetails(roomdata);\r\n\r\n                                // console.log(roomdata);\r\n\r\n                            }).catch((err) => {\r\n                                console.log(err + \"--------------\");\r\n                            })\r\n                    }).catch((err) => {\r\n                        console.log(err);\r\n                    })\r\n            }).catch((err) => {\r\n                console.log(err + \"========\");\r\n\r\n            })\r\n        }).catch((err) => {\r\n            console.log(err + \" ==\");\r\n        });\r\n\r\n    }\r\n\r\n    const HandleSystemRating = () => {\r\n      \r\n        setinvalid(true);\r\n        setmessage(`Feature not implemented yet! Please stay put.`);\r\n    }\r\n\r\n    const HandleHotelRating = () => {\r\n        setload(true);\r\n        axios.post(`https://sunstarapi.herokuapp.com/hotelRating`, { hotelId: params.data.hotelId, ratedStar: roomrating, comment: roomcomment }).then((res) => {\r\n            setload(false);\r\n            setinvalid(true);\r\n            setmessage(`You have rated the room successfully`);\r\n        })\r\n            .catch((err) => {\r\n                setload(false);\r\n                console.log('====================================');\r\n                console.log(err);\r\n                console.log('====================================');\r\n            })\r\n    }\r\n\r\n    const HandleRoomRating = () => {\r\n        setload(true);\r\n        axios.post(`https://sunstarapi.herokuapp.com/roomRating`, { roomId: params.data.roomId, ratedStar: roomrating, comment: roomcomment }).then((res) => {\r\n            setload(false);\r\n            setinvalid(true);\r\n            setmessage(`You have rated the room successfully`);\r\n        })\r\n            .catch((err) => {\r\n                setload(false);\r\n                console.log('====================================');\r\n                console.log(err);\r\n                console.log('====================================');\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        HandleDates();\r\n        GetReservations();\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <View style={{ backgroundColor: theme.background, height: '100%', width: '100%', paddingHorizontal: 10 }}>\r\n            <StatusBar barStyle={dark ? 'light-content' : 'dark-content'} backgroundColor={theme.background} />\r\n            <ActionBar textStyle={[{ color: theme.text }]} onBackPress={() => navigation.goBack()} iconBack={Platform.OS === 'ios' ? 'chevron-back' : 'arrow-back'} text={'Service Monitor'} />\r\n            <ScrollView>\r\n                <View>\r\n                    <View style={{ backgroundColor: Constance.Green, borderRadius: 15, justifyContent: 'space-between', alignItems: 'center', padding: 15, marginVertical: 15 }}>\r\n                        <Text style={[style.lblButton, { color: Constance.White }]}>\r\n                            This session has been scheduled from {startDate.substring(0, 16)} to {endDate.substring(0, 16)} ({days} day(s)) ,Have a nice stay.\r\n                        </Text>\r\n                        {timer ? <Text style={[style.lblButton, { color: Constance.Red, fontSize: Constance.medium }]}>\r\n                            {timer} <Text style={[style.lblButton, { color: Constance.White }]}>min Left to recheck in.</Text>\r\n                        </Text> : null}\r\n                    </View>\r\n\r\n                    <View style={{ marginTop: 10 }}>\r\n                        <Text style={[style.lblheader, { color: theme.text }]}>Extend Period</Text>\r\n                        <View>\r\n                            <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', paddingHorizontal: 10, marginVertical: 15 }}>\r\n                                <Text style={[style.lblcaption, { color: theme.text }]}>\r\n                                    Select session last dates\r\n                                </Text>\r\n                                <Icon type=\"ionicon\" name=\"calendar\" color={theme.text} onPress={() => { pickdates ? setpickdates(false) : setpickdates(true) }} />\r\n                            </View>\r\n                            {pickdates ?\r\n                                <View>\r\n                                    <CalendarPicker\r\n                                        style={{\r\n                                            borderWidth: 1, borderColor: theme.border\r\n                                        }}\r\n\r\n                                        startFromMonday={true}\r\n                                        allowRangeSelection={false}\r\n                                        minDate={new Date(year, 1, month)}\r\n                                        maxDate={new Date(2070, 6, 3)}\r\n                                        weekdays={\r\n                                            [\r\n                                                'Mon',\r\n                                                'Tue',\r\n                                                'Wed',\r\n                                                'Thur',\r\n                                                'Fri',\r\n                                                'Sat',\r\n                                                'Sun'\r\n                                            ]}\r\n                                        months={[\r\n                                            'January',\r\n                                            'Febraury',\r\n                                            'March',\r\n                                            'April',\r\n                                            'May',\r\n                                            'June',\r\n                                            'July',\r\n                                            'August',\r\n                                            'September',\r\n                                            'October',\r\n                                            'November',\r\n                                            'December',\r\n                                        ]}\r\n                                        previousTitle=\"Previous\"\r\n                                        nextTitle=\"Next\"\r\n                                        todayBackgroundColor={Constance.GreyLight}\r\n                                        selectedDayColor={Constance.White}\r\n                                        selectedDayTextColor=\"#000000\"\r\n                                        scaleFactor={375}\r\n                                        textStyle={{\r\n                                            color: theme.text,\r\n                                        }}\r\n                                        onDateChange={onDateChange}\r\n                                    />\r\n                                    <TouchableOpacity onPress={ExtendStayingPerion} style={{ marginVertical: 10 }}>\r\n                                        <View style={{ backgroundColor: Constance.Blue, paddingVertical: 10, paddingHorizontal: 5, borderRadius: 7 }}>\r\n                                            <Text style={[style.lblButton, { textAlign: 'center' }]}>Rate the Room</Text>\r\n                                        </View>\r\n                                    </TouchableOpacity>\r\n                                </View> : null}\r\n\r\n                        </View>\r\n                    </View>\r\n\r\n                    <Divider style={{ backgroundColor: theme.borderAlt, height: Constance.mediumDivider }} />\r\n                    <View style={{ marginTop: 10 }}>\r\n                        <Text style={[style.lblheader, { color: theme.text }]}>Request Service</Text>\r\n                        <View>\r\n                            <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', paddingHorizontal: 10, marginVertical: 15 }}>\r\n                                <Text style={[style.lblcaption, { color: theme.text }]}>\r\n                                    specify the service you are in need of\r\n                                </Text>\r\n                            </View>\r\n                            <InputComponent changeText={(e) => setservice(e)} value={service} />\r\n                            <TouchableOpacity style={{ marginVertical: 10 }} onPress={HandleServiceAlert}>\r\n                                <View style={{ backgroundColor: Constance.Blue, width: '100%', paddingVertical: 10, paddingHorizontal: 25, borderRadius: 7 }}>\r\n                                    <Text style={[style.lblButton, { color: theme.text, textAlign: 'center' }]}>Send Request</Text>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n\r\n                    <Divider style={{ backgroundColor: theme.borderAlt, height: Constance.mediumDivider }} />\r\n                    <View style={{ marginTop: 10 }}>\r\n                        <Text style={[style.lblheader, { color: theme.text }]}>Emergency service</Text>\r\n                        <View>\r\n                            <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', paddingHorizontal: 10, marginVertical: 15 }}>\r\n                                <Text style={[style.lblcaption, { color: theme.text }]}>\r\n                                    An emergemcy alert feature\r\n                                </Text>\r\n                            </View>\r\n\r\n                            <TouchableOpacity style={{ marginVertical: 10 }} onPress={SendEmergencyeNotification}>\r\n                                <View style={{ backgroundColor: Constance.Red, width: '100%', paddingVertical: 10, paddingHorizontal: 25, borderRadius: 7 }}>\r\n                                    <Text style={[style.lblButton, { color: theme.text, textAlign: 'center' }]}>Panic Button</Text>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n\r\n                    <Divider style={{ backgroundColor: theme.borderAlt, height: Constance.mediumDivider }} />\r\n                    <View style={{ marginTop: 10 }}>\r\n                        <Text style={[style.lblheader, { color: theme.text }]}>End Session</Text>\r\n                        <View>\r\n                            <View style={{ alignItems: 'center', paddingHorizontal: 10, marginVertical: 15 }}>\r\n                                <View>\r\n                                    <Text style={[style.lblcaption, { color: Constance.Red }]}>Be alert that this option initiates your premise imidiate exiting, you will be granted maximum of 60 min to recheck in and this will be a once of opportunity. </Text>\r\n                                </View>\r\n                                <TouchableOpacity style={{ marginVertical: 10 }} onPress={HandleAlert}>\r\n                                    <View style={{ backgroundColor: Constance.Red, width: '100%', paddingVertical: 10, paddingHorizontal: 25, borderRadius: 7 }}>\r\n                                        <Text style={[style.lblButton]}>End Session</Text>\r\n                                    </View>\r\n                                </TouchableOpacity>\r\n\r\n                            </View>\r\n\r\n                        </View>\r\n                    </View>\r\n\r\n                    <Divider style={{ backgroundColor: theme.borderAlt, height: Constance.mediumDivider }} />\r\n                    <View style={[{ width: '100%', marginTop: 10 }]}>\r\n                        <Text style={[style.lblheader, { color: theme.text }]}>Ratings</Text>\r\n                        <View>\r\n                            <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', paddingHorizontal: 10, marginVertical: 15 }}>\r\n\r\n                                <View style={[{ backgroundColor: theme.border, maxWidth: '33%', borderRadius: 7 }]}>\r\n                                    <Text style={[style.lblcaption, { fontSize: Constance.small, paddingHorizontal: 7, paddingVertical: 5 }, { color: theme.text }]}>Help the hotel improve their room setup and service</Text>\r\n                                    <TouchableOpacity onPress={() => setmodalroomrating(true)}>\r\n                                        <View style={{ backgroundColor: Constance.GoldDark, paddingVertical: 10, paddingHorizontal: 5, borderRadius: 7 }}>\r\n                                            <Text style={[style.lblButton, { textAlign: 'center' }]}>Rate the Room</Text>\r\n                                        </View>\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                                <View style={[{ backgroundColor: theme.border, maxWidth: '33%', borderRadius: 7 }]}>\r\n                                    <Text style={[style.lblcaption, { fontSize: Constance.small, paddingHorizontal: 7, paddingVertical: 5 }, { color: theme.text }]}>Help the hotel improve their service by rating</Text>\r\n\r\n                                    <TouchableOpacity onPress={() => setmodalhotelrating(true)}>\r\n                                        <View style={{ backgroundColor: Constance.GoldDark, paddingVertical: 10, paddingHorizontal: 5, borderRadius: 7 }}>\r\n                                            <Text style={[style.lblButton, { textAlign: 'center' }, { color: theme.text }]}>Rate The hotel</Text>\r\n                                        </View>\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n\r\n                                <View style={[{ backgroundColor: theme.border, maxWidth: '33%', borderRadius: 7 }]}>\r\n                                    <Text style={[style.lblcaption, { fontSize: Constance.small, paddingHorizontal: 7, paddingVertical: 5 }, { color: theme.text }]}>Rate the SunStar yeam improve to impro this product</Text>\r\n                                    <TouchableOpacity onPress={HandleSystemRating}>\r\n                                        <View style={{ backgroundColor: Constance.GoldDark, paddingVertical: 10, paddingHorizontal: 5, borderRadius: 7 }}>\r\n                                            <Text style={[style.lblButton, { textAlign: 'center' }]}>Rate the US :)</Text>\r\n                                        </View>\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                            </View>\r\n\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n            </ScrollView>\r\n\r\n            <Snackbar\r\n                visible={invalid}\r\n                onDismiss={() => setinvalid(false)}>\r\n                {message}\r\n            </Snackbar>\r\n\r\n            {load ? <View style={{ height: '100%', width: '100%', position: 'absolute', justifyContent: 'center', alignItems: 'center' }}>\r\n                <Progress />\r\n            </View> : null}\r\n            {/* bottonsheet implementation */}\r\n\r\n            {/* Update card model  */}\r\n            <Modal\r\n                entry=\"bottom\"\r\n                backdropPressToClose={true}\r\n                isOpen={modalroomrating}\r\n                style={[modal.modalBox]}\r\n                onClosed={() => setmodalroomrating(false)}\r\n            >\r\n                <View style={[modal.content, { backgroundColor: theme.background, height: 300 }]}>\r\n\r\n                    <Divider style={{ borderRadius: 12, height: Constance.largeDivider, width: 100, backgroundColor: theme.borderAlt, alignSelf: 'center' }} />\r\n                    <View style={modal.modelContainerChild}>\r\n                        <Text style={style.lblheader}>Rating room</Text>\r\n                        <Icon type=\"ionicon\" name=\"close\" onPress={() => { setmodalroomrating(false) }} />\r\n                    </View>\r\n\r\n\r\n                    <View style={{ paddingVertical: 15, paddingHorizontal: 80, justifyContent: 'center' }}>\r\n                        <StarRating\r\n                            disabled={false}\r\n                            emptyStar={'ios-star-outline'}\r\n                            fullStar={'ios-star'}\r\n                            halfStar={'ios-star-half'}\r\n                            iconSet={'Ionicons'}\r\n                            maxStars={5}\r\n                            containerStyle={{ height: 40 }}\r\n                            rating={roomrating}\r\n                            selectedStar={(rating) => setroomrating(rating)}\r\n                            fullStarColor={Constance.GoldDark}\r\n\r\n                        />\r\n                    </View>\r\n                    <InputComponent keyboard={\"default\"} style={{ height: 60, marginVertical: 20, }} changeText={(e) => setroomcomment(e)} value={hotelcomment} hint={'Comment'} />\r\n\r\n                    <TouchableOpacity style={{ marginVertical: 10 }} onPress={HandleRoomRating}>\r\n                        <View style={{ backgroundColor: Constance.Blue, width: '100%', paddingVertical: 10, paddingHorizontal: 25, borderRadius: 7 }}>\r\n                            <Text style={[style.lblButton, { color: theme.text, textAlign: 'center' }]}>Rate the room</Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n\r\n                </View>\r\n            </Modal>\r\n\r\n            <Modal\r\n                entry=\"bottom\"\r\n                backdropPressToClose={true}\r\n                isOpen={modalhotelrating}\r\n                style={[modal.modalBox]}\r\n                onClosed={() => setmodalhotelrating(false)}\r\n            >\r\n                <View style={[modal.content, { backgroundColor: theme.background }]}>\r\n\r\n                    <Divider style={{ borderRadius: 12, height: Constance.largeDivider, width: 100, backgroundColor: theme.borderAlt, alignSelf: 'center' }} />\r\n                    <View style={modal.modelContainerChild}>\r\n                        <Text style={style.lblheader}>Hotel rating</Text>\r\n                        <Icon type=\"ionicon\" name=\"close\" onPress={() => { setmodalhotelrating(false) }} />\r\n                    </View>\r\n                    <View style={{ paddingVertical: 15, paddingHorizontal: 80, justifyContent: 'center' }}>\r\n                        <StarRating\r\n                            disabled={false}\r\n                            emptyStar={'ios-star-outline'}\r\n                            fullStar={'ios-star'}\r\n                            halfStar={'ios-star-half'}\r\n                            iconSet={'Ionicons'}\r\n                            maxStars={5}\r\n                            containerStyle={{ width: '60%' }}\r\n                            rating={hotelrating}\r\n                            selectedStar={(rating) => sethotelrating(rating)}\r\n                            fullStarColor={Constance.GoldDark}\r\n                        />\r\n                    </View>\r\n                    <InputComponent keyboard={\"default\"} style={{ height: 60, marginVertical: 20, }} changeText={(e) => sethotelcomment(e)} value={hotelcomment} hint={'Comment'} />\r\n\r\n                    <TouchableOpacity style={{ marginVertical: 10 }} onPress={HandleHotelRating}>\r\n                        <View style={{ backgroundColor: Constance.Blue, width: '100%', paddingVertical: 10, paddingHorizontal: 25, borderRadius: 7 }}>\r\n                            <Text style={[style.lblButton, { color: theme.text, textAlign: 'center' }]}>Rate hotel</Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </Modal>\r\n\r\n            <Modal\r\n                entry=\"bottom\"\r\n                backdropPressToClose={true}\r\n                isOpen={modalsystemrating}\r\n                style={[modal.modalBox]}\r\n                onClosed={() => setmodalsystemrating(false)}\r\n            >\r\n                <View style={[modal.content, { backgroundColor: theme.background }]}>\r\n\r\n                    <Divider style={{ borderRadius: 12, height: Constance.largeDivider, width: 100, backgroundColor: theme.borderAlt, alignSelf: 'center' }} />\r\n                    <View style={modal.modelContainerChild}>\r\n                        <Text style={style.lblheader}>System rating</Text>\r\n                        <Icon type=\"ionicon\" name=\"close\" onPress={() => { setmodalsystemrating(false) }} />\r\n                    </View>\r\n                    <View style={{ paddingVertical: 15, paddingHorizontal: 80, justifyContent: 'center' }}>\r\n                        <StarRating\r\n                            disabled={false}\r\n                            emptyStar={'ios-star-outline'}\r\n                            fullStar={'ios-star'}\r\n                            halfStar={'ios-star-half'}\r\n                            iconSet={'Ionicons'}\r\n                            maxStars={5}\r\n                            containerStyle={{ width: '60%' }}\r\n                            rating={systemrating}\r\n                            selectedStar={(rating) => setsystemrating(rating)}\r\n                            fullStarColor={Constance.GoldDark}\r\n                        />\r\n                    </View>\r\n                    <InputComponent keyboard={\"default\"} style={{ height: 60, marginVertical: 20, }} changeText={(e) => setsystemcomment(e)} value={systemcomment} hint={'Comment'} />\r\n\r\n                    <TouchableOpacity style={{ marginVertical: 10 }} onPress={HandleServiceAlert}>\r\n                        <View style={{ backgroundColor: Constance.Blue, width: '100%', paddingVertical: 10, paddingHorizontal: 25, borderRadius: 7 }}>\r\n                            <Text style={[style.lblButton, { color: theme.text, textAlign: 'center' }]}>Rate the app</Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n\r\n                </View>\r\n            </Modal>\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Managing"]},"metadata":{},"sourceType":"module"}