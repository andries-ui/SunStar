{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getChannels = exports.getAmountValueInKobo = exports.toAmountInKobo = exports.toString = exports.toNumber = exports.isNegative = exports.isValidDecimalMonetaryValue = exports.isValidStringAmount = void 0;\n\nvar validator_1 = __importDefault(require(\"validator\"));\n\nvar _validator_1$default = validator_1.default,\n    isDecimal = _validator_1$default.isDecimal,\n    isFloat = _validator_1$default.isFloat,\n    isInt = _validator_1$default.isInt,\n    toFloat = _validator_1$default.toFloat,\n    toInt = _validator_1$default.toInt;\n\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\nfunction isString(value) {\n  return typeof value === 'string';\n}\n\nfunction isValidStringAmount(stringAmount) {\n  if (isString(stringAmount) && stringAmount != null && stringAmount.endsWith('.')) {\n    return false;\n  }\n\n  return isDecimal(stringAmount);\n}\n\nexports.isValidStringAmount = isValidStringAmount;\n\nfunction isValidDecimalMonetaryValue(amountValue) {\n  if (!isNumber(amountValue) && !isString(amountValue)) {\n    return false;\n  }\n\n  return isNumber(amountValue) || isValidStringAmount(amountValue);\n}\n\nexports.isValidDecimalMonetaryValue = isValidDecimalMonetaryValue;\n\nfunction isNegative(amountValue) {\n  if (typeof amountValue === 'string') {\n    return amountValue.startsWith('-');\n  }\n\n  return amountValue < 0;\n}\n\nexports.isNegative = isNegative;\n\nfunction toNumber(string) {\n  if (isFloat(string)) {\n    return toFloat(string);\n  }\n\n  if (isInt(string)) {\n    return toInt(string);\n  }\n\n  return +string;\n}\n\nexports.toNumber = toNumber;\n\nfunction toString(amountValue) {\n  return isNumber(amountValue) ? amountValue.toString() : amountValue;\n}\n\nexports.toString = toString;\n\nfunction toAmountInKobo(amountValue) {\n  if (typeof amountValue === 'string') {\n    return toNumber(amountValue) * 100;\n  }\n\n  return amountValue * 100;\n}\n\nexports.toAmountInKobo = toAmountInKobo;\n\nvar getAmountValueInKobo = function getAmountValueInKobo(amount) {\n  if (isValidDecimalMonetaryValue(amount)) {\n    return toAmountInKobo(amount);\n  }\n\n  return 0;\n};\n\nexports.getAmountValueInKobo = getAmountValueInKobo;\n\nvar getChannels = function getChannels(channelsArrary) {\n  if ((channelsArrary == null ? void 0 : channelsArrary.length) > 0) {\n    var channelsString = JSON.stringify(channelsArrary);\n    return \"channels: \" + channelsString + \",\";\n  }\n\n  return '';\n};\n\nexports.getChannels = getChannels;","map":{"version":3,"sources":["../src/helper.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getChannels = exports.getAmountValueInKobo = exports.toAmountInKobo = exports.toString = exports.toNumber = exports.isNegative = exports.isValidDecimalMonetaryValue = exports.isValidStringAmount = void 0;\nconst validator_1 = __importDefault(require(\"validator\"));\nconst { isDecimal, isFloat, isInt, toFloat, toInt } = validator_1.default;\nfunction isNumber(value) {\n    return typeof value === 'number';\n}\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isValidStringAmount(stringAmount) {\n    if (isString(stringAmount) && stringAmount?.endsWith('.')) {\n        return false;\n    }\n    return isDecimal(stringAmount);\n}\nexports.isValidStringAmount = isValidStringAmount;\nfunction isValidDecimalMonetaryValue(amountValue) {\n    if (!isNumber(amountValue) && !isString(amountValue)) {\n        return false;\n    }\n    return isNumber(amountValue) || isValidStringAmount(amountValue);\n}\nexports.isValidDecimalMonetaryValue = isValidDecimalMonetaryValue;\nfunction isNegative(amountValue) {\n    if (typeof amountValue === 'string') {\n        return amountValue.startsWith('-');\n    }\n    return amountValue < 0;\n}\nexports.isNegative = isNegative;\nfunction toNumber(string) {\n    if (isFloat(string)) {\n        return toFloat(string);\n    }\n    if (isInt(string)) {\n        return toInt(string);\n    }\n    return +string;\n}\nexports.toNumber = toNumber;\nfunction toString(amountValue) {\n    return isNumber(amountValue) ? amountValue.toString() : amountValue;\n}\nexports.toString = toString;\nfunction toAmountInKobo(amountValue) {\n    if (typeof amountValue === 'string') {\n        return toNumber(amountValue) * 100;\n    }\n    return amountValue * 100;\n}\nexports.toAmountInKobo = toAmountInKobo;\nconst getAmountValueInKobo = (amount) => {\n    if (isValidDecimalMonetaryValue(amount)) {\n        return toAmountInKobo(amount);\n    }\n    return 0;\n};\nexports.getAmountValueInKobo = getAmountValueInKobo;\nconst getChannels = (channelsArrary) => {\n    if (channelsArrary?.length > 0) {\n        const channelsString = JSON.stringify(channelsArrary);\n        return `channels: ${channelsString},`;\n    }\n    return '';\n};\nexports.getChannels = getChannels;\n//# sourceMappingURL=helper.js.map"]},"metadata":{},"sourceType":"script"}