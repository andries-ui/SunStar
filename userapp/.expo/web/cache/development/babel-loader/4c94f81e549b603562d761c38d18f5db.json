{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Icon, Image, Text } from \"react-native-elements\";\nimport { TextInput } from \"react-native-paper\";\nimport InputComponent from \"../components/input\";\nimport Separator from \"../components/separater\";\nimport TextComponent from \"../components/text\";\nimport Constance from \"../theme/const\";\nimport { ThemeContext } from \"../theme/themeProvider\";\nimport NearestItemComponent from \"./../components/nearest\";\nimport axios from 'axios';\n\nvar Search = function Search(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      roomhistory = _useState2[0],\n      setroomhistory = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      history = _useState4[0],\n      sethistory = _useState4[1];\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme,\n      dark = _useContext.dark;\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      rooms = _useState6[0],\n      setrooms = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      locations = _useState8[0],\n      setlocations = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      hotels = _useState10[0],\n      sethotels = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      query = _useState12[0],\n      setquery = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      searching = _useState14[0],\n      setsearching = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      FilteredRoomList = _useState16[0],\n      setFilteredRoomList = _useState16[1];\n\n  var GetRooms = function GetRooms(query) {\n    setquery(query);\n    setrooms([]);\n    sethotels([]);\n    setsearching(true);\n    axios.post(\"https://sunstarapi.herokuapp.com/room/searchRooms\", {\n      value: query\n    }).then(function (res) {\n      var roomdata = [];\n      res.data.forEach(function (room) {\n        var locationUrl = \"https://sunstarapi.herokuapp.com/property/\" + room._id;\n        axios.get(locationUrl).then(function (property_res) {\n          var data = {\n            key: room._id,\n            type: room.type,\n            price: room.price,\n            status: room.status,\n            floor: room.floor,\n            roomNumber: room.roomNumber,\n            hotelId: room.hotelId,\n            bedtype: property_res.data.bedType,\n            tv: property_res.data.tv,\n            wifi: property_res.data.wifi,\n            parking: property_res.data.parking,\n            numberOfBed: property_res.data.numberOfBed,\n            images: property_res.data.images[0],\n            roomId: property_res.data.roomId\n          };\n          roomdata.push(data);\n          setrooms(roomdata);\n          setsearching(false);\n        }).catch(function (err) {\n          console.log(err);\n          setsearching(false);\n        });\n      });\n    }).catch(function (err) {\n      console.log(err);\n      setsearching(false);\n    });\n    axios.post(\"https://sunstarapi.herokuapp.com/hotel/searchHotels\", {\n      value: query\n    }).then(function (res) {\n      var roomdata = [];\n      res.data.forEach(function (hotel) {\n        var url = \"https://sunstarapi.herokuapp.com/room/rooms/\" + hotel._id;\n        axios.get(url).then(function (res) {\n          res.data.forEach(function (room) {\n            axios.get(\"https://sunstarapi.herokuapp.com/roomRating/ratings/\" + room._id).then(function (rating_res) {\n              var total = rating_res.data.length * 5;\n              var ratings = 0.0;\n\n              for (var item in rating_res.data) {\n                ratings = ratings + parseInt(rating_res.data[item].ratedStar.toString()).substring(0, 3);\n              }\n\n              var totalRates = 0;\n\n              if (total) {\n                totalRates = ratings / total * 5;\n              }\n\n              axios.get(\"https://sunstarapi.herokuapp.com/property/\" + room._id).then(function (property_res) {\n                var data = {\n                  key: room._id,\n                  type: room.type,\n                  price: room.price,\n                  status: room.status,\n                  floor: room.floor,\n                  rates: totalRates.toString(),\n                  roomNumber: room.roomNumber,\n                  hotelId: room.hotelId,\n                  bedtype: property_res.data.bedType,\n                  tv: property_res.data.tv,\n                  wifi: property_res.data.wifi,\n                  hotelname: hotel.name,\n                  parking: property_res.data.parking,\n                  numberOfBed: property_res.data.numberOfBed,\n                  images: property_res.data.images[0],\n                  roomId: property_res.data.roomId\n                };\n                roomdata.push(data);\n                sethotels(roomdata);\n                setsearching(false);\n              }).catch(function (err) {\n                console.log(err);\n                setsearching(false);\n              });\n            }).catch(function (err) {\n              console.log(err);\n              setsearching(false);\n            });\n          });\n        }).catch(function (err) {\n          console.log(err);\n          setsearching(false);\n        });\n      });\n    }).catch(function (err) {\n      console.log(err);\n      setsearching(false);\n    });\n  };\n\n  var SearchAndFilter = function SearchAndFilter(query) {\n    var lowerCaseQuery = query.toLowerCase();\n\n    if (lowerCaseQuery === '') {\n      setFilteredRoomList([]);\n      return;\n    }\n\n    var newrooms = rooms.filter(function (room) {\n      return room.price.includes(lowerCaseQuery);\n    }).map(function (room) {\n      return _objectSpread(_objectSpread({}, room), {}, {\n        rank: room.price.indexOf(lowerCaseQuery)\n      });\n    }).sort(function (a, b) {\n      return a.rank - b.rank;\n    });\n    setFilteredRoomList(newrooms);\n  };\n\n  var Hotels = function Hotels() {\n    axios.get(\"https://sunstarapi.herokuapp.com/hotel\").then(function (res) {\n      var hotelsdata = [];\n      res.data.forEach(function (hotel) {\n        hotelsdata.push({\n          id: hotel._id,\n          name: hotel.name\n        });\n      });\n      sethistory(hotelsdata);\n    }).catch(function (err) {\n      console.log(err);\n      setsearching(false);\n    });\n  };\n\n  var Rooms = function Rooms() {\n    axios.get(\"https://sunstarapi.herokuapp.com/room/\").then(function (res) {\n      var roomdata = [];\n      res.data.forEach(function (room) {\n        roomdata.push({\n          id: room._id,\n          name: room.type\n        });\n      });\n      setroomhistory(roomdata);\n    }).catch(function (err) {\n      console.log(err);\n      setsearching(false);\n    });\n  };\n\n  useEffect(function () {\n    Hotels();\n    Rooms();\n    SearchAndFilter(query);\n  }, [query]);\n  return React.createElement(View, {\n    style: {\n      height: '100%',\n      backgroundColor: theme.background\n    }\n  }, React.createElement(StatusBar, {\n    barStyle: dark ? 'light-content' : 'dark-content',\n    backgroundColor: theme.background\n  }), React.createElement(View, {\n    style: [{\n      height: 60,\n      width: '100%',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-evenly'\n    }]\n  }, React.createElement(Icon, {\n    style: {\n      marginHorizontal: 10\n    },\n    type: \"ionicon\",\n    name: Platform.OS === 'ios' ? 'chevron-back' : 'arrow-back',\n    size: 28,\n    color: theme.text,\n    onPress: function onPress() {\n      return navigation.goBack();\n    }\n  }), React.createElement(InputComponent, {\n    changeText: function changeText(e) {\n      GetRooms(e);\n    },\n    value: query,\n    left: React.createElement(TextInput.Icon, {\n      name: \"magnify\"\n    }),\n    hint: \"Find accomodation\",\n    style: {\n      width: '80%',\n      backgroundColor: theme.border\n    }\n  })), React.createElement(View, {\n    style: {\n      height: 60,\n      width: '100%',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      paddingHorizontal: 10\n    }\n  }, React.createElement(View, {\n    style: {\n      width: 50\n    }\n  }, React.createElement(Icon, {\n    style: {\n      marginHorizontal: 10\n    },\n    type: \"material-community\",\n    name: \"history\",\n    size: 28,\n    color: theme.text,\n    onPress: function onPress() {\n      return navigation.goBack();\n    }\n  })), React.createElement(View, null, React.createElement(FlatList, {\n    showsHorizontalScrollIndicator: false,\n    ItemSeparatorComponent: Separator,\n    horizontal: true,\n    data: history,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item,\n          index = _ref2.index;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          GetRooms(item.name);\n          setquery(item.name);\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'flex-start',\n          backgroundColor: Constance.Black,\n          marginHorizontal: 5,\n          borderRadius: 12,\n          paddingHorizontal: 10,\n          paddingVertical: 2\n        }\n      }, React.createElement(TextComponent, {\n        text: item.name,\n        key: item.id,\n        style: {\n          fontSize: Constance.small,\n          color: Constance.White\n        }\n      }), React.createElement(Icon, {\n        onPress: function onPress() {},\n        type: \"ionicon\",\n        name: \"close\",\n        color: Constance.White\n      })));\n    }\n  }), React.createElement(FlatList, {\n    style: {\n      marginTop: 5\n    },\n    showsHorizontalScrollIndicator: false,\n    ItemSeparatorComponent: Separator,\n    horizontal: true,\n    data: roomhistory,\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item,\n          index = _ref3.index;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          GetRooms(item.name);\n          setquery(item.name);\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'flex-start',\n          backgroundColor: Constance.Black,\n          marginHorizontal: 5,\n          borderRadius: 12,\n          paddingHorizontal: 10,\n          paddingVertical: 2\n        }\n      }, React.createElement(TextComponent, {\n        text: item.name,\n        key: item.id,\n        style: {\n          fontSize: Constance.small,\n          color: Constance.White\n        }\n      })));\n    }\n  }))), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      paddingHorizontal: 10\n    }\n  }, React.createElement(TextComponent, {\n    text: 'Room results',\n    style: {\n      fontSize: Constance.medium,\n      color: theme.text,\n      fontWeight: 'bold'\n    }\n  }), React.createElement(TextComponent, {\n    text: rooms.length + \" total\",\n    style: {\n      fontSize: Constance.small,\n      color: theme.text,\n      fontWeight: '900'\n    }\n  })), rooms.length > 0 ? React.createElement(View, null, React.createElement(FlatList, {\n    alwaysBounceHorizontal: true,\n    horizontal: true,\n    showsVerticalScrollIndicator: false,\n    ItemSeparatorComponent: Separator,\n    data: rooms,\n    renderItem: function renderItem(_ref4) {\n      var item = _ref4.item,\n          index = _ref4.index;\n      return React.createElement(NearestItemComponent, {\n        image: {\n          uri: item.images\n        },\n        address: item.location,\n        name: item.type,\n        price: item.price,\n        ratings: item.rates,\n        key: item.roomId,\n        press: function press() {\n          navigation.navigate('roomscreen', {\n            key: item.key\n          });\n        }\n      });\n    }\n  })) : React.createElement(View, {\n    style: {\n      height: \"30%\",\n      marginVertical: 30,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/images/search.png\"),\n    style: {\n      width: 150,\n      height: 150\n    }\n  }), searching ? React.createElement(Text, {\n    style: {\n      fontSize: Constance.medium,\n      color: Constance.Grey,\n      fontWeight: 'bold'\n    }\n  }, \"Finding rooms...\") : React.createElement(Text, {\n    style: {\n      fontSize: Constance.medium,\n      color: Constance.Grey\n    }\n  }, \"No results found\")), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      paddingHorizontal: 10\n    }\n  }, React.createElement(TextComponent, {\n    text: 'Hotel results',\n    style: {\n      fontSize: Constance.medium,\n      color: theme.text,\n      fontWeight: 'bold'\n    }\n  }), React.createElement(TextComponent, {\n    text: hotels.length + \" total\",\n    style: {\n      fontSize: Constance.small,\n      color: theme.text,\n      fontWeight: '900'\n    }\n  })), hotels.length > 0 ? React.createElement(View, null, React.createElement(FlatList, {\n    alwaysBounceHorizontal: true,\n    horizontal: true,\n    showsVerticalScrollIndicator: false,\n    ItemSeparatorComponent: Separator,\n    data: hotels,\n    renderItem: function renderItem(_ref5) {\n      var item = _ref5.item,\n          index = _ref5.index;\n      return React.createElement(NearestItemComponent, {\n        image: {\n          uri: item.images\n        },\n        address: item.location,\n        name: item.hotelname,\n        price: '',\n        ratings: item.rates,\n        key: item.roomId,\n        press: function press() {\n          navigation.navigate('roomscreen', {\n            key: item.key\n          });\n        }\n      });\n    }\n  })) : React.createElement(View, {\n    style: {\n      height: \"30%\",\n      marginVertical: 30,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/images/search.png\"),\n    style: {\n      width: 150,\n      height: 150\n    }\n  }), searching ? React.createElement(Text, {\n    style: {\n      fontSize: Constance.medium,\n      color: Constance.Grey,\n      fontWeight: 'bold'\n    }\n  }, \"Finding hotels...\") : React.createElement(Text, {\n    style: {\n      fontSize: Constance.medium,\n      color: Constance.Grey\n    }\n  }, \"No results found\")));\n};\n\nexport default Search;","map":{"version":3,"sources":["D:/Development/Mobile Development/React native/Hotel/SunStar/SunStar/userapp/source/screens/search.tsx"],"names":["React","useContext","useEffect","useState","Icon","Image","Text","TextInput","InputComponent","Separator","TextComponent","Constance","ThemeContext","NearestItemComponent","axios","Search","navigation","roomhistory","setroomhistory","history","sethistory","theme","dark","rooms","setrooms","locations","setlocations","hotels","sethotels","query","setquery","searching","setsearching","FilteredRoomList","setFilteredRoomList","GetRooms","post","value","then","res","roomdata","data","forEach","room","locationUrl","_id","get","property_res","key","type","price","status","floor","roomNumber","hotelId","bedtype","bedType","tv","wifi","parking","numberOfBed","images","roomId","push","catch","err","console","log","hotel","url","rating_res","total","length","ratings","item","parseInt","ratedStar","toString","substring","totalRates","rates","hotelname","name","SearchAndFilter","lowerCaseQuery","toLowerCase","newrooms","filter","includes","map","rank","indexOf","sort","a","b","Hotels","hotelsdata","id","Rooms","height","backgroundColor","background","width","flexDirection","alignItems","justifyContent","marginHorizontal","Platform","OS","text","goBack","e","border","paddingHorizontal","index","Black","borderRadius","paddingVertical","fontSize","small","color","White","marginTop","medium","fontWeight","uri","location","navigate","marginVertical","require","Grey"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { FlatList, Platform, StatusBar, TouchableOpacity, View } from \"react-native\";\r\nimport { Icon, Image, Text, SearchBar } from \"react-native-elements\";\r\nimport { TextInput } from \"react-native-paper\";\r\nimport ActionBar from \"../components/actionbar\";\r\nimport InputComponent from \"../components/input\";\r\nimport Separator from \"../components/separater\";\r\nimport TextComponent from \"../components/text\";\r\nimport Constance from \"../theme/const\";\r\nimport { ThemeContext } from \"../theme/themeProvider\";\r\nimport NearestItemComponent from './../components/nearest';\r\nimport axios from 'axios';\r\n\r\nconst Search = ({ navigation }) => {\r\n\r\n    const [roomhistory, setroomhistory] = useState([]);\r\n    const [history, sethistory] = useState([]);\r\n    const { theme, dark } = useContext(ThemeContext);\r\n    const [rooms, setrooms] = useState<any>([]);\r\n    const [locations, setlocations] = useState<any>([]);\r\n    const [hotels, sethotels] = useState<any>([]);\r\n    const [query, setquery] = useState('');\r\n    const [searching, setsearching] = useState(false)\r\n    const [FilteredRoomList, setFilteredRoomList] = useState([]);\r\n\r\n    const GetRooms = (query: any) => {\r\n\r\n        setquery(query);\r\n        setrooms([])\r\n        sethotels([]);\r\n        setsearching(true);\r\n        axios.post(`https://sunstarapi.herokuapp.com/room/searchRooms`, { value: query }).then((res) => {\r\n            const roomdata: any = [];\r\n\r\n            res.data.forEach((room: any) => {\r\n                const locationUrl = \"https://sunstarapi.herokuapp.com/property/\" + room._id;\r\n                axios.get(locationUrl).then((property_res) => {\r\n\r\n                    const data = {\r\n                        key: room._id,\r\n                        type: room.type,\r\n                        price: room.price,\r\n                        status: room.status,\r\n                        floor: room.floor,\r\n                        roomNumber: room.roomNumber,\r\n                        hotelId: room.hotelId,\r\n                        bedtype: property_res.data.bedType,\r\n                        tv: property_res.data.tv,\r\n                        wifi: property_res.data.wifi,\r\n                        parking: property_res.data.parking,\r\n                        numberOfBed: property_res.data.numberOfBed,\r\n                        images: property_res.data.images[0],\r\n                        roomId: property_res.data.roomId,\r\n                    }\r\n\r\n                    roomdata.push(data);\r\n\r\n                    setrooms(roomdata);\r\n                    setsearching(false);\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    setsearching(false);\r\n                })\r\n            })\r\n\r\n        }).catch((err) => {\r\n            console.log(err);\r\n            setsearching(false);\r\n        })\r\n\r\n        axios.post(`https://sunstarapi.herokuapp.com/hotel/searchHotels`, { value: query }).then((res) => {\r\n            const roomdata: any = [];\r\n\r\n            res.data.forEach((hotel: any) => {\r\n                const url = `https://sunstarapi.herokuapp.com/room/rooms/${hotel._id}`;\r\n\r\n                axios.get(url).then((res) => {\r\n\r\n                    res.data.forEach((room: any) => {\r\n\r\n                        axios.get(`https://sunstarapi.herokuapp.com/roomRating/ratings/${room._id}`).then((rating_res) => {\r\n\r\n                            let total: any = rating_res.data.length * 5;\r\n                            let ratings: any = 0.0;\r\n                            for (let item in rating_res.data) {\r\n                                ratings = ratings + parseInt(rating_res.data[item].ratedStar.toString()).substring(0, 3);\r\n                                // console.log(ratings, \"===>>>>>>\");\r\n                            }\r\n\r\n                            let totalRates: any = 0;\r\n                            if (total) {\r\n                                totalRates = ratings / total * 5;\r\n                                //console.log(totalRates);\r\n                            }\r\n                            axios.get(`https://sunstarapi.herokuapp.com/property/${room._id}`).then((property_res) => {\r\n\r\n                                const data = {\r\n                                    key: room._id,\r\n                                    type: room.type,\r\n                                    price: room.price,\r\n                                    status: room.status,\r\n                                    floor: room.floor,\r\n                                    rates: totalRates.toString(),\r\n                                    roomNumber: room.roomNumber,\r\n                                    hotelId: room.hotelId,\r\n                                    bedtype: property_res.data.bedType,\r\n                                    tv: property_res.data.tv,\r\n                                    wifi: property_res.data.wifi,\r\n                                    hotelname: hotel.name,\r\n                                    parking: property_res.data.parking,\r\n                                    numberOfBed: property_res.data.numberOfBed,\r\n                                    images: property_res.data.images[0],\r\n                                    roomId: property_res.data.roomId,\r\n                                }\r\n\r\n                                roomdata.push(data);\r\n                                sethotels(roomdata);\r\n                                setsearching(false);\r\n\r\n                            }).catch((err) => {\r\n                                console.log(err);\r\n                                setsearching(false);\r\n                            })\r\n\r\n                        }).catch((err) => {\r\n                            console.log(err);\r\n                            setsearching(false);\r\n                        })\r\n                    })\r\n\r\n\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                    setsearching(false);\r\n                })\r\n            })\r\n\r\n\r\n        }).catch((err) => {\r\n            console.log(err);\r\n            setsearching(false);\r\n        })\r\n    }\r\n\r\n    const SearchAndFilter = (query: any) => {\r\n        const lowerCaseQuery = query.toLowerCase();\r\n        if (lowerCaseQuery === '') {\r\n            setFilteredRoomList([]);\r\n            return;\r\n        }\r\n        const newrooms = rooms\r\n            .filter((room) => room.price.includes(lowerCaseQuery))\r\n            .map((room) => ({\r\n                ...room,\r\n                rank: room.price.indexOf(lowerCaseQuery),\r\n            }))\r\n            .sort((a, b) => a.rank - b.rank);\r\n\r\n        setFilteredRoomList(newrooms);\r\n    }\r\n\r\n    const Hotels = () => {\r\n        axios.get(`https://sunstarapi.herokuapp.com/hotel`).then((res) => {\r\n            const hotelsdata: any = [];\r\n\r\n            res.data.forEach((hotel) => {\r\n                hotelsdata.push({ id: hotel._id, name: hotel.name });\r\n            })\r\n            sethistory(hotelsdata);\r\n\r\n        }).catch((err) => {\r\n            console.log(err);\r\n            setsearching(false);\r\n        })\r\n    }\r\n\r\n    const Rooms = () => {\r\n        axios.get(`https://sunstarapi.herokuapp.com/room/`).then((res) => {\r\n            const roomdata: any = [];\r\n\r\n            res.data.forEach((room: any) => {\r\n                roomdata.push({ id: room._id, name: room.type });\r\n            })\r\n            setroomhistory(roomdata);\r\n\r\n        }).catch((err) => {\r\n            console.log(err);\r\n            setsearching(false);\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        Hotels();\r\n        Rooms();\r\n        SearchAndFilter(query)\r\n    }, [query]);\r\n\r\n    return (\r\n        <View style={{ height: '100%', backgroundColor: theme.background }}>\r\n            <StatusBar barStyle={dark ? 'light-content' : 'dark-content'} backgroundColor={theme.background} />\r\n\r\n            <View style={[{\r\n                height: 60, width: '100%', flexDirection: 'row', alignItems: 'center',\r\n                justifyContent: 'space-evenly'\r\n            }]}>\r\n\r\n                <Icon style={{ marginHorizontal: 10 }} type=\"ionicon\" name={Platform.OS === 'ios' ? 'chevron-back' : 'arrow-back'} size={28} color={theme.text} onPress={() => navigation.goBack()} />\r\n\r\n                <InputComponent changeText={(e) => { GetRooms(e) }} value={query} left={<TextInput.Icon name=\"magnify\" />} hint=\"Find accomodation\" style={{ width: '80%', backgroundColor: theme.border }} />\r\n            </View>\r\n\r\n            <View style={{\r\n                height: 60, width: '100%', flexDirection: 'row', alignItems: 'center',\r\n                justifyContent: 'flex-start', paddingHorizontal: 10\r\n            }}>\r\n\r\n                <View style={{ width: 50}}>\r\n                    <Icon style={{ marginHorizontal: 10 }} type=\"material-community\" name='history' size={28} color={theme.text} onPress={() => navigation.goBack()} />\r\n                </View>\r\n                <View>\r\n                    <FlatList showsHorizontalScrollIndicator={false} ItemSeparatorComponent={Separator} horizontal data={history} renderItem={({ item, index }) => (\r\n                        <TouchableOpacity onPress={() => { GetRooms(item.name); setquery(item.name) }}>\r\n                            <View style={{\r\n                                flexDirection: 'row',\r\n                                justifyContent: 'flex-start',\r\n                                backgroundColor: Constance.Black,\r\n                                marginHorizontal: 5,\r\n                                borderRadius: 12, paddingHorizontal: 10, paddingVertical: 2\r\n                            }}>\r\n                                <TextComponent text={item.name} key={item.id} style={{ fontSize: Constance.small, color: Constance.White }} />\r\n                                <Icon onPress={() => { }} type=\"ionicon\" name=\"close\" color={Constance.White} />\r\n                            </View>\r\n                        </TouchableOpacity>\r\n                    )} />\r\n                    <FlatList style={{ marginTop: 5 }} showsHorizontalScrollIndicator={false} ItemSeparatorComponent={Separator} horizontal data={roomhistory} renderItem={({ item, index }) => (\r\n                        <TouchableOpacity onPress={() => { GetRooms(item.name); setquery(item.name) }}>\r\n                            <View style={{\r\n                                flexDirection: 'row',\r\n                                justifyContent: 'flex-start',\r\n                                backgroundColor: Constance.Black,\r\n                                marginHorizontal: 5,\r\n                                borderRadius: 12, paddingHorizontal: 10, paddingVertical: 2\r\n                            }}>\r\n                                <TextComponent text={item.name} key={item.id} style={{ fontSize: Constance.small, color: Constance.White }} />\r\n                            </View>\r\n                        </TouchableOpacity>\r\n                    )} />\r\n                </View>\r\n\r\n            </View>\r\n\r\n            <View style={{ flexDirection: 'row', justifyContent: 'space-between', paddingHorizontal: 10, }}>\r\n                <TextComponent text={'Room results'} style={{ fontSize: Constance.medium, color: theme.text, fontWeight: 'bold' }} />\r\n                <TextComponent text={`${rooms.length} total`} style={{ fontSize: Constance.small, color: theme.text, fontWeight: '900' }} />\r\n            </View>\r\n            {rooms.length > 0 ?\r\n                <View>\r\n\r\n                    <FlatList alwaysBounceHorizontal horizontal showsVerticalScrollIndicator={false} ItemSeparatorComponent={Separator} data={rooms} renderItem={({ item, index }) => (\r\n                        <NearestItemComponent image={{ uri: item.images }} address={item.location}\r\n                            name={item.type} price={item.price} ratings={item.rates}\r\n                            key={item.roomId} press={() => { navigation.navigate('roomscreen', { key: item.key }); }} />\r\n                    )} />\r\n                </View> :\r\n                <View style={{ height: \"30%\", marginVertical: 30, justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Image source={require('../../assets/images/search.png')} style={{ width: 150, height: 150 }} />\r\n                    {searching ?\r\n                        <Text style={{ fontSize: Constance.medium, color: Constance.Grey, fontWeight: 'bold' }}>Finding rooms...</Text> :\r\n                        <Text style={{ fontSize: Constance.medium, color: Constance.Grey }}>No results found</Text>}\r\n                </View>}\r\n\r\n            <View style={{ flexDirection: 'row', justifyContent: 'space-between', paddingHorizontal: 10, }}>\r\n                <TextComponent text={'Hotel results'} style={{ fontSize: Constance.medium, color: theme.text, fontWeight: 'bold' }} />\r\n                <TextComponent text={`${hotels.length} total`} style={{ fontSize: Constance.small, color: theme.text, fontWeight: '900' }} />\r\n            </View>\r\n            {hotels.length > 0 ?\r\n                <View>\r\n\r\n                    <FlatList alwaysBounceHorizontal horizontal showsVerticalScrollIndicator={false} ItemSeparatorComponent={Separator} data={hotels} renderItem={({ item, index }) => (\r\n                        <NearestItemComponent image={{ uri: item.images }} address={item.location}\r\n                            name={item.hotelname} price={''} ratings={item.rates}\r\n                            key={item.roomId} press={() => { navigation.navigate('roomscreen', { key: item.key }); }} />\r\n                    )} />\r\n                </View> :\r\n                <View style={{ height: \"30%\", marginVertical: 30, justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Image source={require('../../assets/images/search.png')} style={{ width: 150, height: 150 }} />\r\n                    {searching ?\r\n                        <Text style={{ fontSize: Constance.medium, color: Constance.Grey, fontWeight: 'bold' }}>Finding hotels...</Text> :\r\n                        <Text style={{ fontSize: Constance.medium, color: Constance.Grey }}>No results found</Text>}\r\n                </View>}\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}