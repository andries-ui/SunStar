{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Checkbox, Divider, Menu, TextInput, TouchableRipple, useTheme } from \"react-native-paper\";\nimport React, { forwardRef, useEffect, useState, useCallback, Fragment } from \"react\";\nvar DropDown = forwardRef(function (props, ref) {\n  var activeTheme = useTheme();\n  var _props$multiSelect = props.multiSelect,\n      multiSelect = _props$multiSelect === void 0 ? false : _props$multiSelect,\n      visible = props.visible,\n      onDismiss = props.onDismiss,\n      showDropDown = props.showDropDown,\n      value = props.value,\n      setValue = props.setValue,\n      activeColor = props.activeColor,\n      mode = props.mode,\n      label = props.label,\n      placeholder = props.placeholder,\n      inputProps = props.inputProps,\n      list = props.list,\n      dropDownContainerMaxHeight = props.dropDownContainerMaxHeight,\n      dropDownContainerHeight = props.dropDownContainerHeight,\n      theme = props.theme,\n      dropDownStyle = props.dropDownStyle,\n      dropDownItemStyle = props.dropDownItemStyle,\n      dropDownItemSelectedStyle = props.dropDownItemSelectedStyle,\n      dropDownItemTextStyle = props.dropDownItemTextStyle,\n      dropDownItemSelectedTextStyle = props.dropDownItemSelectedTextStyle,\n      accessibilityLabel = props.accessibilityLabel;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      displayValue = _useState2[0],\n      setDisplayValue = _useState2[1];\n\n  var _useState3 = useState({\n    height: 0,\n    width: 0,\n    x: 0,\n    y: 0\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inputLayout = _useState4[0],\n      setInputLayout = _useState4[1];\n\n  var onLayout = function onLayout(event) {\n    setInputLayout(event.nativeEvent.layout);\n  };\n\n  useEffect(function () {\n    if (multiSelect) {\n      var _labels = list.filter(function (_) {\n        return value.indexOf(_.value) !== -1;\n      }).map(function (_) {\n        return _.label;\n      }).join(\", \");\n\n      setDisplayValue(_labels);\n    } else {\n      var _list$find;\n\n      var _label = (_list$find = list.find(function (_) {\n        return _.value === value;\n      })) == null ? void 0 : _list$find.label;\n\n      if (_label) {\n        setDisplayValue(_label);\n      }\n    }\n  }, [list, value]);\n  var isActive = useCallback(function (currentValue) {\n    if (multiSelect) {\n      return value.indexOf(currentValue) !== -1;\n    } else {\n      return value === currentValue;\n    }\n  }, [value]);\n  var setActive = useCallback(function (currentValue) {\n    if (multiSelect) {\n      var valueIndex = value.indexOf(currentValue);\n      var values = value.split(\",\");\n\n      if (valueIndex === -1) {\n        setValue([].concat(_toConsumableArray(values), [currentValue]).join(\",\"));\n      } else {\n        setValue(_toConsumableArray(values).filter(function (value) {\n          return value !== currentValue;\n        }).join(\",\"));\n      }\n    } else {\n      setValue(currentValue);\n    }\n  }, [value]);\n  return React.createElement(Menu, {\n    visible: visible,\n    onDismiss: onDismiss,\n    theme: theme,\n    anchor: React.createElement(TouchableRipple, {\n      ref: ref,\n      onPress: showDropDown,\n      onLayout: onLayout,\n      accessibilityLabel: accessibilityLabel\n    }, React.createElement(View, {\n      pointerEvents: \"none\"\n    }, React.createElement(TextInput, _extends({\n      value: displayValue,\n      mode: mode,\n      label: label,\n      placeholder: placeholder,\n      pointerEvents: \"none\",\n      theme: theme,\n      right: React.createElement(TextInput.Icon, {\n        name: visible ? \"menu-up\" : \"menu-down\"\n      })\n    }, inputProps)))),\n    style: _objectSpread({\n      maxWidth: inputLayout == null ? void 0 : inputLayout.width,\n      width: inputLayout == null ? void 0 : inputLayout.width,\n      marginTop: inputLayout == null ? void 0 : inputLayout.height\n    }, dropDownStyle)\n  }, React.createElement(ScrollView, {\n    bounces: false,\n    style: _objectSpread({}, dropDownContainerHeight ? {\n      height: dropDownContainerHeight\n    } : {\n      maxHeight: dropDownContainerMaxHeight || 200\n    })\n  }, list.map(function (_item, _index) {\n    return React.createElement(Fragment, {\n      key: _item.value\n    }, React.createElement(TouchableRipple, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: \"center\"\n      },\n      onPress: function onPress() {\n        setActive(_item.value);\n\n        if (onDismiss) {\n          onDismiss();\n        }\n      }\n    }, React.createElement(Fragment, null, React.createElement(Menu.Item, {\n      titleStyle: _objectSpread({\n        color: isActive(_item.value) ? activeColor || (theme || activeTheme).colors.primary : (theme || activeTheme).colors.text\n      }, isActive(_item.value) ? dropDownItemSelectedTextStyle : dropDownItemTextStyle),\n      title: _item.custom || _item.label,\n      style: _objectSpread({\n        flex: 1,\n        maxWidth: inputLayout == null ? void 0 : inputLayout.width\n      }, isActive(_item.value) ? dropDownItemSelectedStyle : dropDownItemStyle)\n    }), multiSelect && React.createElement(Checkbox.Android, {\n      theme: {\n        colors: {\n          accent: activeTheme == null ? void 0 : activeTheme.colors.primary\n        }\n      },\n      status: isActive(_item.value) ? \"checked\" : \"unchecked\",\n      onPress: function onPress() {\n        return setActive(_item.value);\n      }\n    }))), React.createElement(Divider, null));\n  })));\n});\nexport default DropDown;","map":{"version":3,"sources":["D:/Development/Mobile Development/React native/Hotel/SunStar/SunStar/userapp/node_modules/react-native-paper-dropdown/dist/DropDown.js"],"names":["Checkbox","Divider","Menu","TextInput","TouchableRipple","useTheme","React","forwardRef","useEffect","useState","useCallback","Fragment","DropDown","props","ref","activeTheme","multiSelect","visible","onDismiss","showDropDown","value","setValue","activeColor","mode","label","placeholder","inputProps","list","dropDownContainerMaxHeight","dropDownContainerHeight","theme","dropDownStyle","dropDownItemStyle","dropDownItemSelectedStyle","dropDownItemTextStyle","dropDownItemSelectedTextStyle","accessibilityLabel","displayValue","setDisplayValue","height","width","x","y","inputLayout","setInputLayout","onLayout","event","nativeEvent","layout","_labels","filter","_","indexOf","map","join","_label","find","isActive","currentValue","setActive","valueIndex","values","split","maxWidth","marginTop","maxHeight","_item","_index","flexDirection","alignItems","color","colors","primary","text","custom","flex","accent"],"mappings":"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","sourcesContent":["import { ScrollView, View, } from \"react-native\";\nimport { Checkbox, Divider, Menu, TextInput, TouchableRipple, useTheme, } from \"react-native-paper\";\nimport React, { forwardRef, useEffect, useState, useCallback, Fragment, } from \"react\";\nconst DropDown = forwardRef((props, ref) => {\n    const activeTheme = useTheme();\n    const { multiSelect = false, visible, onDismiss, showDropDown, value, setValue, activeColor, mode, label, placeholder, inputProps, list, dropDownContainerMaxHeight, dropDownContainerHeight, theme, dropDownStyle, dropDownItemStyle, dropDownItemSelectedStyle, dropDownItemTextStyle, dropDownItemSelectedTextStyle, accessibilityLabel, } = props;\n    const [displayValue, setDisplayValue] = useState(\"\");\n    const [inputLayout, setInputLayout] = useState({\n        height: 0,\n        width: 0,\n        x: 0,\n        y: 0,\n    });\n    const onLayout = (event) => {\n        setInputLayout(event.nativeEvent.layout);\n    };\n    useEffect(() => {\n        if (multiSelect) {\n            const _labels = list\n                .filter((_) => value.indexOf(_.value) !== -1)\n                .map((_) => _.label)\n                .join(\", \");\n            setDisplayValue(_labels);\n        }\n        else {\n            const _label = list.find((_) => _.value === value)?.label;\n            if (_label) {\n                setDisplayValue(_label);\n            }\n        }\n    }, [list, value]);\n    const isActive = useCallback((currentValue) => {\n        if (multiSelect) {\n            return value.indexOf(currentValue) !== -1;\n        }\n        else {\n            return value === currentValue;\n        }\n    }, [value]);\n    const setActive = useCallback((currentValue) => {\n        if (multiSelect) {\n            const valueIndex = value.indexOf(currentValue);\n            const values = value.split(\",\");\n            if (valueIndex === -1) {\n                setValue([...values, currentValue].join(\",\"));\n            }\n            else {\n                setValue([...values].filter((value) => value !== currentValue).join(\",\"));\n            }\n        }\n        else {\n            setValue(currentValue);\n        }\n    }, [value]);\n    return (<Menu visible={visible} onDismiss={onDismiss} theme={theme} anchor={<TouchableRipple ref={ref} onPress={showDropDown} onLayout={onLayout} accessibilityLabel={accessibilityLabel}>\n            <View pointerEvents={\"none\"}>\n              <TextInput value={displayValue} mode={mode} label={label} placeholder={placeholder} pointerEvents={\"none\"} theme={theme} right={<TextInput.Icon name={visible ? \"menu-up\" : \"menu-down\"}/>} {...inputProps}/>\n            </View>\n          </TouchableRipple>} style={{\n            maxWidth: inputLayout?.width,\n            width: inputLayout?.width,\n            marginTop: inputLayout?.height,\n            ...dropDownStyle,\n        }}>\n        <ScrollView bounces={false} style={{\n            ...(dropDownContainerHeight\n                ? {\n                    height: dropDownContainerHeight,\n                }\n                : {\n                    maxHeight: dropDownContainerMaxHeight || 200,\n                }),\n        }}>\n          {list.map((_item, _index) => (<Fragment key={_item.value}>\n              <TouchableRipple style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n            }} onPress={() => {\n                setActive(_item.value);\n                if (onDismiss) {\n                    onDismiss();\n                }\n            }}>\n                <Fragment>\n                  <Menu.Item titleStyle={{\n                color: isActive(_item.value)\n                    ? activeColor || (theme || activeTheme).colors.primary\n                    : (theme || activeTheme).colors.text,\n                ...(isActive(_item.value)\n                    ? dropDownItemSelectedTextStyle\n                    : dropDownItemTextStyle),\n            }} title={_item.custom || _item.label} style={{\n                flex: 1,\n                maxWidth: inputLayout?.width,\n                ...(isActive(_item.value)\n                    ? dropDownItemSelectedStyle\n                    : dropDownItemStyle),\n            }}/>\n                  {multiSelect && (<Checkbox.Android theme={{\n                    colors: { accent: activeTheme?.colors.primary },\n                }} status={isActive(_item.value) ? \"checked\" : \"unchecked\"} onPress={() => setActive(_item.value)}/>)}\n                </Fragment>\n              </TouchableRipple>\n              <Divider />\n            </Fragment>))}\n        </ScrollView>\n      </Menu>);\n});\nexport default DropDown;\n"]},"metadata":{},"sourceType":"module"}