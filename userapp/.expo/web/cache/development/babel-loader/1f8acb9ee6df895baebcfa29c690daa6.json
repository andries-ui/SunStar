{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { requestForegroundPermissionsAsync } from \"expo-location\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TextInput } from \"react-native-paper\";\nimport { ThemeContext } from \"../theme/themeProvider\";\nimport InputComponent from \"../components/input\";\nimport Constance from \"../theme/const\";\nimport { Icon } from \"react-native-elements\";\nimport TextComponent from \"../components/text\";\nimport NearestItemComponent from \"../components/nearest\";\nimport Separator from \"../components/separater\";\nimport PopularItemComponent from \"../components/popular\";\nimport axios from \"axios\";\nimport * as Location from 'expo-location';\nimport * as SecureStore from 'expo-secure-store';\nimport { createShimmerPlaceholder } from 'react-native-shimmer-placeholder';\nimport LinearGradient from 'expo-linear-gradient';\nvar ShimmerPlaceholder = createShimmerPlaceholder(LinearGradient);\nvar Tab = createBottomTabNavigator();\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme,\n      dark = _useContext.dark,\n      toggle = _useContext.toggle;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      hotels = _useState2[0],\n      sethotels = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      address = _useState4[0],\n      setaddress = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      result = _useState6[0],\n      setresult = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      err = _useState8[0],\n      seterr = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      latitude = _useState10[0],\n      setlatitude = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      longitude = _useState12[0],\n      setlongitude = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      region = _useState14[0],\n      setregion = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      location = _useState16[0],\n      setLocation = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      errorMsg = _useState18[0],\n      setErrorMsg = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      getLocation = _useState20[0],\n      setGetLocation = _useState20[1];\n\n  var getToken = function getToken() {\n    var re;\n    return _regeneratorRuntime.async(function getToken$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync('token'));\n\n          case 2:\n            _context.t0 = _context.sent;\n\n            if (_context.t0) {\n              _context.next = 5;\n              break;\n            }\n\n            _context.t0 = 'null';\n\n          case 5:\n            re = _context.t0;\n            setresult(re);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleSelect = function handleSelect(key) {\n    console.log(key);\n    navigation.navigate('roomscreen', {\n      key: key\n    });\n  };\n\n  var GetHotels = function GetHotels() {\n    var url = \"https://sunstarapi.herokuapp.com/room\";\n    axios.get(url).then(function (res) {\n      var roomdata = [];\n      res.data.forEach(function (room) {\n        axios.get(\"https://sunstarapi.herokuapp.com/roomRating/ratings/\" + room._id).then(function (rating_res) {\n          var total = rating_res.data.length * 5;\n          var ratings = 5.0;\n\n          for (var item in rating_res.data) {\n            ratings = ratings + parseInt(rating_res.data[item].ratedStar.toString()).substring(0, 3);\n          }\n\n          var totalRates = 5.0;\n\n          if (total) {\n            totalRates = ratings / total * 5;\n          }\n\n          axios.get(\"https://sunstarapi.herokuapp.com/property/\" + room._id).then(function (property_res) {\n            var data = {\n              key: room._id,\n              type: room.type,\n              price: room.price,\n              status: room.status,\n              floor: room.floor,\n              rates: totalRates.toString(),\n              roomNumber: room.roomNumber,\n              hotelId: room.hotelId,\n              bedtype: property_res.data.bedType,\n              tv: property_res.data.tv,\n              wifi: property_res.data.wifi,\n              parking: property_res.data.parking,\n              numberOfBed: property_res.data.numberOfBed,\n              images: property_res.data.images[0],\n              roomId: property_res.data.roomId\n            };\n            roomdata.push(data);\n            sethotels(roomdata);\n          }).catch(function (err) {\n            console.log(err);\n          });\n        }).catch(function (err) {\n          console.log(err);\n        });\n      });\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  var starWarching = function starWarching() {\n    return _regeneratorRuntime.async(function starWarching$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(requestForegroundPermissionsAsync());\n\n          case 3:\n            _context2.next = 8;\n            break;\n\n          case 5:\n            _context2.prev = 5;\n            _context2.t0 = _context2[\"catch\"](0);\n            seterr(_context2.t0);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var updateState = function updateState() {\n    var _await$Location$reque, status, _location, rigion;\n\n    return _regeneratorRuntime.async(function updateState$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n          case 3:\n            _await$Location$reque = _context3.sent;\n            status = _await$Location$reque.status;\n\n            if (!(status !== 'granted')) {\n              _context3.next = 7;\n              break;\n            }\n\n            return _context3.abrupt(\"return\");\n\n          case 7:\n            _context3.next = 9;\n            return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n          case 9:\n            _location = _context3.sent;\n            setlatitude(_location.coords.latitude);\n            setlongitude(_location.coords.longitude);\n            _context3.next = 14;\n            return _regeneratorRuntime.awrap(Location.reverseGeocodeAsync({\n              longitude: longitude,\n              latitude: latitude\n            }));\n\n          case 14:\n            rigion = _context3.sent;\n            setaddress(rigion[0].isoCountryCode + \", \" + rigion[0].region + \", \" + rigion[0].city + \", \" + rigion[0].street + \", \" + rigion[0].postalCode);\n            setregion(rigion[0]);\n            _context3.next = 21;\n            break;\n\n          case 19:\n            _context3.prev = 19;\n            _context3.t0 = _context3[\"catch\"](0);\n\n          case 21:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 19]], Promise);\n  };\n\n  useEffect(function () {\n    starWarching();\n    updateState();\n    getToken();\n    GetHotels();\n  }, []);\n  return React.createElement(View, {\n    style: {\n      backgroundColor: theme.background,\n      height: '100%',\n      width: '100%'\n    }\n  }, React.createElement(View, {\n    style: {\n      marginVertical: 20,\n      paddingHorizontal: 20,\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '85%',\n      borderRadius: 15,\n      backgroundColor: theme.background\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('searchscreen');\n    }\n  }, React.createElement(InputComponent, {\n    editable: false,\n    left: React.createElement(TextInput.Icon, {\n      name: \"magnify\"\n    }),\n    hint: \"Find accomodation\",\n    style: {\n      width: '95%',\n      backgroundColor: theme.border\n    }\n  }))), React.createElement(View, {\n    style: {\n      backgroundColor: theme.borderAlt,\n      height: 40,\n      width: 40,\n      justifyContent: 'center',\n      alignItems: 'center',\n      borderRadius: 12\n    }\n  }, React.createElement(Icon, {\n    type: \"Ionicon\",\n    name: \"notifications\",\n    color: theme.text,\n    onPress: function onPress() {\n      return navigation.navigate('notivationscreen', {\n        indiNotif: true\n      });\n    }\n  }))), React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false\n  }, React.createElement(View, {\n    style: {\n      paddingBottom: 80\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      paddingHorizontal: 10\n    }\n  }, React.createElement(TextComponent, {\n    text: 'Nearest accomodations',\n    style: {\n      fontSize: Constance.medium,\n      color: theme.text,\n      fontWeight: 'bold'\n    }\n  }), React.createElement(TextComponent, {\n    text: 'See all',\n    style: {\n      fontSize: Constance.small,\n      color: theme.text,\n      fontWeight: '900'\n    }\n  })), React.createElement(View, null, React.createElement(FlatList, {\n    pagingEnabled: true,\n    showsHorizontalScrollIndicator: false,\n    ItemSeparatorComponent: Separator,\n    horizontal: true,\n    data: hotels,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item,\n          index = _ref2.index;\n      return React.createElement(NearestItemComponent, {\n        image: {\n          uri: item.images\n        },\n        address: item.location,\n        name: item.type,\n        price: item.price,\n        ratings: item.rates,\n        key: item.roomId,\n        press: function press() {\n          navigation.navigate('roomscreen', {\n            key: item.key\n          });\n        }\n      });\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      paddingHorizontal: 10,\n      marginTop: 5\n    }\n  }, React.createElement(TextComponent, {\n    text: 'Popular',\n    style: {\n      fontSize: Constance.medium,\n      color: theme.text,\n      fontWeight: 'bold'\n    }\n  }), React.createElement(TextComponent, {\n    text: '',\n    style: {\n      fontSize: Constance.small,\n      color: theme.text,\n      fontWeight: '900'\n    }\n  })), React.createElement(View, null, React.createElement(FlatList, {\n    ItemSeparatorComponent: Separator,\n    data: hotels,\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item,\n          index = _ref3.index;\n      return React.createElement(PopularItemComponent, {\n        image: {\n          uri: item.images\n        },\n        address: region ? region.city : \"PLK\",\n        name: item.type,\n        price: item.price,\n        ratings: item.rates,\n        key: item.roomId,\n        press: function press() {\n          navigation.navigate('roomscreen', {\n            key: item.key,\n            address: address\n          });\n        }\n      });\n    }\n  })))));\n};\n\nexport default HomeScreen;","map":{"version":3,"sources":["D:/Development/Mobile Development/React native/Hotel/SunStar/SunStar/userapp/source/screens/home.tsx"],"names":["React","useContext","useEffect","useState","createBottomTabNavigator","requestForegroundPermissionsAsync","TextInput","ThemeContext","InputComponent","Constance","Icon","TextComponent","NearestItemComponent","Separator","PopularItemComponent","axios","Location","SecureStore","createShimmerPlaceholder","LinearGradient","ShimmerPlaceholder","Tab","HomeScreen","navigation","theme","dark","toggle","hotels","sethotels","address","setaddress","result","setresult","err","seterr","latitude","setlatitude","longitude","setlongitude","region","setregion","location","setLocation","errorMsg","setErrorMsg","getLocation","setGetLocation","getToken","getItemAsync","re","handleSelect","key","console","log","navigate","GetHotels","url","get","then","res","roomdata","data","forEach","room","_id","rating_res","total","length","ratings","item","parseInt","ratedStar","toString","substring","totalRates","property_res","type","price","status","floor","rates","roomNumber","hotelId","bedtype","bedType","tv","wifi","parking","numberOfBed","images","roomId","push","catch","starWarching","updateState","getCurrentPositionAsync","coords","reverseGeocodeAsync","rigion","isoCountryCode","city","street","postalCode","backgroundColor","background","height","width","marginVertical","paddingHorizontal","flexDirection","justifyContent","borderRadius","border","borderAlt","alignItems","text","indiNotif","paddingBottom","fontSize","medium","color","fontWeight","small","index","uri","marginTop"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { requestForegroundPermissionsAsync } from \"expo-location\";\r\nimport { FontAwesome5 } from '@expo/vector-icons'\r\nimport { FlatList, Image, ScrollView, StatusBar, TouchableOpacity, View } from \"react-native\";\r\nimport { IconButton, Text, TextInput } from \"react-native-paper\";\r\nimport BottomNavigation from \"../routes/bottomStack\";\r\nimport { ThemeContext } from \"../theme/themeProvider\";\r\nimport ActionBar from \"../components/actionbar\";\r\nimport InputComponent from \"../components/input\";\r\nimport Constance from \"../theme/const\";\r\nimport Progress from \"../components/indicator\";\r\nimport { Icon } from \"react-native-elements\";\r\nimport TextComponent from \"../components/text\";\r\nimport NearestItemComponent from \"../components/nearest\";\r\nimport Separator from \"../components/separater\";\r\nimport PopularItemComponent from \"../components/popular\";\r\nimport axios from \"axios\";\r\nimport * as Location from 'expo-location';\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport { createShimmerPlaceholder } from 'react-native-shimmer-placeholder'\r\nimport LinearGradient from 'expo-linear-gradient';\r\n\r\nconst ShimmerPlaceholder = createShimmerPlaceholder(LinearGradient)\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst HomeScreen = ({ navigation }) => {\r\n\r\n    const { theme, dark, toggle } = useContext(ThemeContext);\r\n    const [hotels, sethotels] = useState([]);\r\n    const [address, setaddress] = useState('');\r\n    const [result, setresult] = useState('');\r\n    const [err, seterr] = useState('');\r\n    const [latitude, setlatitude] = useState<number>(0);\r\n    const [longitude, setlongitude] = useState<number>(0);\r\n    const [region, setregion] = useState<any>();\r\n\r\n    const [location, setLocation] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState(null);\r\n    const [getLocation, setGetLocation] = useState(false);\r\n\r\n\r\n\r\n    const getToken = async () => {\r\n        let re = await SecureStore.getItemAsync('token') || 'null';\r\n\r\n        setresult(re)\r\n\r\n    }\r\n    const handleSelect = (key) => {\r\n\r\n        console.log(key);\r\n\r\n        navigation.navigate('roomscreen', { key: key });\r\n    }\r\n\r\n    const GetHotels = () => {\r\n        const url = \"https://sunstarapi.herokuapp.com/room\";\r\n\r\n        axios.get(url).then((res) => {\r\n\r\n            const roomdata: any = [];\r\n            res.data.forEach((room: any) => {\r\n\r\n                axios.get(`https://sunstarapi.herokuapp.com/roomRating/ratings/${room._id}`).then((rating_res) => {\r\n\r\n                    let total: any = rating_res.data.length * 5;\r\n                    let ratings: any = 5.0;\r\n                    for (let item in rating_res.data) {\r\n                        ratings = ratings + parseInt(rating_res.data[item].ratedStar.toString()).substring(0, 3);\r\n                        // console.log(ratings, \"===>>>>>>\");\r\n                    }\r\n\r\n                    let totalRates: any = 5.0;\r\n                    if (total) {\r\n                        totalRates = ratings / total * 5;\r\n\r\n                    }\r\n                    axios.get(`https://sunstarapi.herokuapp.com/property/${room._id}`).then((property_res) => {\r\n\r\n                        const data = {\r\n                            key: room._id,\r\n                            type: room.type,\r\n                            price: room.price,\r\n                            status: room.status,\r\n                            floor: room.floor,\r\n                            rates: totalRates.toString(),\r\n                            roomNumber: room.roomNumber,\r\n                            hotelId: room.hotelId,\r\n                            bedtype: property_res.data.bedType,\r\n                            tv: property_res.data.tv,\r\n                            wifi: property_res.data.wifi,\r\n                            parking: property_res.data.parking,\r\n                            numberOfBed: property_res.data.numberOfBed,\r\n                            images: property_res.data.images[0],\r\n                            roomId: property_res.data.roomId,\r\n                        }\r\n\r\n                        roomdata.push(data);\r\n                        sethotels(roomdata);\r\n\r\n                    }).catch((err) => {\r\n                        console.log(err);\r\n                    })\r\n\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                })\r\n            })\r\n\r\n\r\n        }).catch((err) => {\r\n            console.log(err);\r\n\r\n        })\r\n    }\r\n\r\n    const starWarching = async () => {\r\n        try {\r\n            await requestForegroundPermissionsAsync();\r\n\r\n        } catch (err: any) {\r\n            seterr(err)\r\n        }\r\n    }\r\n\r\n    const updateState = async () => {\r\n\r\n        try {\r\n\r\n            const { status } = await Location.requestForegroundPermissionsAsync();\r\n\r\n            if (status !== 'granted') { return; }\r\n\r\n            let location = await Location.getCurrentPositionAsync({});\r\n\r\n            setlatitude(location.coords.latitude);\r\n            setlongitude(location.coords.longitude);\r\n\r\n            let rigion = await Location.reverseGeocodeAsync({\r\n                longitude,\r\n                latitude\r\n            });\r\n\r\n            setaddress(rigion[0].isoCountryCode + \", \" + rigion[0].region + \", \" + rigion[0].city + \", \" + rigion[0].street + \", \" + rigion[0].postalCode)\r\n            setregion(rigion[0]);\r\n            //console.log(rigion[0]);\r\n\r\n\r\n        } catch (err) {\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        starWarching();\r\n        updateState();\r\n        getToken();\r\n        GetHotels();\r\n    }, [])\r\n\r\n\r\n    return (\r\n\r\n        <View style={{ backgroundColor: theme.background, height: '100%', width: '100%' }}>\r\n\r\n            <View style={{ marginVertical: 20, paddingHorizontal: 20, flexDirection: 'row', justifyContent: 'space-between' }}>\r\n\r\n                <View style={{ width: '85%', borderRadius: 15, backgroundColor: theme.background }}>\r\n                    <TouchableOpacity onPress={() => navigation.navigate('searchscreen')}>\r\n                        <InputComponent editable={false} left={<TextInput.Icon name=\"magnify\" />} hint=\"Find accomodation\" style={{ width: '95%', backgroundColor: theme.border }} />\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={{ backgroundColor: theme.borderAlt, height: 40, width: 40, justifyContent: 'center', alignItems: 'center', borderRadius: 12 }}>\r\n                    <Icon type='Ionicon' name='notifications' color={theme.text} onPress={() => navigation.navigate('notivationscreen', { indiNotif: true })} />\r\n                </View>\r\n            </View>\r\n\r\n\r\n            <ScrollView showsVerticalScrollIndicator={false} >\r\n                <View style={{ paddingBottom: 80 }}>\r\n\r\n                    <View style={{ flexDirection: 'row', justifyContent: 'space-between', paddingHorizontal: 10, }}>\r\n                        <TextComponent text={'Nearest accomodations'} style={{ fontSize: Constance.medium, color: theme.text, fontWeight: 'bold' }} />\r\n                        <TextComponent text={'See all'} style={{ fontSize: Constance.small, color: theme.text, fontWeight: '900' }} />\r\n                    </View>\r\n\r\n                    <View>\r\n                        <FlatList pagingEnabled showsHorizontalScrollIndicator={false} ItemSeparatorComponent={Separator} horizontal data={hotels} renderItem={({ item, index }) => (\r\n\r\n                            <NearestItemComponent image={{ uri: item.images }} address={item.location}\r\n                                name={item.type} price={item.price} ratings={item.rates}\r\n                                key={item.roomId} press={() => { navigation.navigate('roomscreen', { key: item.key }); }} />\r\n\r\n                        )} />\r\n                    </View>\r\n\r\n                    <View style={{ flexDirection: 'row', justifyContent: 'space-between', paddingHorizontal: 10, marginTop: 5 }}>\r\n                        <TextComponent text={'Popular'} style={{ fontSize: Constance.medium, color: theme.text, fontWeight: 'bold' }} />\r\n                        <TextComponent text={''} style={{ fontSize: Constance.small, color: theme.text, fontWeight: '900' }} />\r\n                    </View>\r\n                    <View>\r\n                        <FlatList ItemSeparatorComponent={Separator} data={hotels} renderItem={({ item, index }) => (\r\n                            <PopularItemComponent image={{ uri: item.images }} address={region ? region.city : \"PLK\"}\r\n                                name={item.type} price={item.price} ratings={item.rates}\r\n                                key={item.roomId} press={() => { navigation.navigate('roomscreen', { key: item.key, address: address }); }} />\r\n                        )} />\r\n                    </View>\r\n                </View>\r\n            </ScrollView>\r\n\r\n\r\n        </View>\r\n\r\n    )\r\n}\r\n\r\nexport default HomeScreen;"]},"metadata":{},"sourceType":"module"}