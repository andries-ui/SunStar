{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Divider, Icon, Image, Text } from 'react-native-elements';\nimport ActionBar from \"../components/actionbar\";\nimport style from \"../styles/screens/profile\";\nimport Constance from \"../theme/const\";\nimport { ThemeContext } from \"../theme/themeProvider\";\nimport Modal from \"react-native-modalbox\";\nimport ButtonComponent from \"../components/button\";\nimport InputComponent from \"../components/input\";\nimport modal from \"../styles/components/modal\";\nimport axios from 'axios';\nimport * as yup from 'yup';\nimport { Snackbar, TextInput } from 'react-native-paper';\nimport * as SecureStore from 'expo-secure-store';\nimport { Formik } from 'formik';\nimport TextComponent from \"../components/text\";\nimport * as Animatable from 'react-native-animatable';\nimport Progress from \"../components/indicator\";\nimport Cam from \"../components/camera\";\nvar passwordSchema = yup.object({\n  password: yup.string().required(\"Required\").min(8).matches(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/, \"Invalid password\")\n});\nvar profileSchema = yup.object({\n  names: yup.string().required(\"Required\").min(3).matches(/^(?![\\s.]+$)[a-zA-Z\\s.]*$/, \"Invalid name\"),\n  username: yup.string().required(\"Required\").min(3).matches(/^[a-zA-Z0-9]+$/, \"Invalid username\"),\n  contact: yup.string().required(\"Required\").min(10).matches(/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/, \"Invalid contact\")\n});\nvar emailSchema = yup.object({\n  email: yup.string().required(\"Required\").matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, \"Invalid email\")\n});\nvar resetPasswordSchema = yup.object({\n  password: yup.string().required(\"Required\").min(8).matches(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/, \"Invalid password\"),\n  confirmpassword: yup.string().required(\"Required\").min(8).matches(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/, \"Invalid password\")\n});\n\nvar Account = function Account(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalComfirmVisible = _useState2[0],\n      setModalComfirmVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalPasswordVisible = _useState4[0],\n      setModalPasswordVisible = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalUsernameVisible = _useState6[0],\n      setModalUsernameVisible = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      modalUpdateVisible = _useState8[0],\n      setModalUpdateVisible = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      visiblepassword = _useState10[0],\n      setvisiblepassword = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      visibleComfirmPassword = _useState12[0],\n      setvisibleComfirmPassword = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      action = _useState14[0],\n      setaction = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      newPassword = _useState16[0],\n      setnewPassword = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      newUsername = _useState18[0],\n      setnewUsername = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      oldPassword = _useState20[0],\n      setoldPassword = _useState20[1];\n\n  var _useState21 = useState(''),\n      _useState22 = _slicedToArray(_useState21, 2),\n      username = _useState22[0],\n      setusername = _useState22[1];\n\n  var _useState23 = useState(''),\n      _useState24 = _slicedToArray(_useState23, 2),\n      contact = _useState24[0],\n      setcontact = _useState24[1];\n\n  var _useState25 = useState(''),\n      _useState26 = _slicedToArray(_useState25, 2),\n      names = _useState26[0],\n      setnames = _useState26[1];\n\n  var _useState27 = useState(''),\n      _useState28 = _slicedToArray(_useState27, 2),\n      email = _useState28[0],\n      setemail = _useState28[1];\n\n  var _useState29 = useState(false),\n      _useState30 = _slicedToArray(_useState29, 2),\n      invalid = _useState30[0],\n      setinvalid = _useState30[1];\n\n  var _useState31 = useState(false),\n      _useState32 = _slicedToArray(_useState31, 2),\n      load = _useState32[0],\n      setload = _useState32[1];\n\n  var _useState33 = useState(''),\n      _useState34 = _slicedToArray(_useState33, 2),\n      message = _useState34[0],\n      setmessage = _useState34[1];\n\n  var _useState35 = useState(false),\n      _useState36 = _slicedToArray(_useState35, 2),\n      openCamera = _useState36[0],\n      setopenCamera = _useState36[1];\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme,\n      dark = _useContext.dark;\n\n  var handleConfirmPassword = function handleConfirmPassword() {\n    if (oldPassword) {\n      if (action === \"password\") {\n        setModalPasswordVisible(true);\n        setModalComfirmVisible(false);\n      } else {\n        setModalUsernameVisible(true);\n        setModalComfirmVisible(false);\n      }\n    } else {\n      console.log('====================================');\n      console.log(\"nonsonce!!!!!!!!:)\");\n      console.log('====================================');\n    }\n  };\n\n  var signOut = function signOut() {\n    return _regeneratorRuntime.async(function signOut$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.deleteItemAsync('token'));\n\n          case 2:\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(SecureStore.deleteItemAsync('key'));\n\n          case 4:\n            navigation.navigate('loginscreen');\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var HandleAlert = function HandleAlert() {\n    Alert.alert('Exiting app', 'You are prompting to exit the application, would you like to proceed?', [{\n      text: 'No thanks',\n      onPress: function onPress() {\n        return console.log('Cancel Pressed');\n      },\n      style: 'cancel'\n    }, {\n      text: 'Yes, please',\n      onPress: function onPress() {\n        return signOut();\n      }\n    }]);\n  };\n\n  var GetUserData = function GetUserData() {\n    var token, key;\n    return _regeneratorRuntime.async(function GetUserData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync('token'));\n\n          case 2:\n            _context2.t0 = _context2.sent;\n\n            if (_context2.t0) {\n              _context2.next = 5;\n              break;\n            }\n\n            _context2.t0 = 'null';\n\n          case 5:\n            token = _context2.t0;\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync('key'));\n\n          case 8:\n            _context2.t1 = _context2.sent;\n\n            if (_context2.t1) {\n              _context2.next = 11;\n              break;\n            }\n\n            _context2.t1 = 'null';\n\n          case 11:\n            key = _context2.t1;\n            axios.get('https://sunstarapi.herokuapp.com/user/'.concat(key)).then(function (results) {\n              var data = results.data;\n              setnames(data.names);\n              setemail(data.email);\n              setusername(data.username);\n              setcontact(data.contact);\n              console.log(data.details);\n            }).catch(function (err) {\n              console.log(err + '.');\n            });\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var ReAuthenticate = function ReAuthenticate(values) {\n    var key;\n    return _regeneratorRuntime.async(function ReAuthenticate$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setload(true);\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync('key'));\n\n          case 3:\n            _context3.t0 = _context3.sent;\n\n            if (_context3.t0) {\n              _context3.next = 6;\n              break;\n            }\n\n            _context3.t0 = 'null';\n\n          case 6:\n            key = _context3.t0;\n            axios.post('https://sunstarapi.herokuapp.com/login/'.concat(key), values).then(function (res) {\n              var results = res.data;\n\n              if (results.status == 'Success') {\n                setload(false);\n\n                if (action === \"password\") {\n                  setModalPasswordVisible(true);\n                  setModalComfirmVisible(false);\n                  setinvalid(true);\n                  setmessage(results.message);\n                } else {\n                  setModalUsernameVisible(true);\n                  setModalComfirmVisible(false);\n                  setinvalid(true);\n                  setmessage(results.message);\n                }\n              } else {\n                setmessage(results.message);\n                setinvalid(true);\n                setload(false);\n              }\n            }).catch(function (err) {\n              console.log(err + '.');\n            });\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var UpdatePassword = function UpdatePassword(values) {\n    var key;\n    return _regeneratorRuntime.async(function UpdatePassword$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            setload(true);\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync('key'));\n\n          case 3:\n            _context4.t0 = _context4.sent;\n\n            if (_context4.t0) {\n              _context4.next = 6;\n              break;\n            }\n\n            _context4.t0 = 'null';\n\n          case 6:\n            key = _context4.t0;\n            axios.patch('https://sunstarapi.herokuapp.com/user/'.concat(key), values).then(function (res) {\n              var results = res.data;\n\n              if (results.status == 'Success') {\n                setModalPasswordVisible(false);\n                setinvalid(true);\n                setmessage(results.message);\n                setload(false);\n              } else {\n                setmessage(results.message);\n                setinvalid(true);\n                setload(false);\n              }\n            }).catch(function (err) {\n              setinvalid(true);\n              setmessage(err);\n              setload(false);\n            });\n\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var UpdateEmail = function UpdateEmail(values) {\n    var key;\n    return _regeneratorRuntime.async(function UpdateEmail$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            setload(true);\n            _context5.next = 3;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync('key'));\n\n          case 3:\n            _context5.t0 = _context5.sent;\n\n            if (_context5.t0) {\n              _context5.next = 6;\n              break;\n            }\n\n            _context5.t0 = 'null';\n\n          case 6:\n            key = _context5.t0;\n            axios.patch('https://sunstarapi.herokuapp.com/user/'.concat(key), values).then(function (res) {\n              var results = res.data;\n\n              if (results.status == 'Success') {\n                setModalPasswordVisible(false);\n                setinvalid(true);\n                setmessage(results.message);\n                setload(false);\n              } else {\n                setmessage(results.message);\n                setinvalid(true);\n                setload(false);\n              }\n            }).catch(function (err) {\n              setinvalid(true);\n              setmessage(err);\n              setload(false);\n            });\n\n          case 8:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var UpdateProfile = function UpdateProfile(values) {\n    var key;\n    return _regeneratorRuntime.async(function UpdateProfile$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            setload(true);\n            _context6.next = 3;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync('key'));\n\n          case 3:\n            _context6.t0 = _context6.sent;\n\n            if (_context6.t0) {\n              _context6.next = 6;\n              break;\n            }\n\n            _context6.t0 = 'null';\n\n          case 6:\n            key = _context6.t0;\n            axios.patch('https://sunstarapi.herokuapp.com/user/'.concat(key), values).then(function (res) {\n              var results = res.data;\n\n              if (results.status == 'Success') {\n                setModalPasswordVisible(false);\n                setinvalid(true);\n                setmessage(results.message);\n                setload(false);\n              } else {\n                setmessage(results.message);\n                setinvalid(true);\n                setload(false);\n              }\n            }).catch(function (err) {\n              setinvalid(true);\n              setmessage(err);\n              setload(false);\n            });\n\n          case 8:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    GetUserData();\n  }, []);\n  return React.createElement(View, {\n    style: [{\n      backgroundColor: theme.background,\n      height: '100%',\n      width: '100%'\n    }]\n  }, React.createElement(StatusBar, {\n    barStyle: dark ? 'light-content' : 'dark-content',\n    backgroundColor: theme.background\n  }), React.createElement(ActionBar, {\n    text: \"Profile\",\n    onBackPress: function onBackPress() {\n      return navigation.goBack();\n    },\n    textStyle: [style.lblProfile, {\n      color: theme.text\n    }],\n    iconBack: Platform.OS === 'ios' ? 'chevron-back' : 'arrow-back',\n    bottomleftradius: 35,\n    backgroundColor: theme.borderAlt\n  }), React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: 'bold',\n      fontSize: Constance.semi_large,\n      color: theme.text,\n      marginTop: 0\n    }]\n  }, \" \", names), React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: '100',\n      fontSize: Constance.small,\n      color: theme.text\n    }]\n  }, email), React.createElement(Divider, {\n    style: {\n      height: Constance.smallDivider,\n      backgroundColor: theme.borderAlt,\n      marginTop: 5\n    }\n  }), React.createElement(View, {\n    style: {\n      width: '85%',\n      marginHorizontal: 30,\n      backgroundColor: theme.borderAlt,\n      paddingVertical: 20,\n      borderRadius: 12,\n      marginTop: 20\n    }\n  }, React.createElement(View, {\n    style: [style.flexContainer, {\n      marginTop: 5\n    }]\n  }, React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: '100',\n      fontSize: Constance.small,\n      color: theme.text,\n      width: '40%',\n      textAlign: 'left'\n    }]\n  }, \" username \"), React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: 'bold',\n      fontSize: Constance.small,\n      color: theme.text\n    }]\n  }, \" \", username, \" \")), React.createElement(View, {\n    style: [style.flexContainer, {\n      marginTop: 5\n    }]\n  }, React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: '100',\n      fontSize: Constance.small,\n      color: theme.text,\n      width: '40%',\n      textAlign: 'left'\n    }]\n  }, \" Contact \"), React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: 'bold',\n      fontSize: Constance.small,\n      color: theme.text\n    }]\n  }, \" \", contact, \" \")), React.createElement(View, {\n    style: [style.flexContainer, {\n      marginTop: 5\n    }]\n  }, React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: '100',\n      fontSize: Constance.small,\n      color: theme.text,\n      width: '40%',\n      textAlign: 'left'\n    }]\n  }, \" Id \"), React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: 'bold',\n      fontSize: Constance.small,\n      color: theme.text\n    }]\n  }, \" Account \")), React.createElement(View, {\n    style: [style.flexContainer, {\n      marginTop: 5\n    }]\n  }, React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: '100',\n      fontSize: Constance.small,\n      color: theme.text,\n      width: '40%',\n      textAlign: 'left'\n    }]\n  }, \" Reservation ID \"), React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: 'bold',\n      fontSize: Constance.small,\n      color: theme.text\n    }]\n  }, \" Account \")), React.createElement(View, {\n    style: [{\n      position: 'absolute',\n      right: 10,\n      marginTop: 10\n    }]\n  }, React.createElement(Icon, {\n    type: \"material-community\",\n    name: \"pencil\",\n    color: theme.text,\n    onPress: function onPress() {\n      return setModalUpdateVisible(true);\n    }\n  }))), React.createElement(Text, {\n    style: [style.lblProfile, {\n      marginLeft: 20,\n      fontWeight: 'bold',\n      fontSize: Constance.small,\n      color: theme.text,\n      marginTop: 15\n    }]\n  }, \" Account \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setModalComfirmVisible(true);\n      setaction('password');\n    },\n    style: {\n      alignSelf: 'center',\n      width: '85%',\n      borderRadius: 7,\n      marginTop: 8\n    }\n  }, React.createElement(View, null, React.createElement(View, {\n    style: [style.flexContainer, {\n      justifyContent: 'space-between',\n      height: 50,\n      alignItems: 'center',\n      marginTop: 5\n    }]\n  }, React.createElement(View, {\n    style: [style.flexContainer]\n  }, React.createElement(Icon, {\n    type: \"ionicon\",\n    name: \"lock-closed\",\n    color: theme.text\n  }), React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: '100',\n      fontSize: Constance.small,\n      color: theme.text\n    }]\n  }, \" Change password \")), React.createElement(Icon, {\n    type: \"ionicon\",\n    name: \"chevron-forward\",\n    color: theme.text\n  })), React.createElement(Divider, {\n    style: {\n      height: Constance.smallDivider,\n      backgroundColor: theme.borderAlt\n    }\n  }))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setModalComfirmVisible(true);\n      setaction('username');\n    },\n    style: {\n      alignSelf: 'center',\n      width: '85%',\n      borderRadius: 7,\n      marginTop: 8\n    }\n  }, React.createElement(View, null, React.createElement(View, {\n    style: [style.flexContainer, {\n      justifyContent: 'space-between',\n      height: 50,\n      alignItems: 'center',\n      marginTop: 5\n    }]\n  }, React.createElement(View, {\n    style: [style.flexContainer]\n  }, React.createElement(Icon, {\n    type: \"ionicon\",\n    name: \"person-circle\",\n    color: theme.text\n  }), React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: '100',\n      fontSize: Constance.small,\n      color: theme.text\n    }]\n  }, \" Change username \")), React.createElement(Icon, {\n    type: \"ionicon\",\n    name: \"chevron-forward\",\n    color: theme.text\n  })), React.createElement(Divider, {\n    style: {\n      height: Constance.smallDivider,\n      backgroundColor: theme.borderAlt\n    }\n  }))), React.createElement(View, {\n    style: {\n      backgroundColor: theme.borderAlt,\n      paddingVertical: 5,\n      alignSelf: 'center',\n      width: '85%',\n      borderRadius: 12,\n      marginTop: 8,\n      position: 'absolute',\n      bottom: 15,\n      flexDirection: 'row',\n      justifyContent: 'space-evenly',\n      alignItems: 'center'\n    }\n  }, React.createElement(TouchableOpacity, null, React.createElement(Text, {\n    style: {\n      color: theme.text\n    }\n  }, \"Ts \", '&', \" Cs\")), React.createElement(TouchableOpacity, null, React.createElement(View, null, React.createElement(Icon, {\n    type: \"ionicon\",\n    name: \"alert-circle\",\n    color: Constance.Yellow\n  }), React.createElement(Text, {\n    style: {\n      color: theme.text\n    }\n  }, \"About\"))), React.createElement(TouchableOpacity, {\n    onPress: HandleAlert\n  }, React.createElement(View, null, React.createElement(Icon, {\n    type: \"ionicon\",\n    name: \"exit-outline\",\n    color: Constance.Red\n  }), React.createElement(Text, {\n    style: {\n      color: theme.text\n    }\n  }, \"Exit\")))), React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%',\n      position: 'absolute'\n    }\n  }, React.createElement(Modal, {\n    entry: \"bottom\",\n    backdropPressToClose: true,\n    isOpen: modalComfirmVisible,\n    style: [modal.modalBox],\n    onClosed: function onClosed() {\n      return setModalComfirmVisible(false);\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      password: ''\n    },\n    onSubmit: function onSubmit(values, action) {\n      var data = {\n        password: values.password.trim()\n      };\n      ReAuthenticate(data);\n    },\n    validationSchema: passwordSchema\n  }, function (props) {\n    return React.createElement(View, {\n      style: [modal.content, {\n        backgroundColor: theme.background\n      }]\n    }, React.createElement(View, {\n      style: [modal.modelContainerChild, {\n        marginVertical: 10\n      }]\n    }, React.createElement(Text, {\n      style: modal.textStyle\n    }, \"Enter your recent password\"), React.createElement(Icon, {\n      type: \"ionicon\",\n      name: \"close\",\n      onPress: function onPress() {\n        setModalComfirmVisible(false);\n      }\n    })), React.createElement(InputComponent, {\n      right: React.createElement(TextInput.Icon, {\n        name: visiblepassword ? \"eye\" : \"eye-off\",\n        onPress: function onPress() {\n          return visiblepassword ? setvisiblepassword(false) : setvisiblepassword(true);\n        }\n      }),\n      secured: visiblepassword,\n      left: React.createElement(TextInput.Icon, {\n        name: \"lock\"\n      }),\n      hint: \"Password\",\n      changeText: props.handleChange(\"password\"),\n      value: props.values.password\n    }), props.errors.password ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.password\n    })) : null, React.createElement(ButtonComponent, {\n      mode: \"contained\",\n      btnstyle: {\n        backgroundColor: Constance.Yellow,\n        marginTop: 20,\n        marginBottom: 30\n      },\n      lblstyle: {\n        color: Constance.White,\n        textTransform: 'capitalize'\n      },\n      text: \"Comfirm\",\n      press: props.handleSubmit\n    }));\n  })), React.createElement(Modal, {\n    entry: \"bottom\",\n    backdropPressToClose: true,\n    isOpen: modalPasswordVisible,\n    style: [modal.modalBox],\n    onClosed: function onClosed() {\n      return setModalPasswordVisible(false);\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      password: '',\n      confirmpassword: ''\n    },\n    onSubmit: function onSubmit(values, action) {\n      if (values.confirmpassword === values.password) {\n        var data = {\n          password: values.password.trim()\n        };\n        UpdatePassword(data);\n      } else {\n        setmessage(\"Password does not match\");\n        setinvalid(true);\n      }\n    },\n    validationSchema: resetPasswordSchema\n  }, function (props) {\n    return React.createElement(View, {\n      style: [modal.content, {\n        backgroundColor: theme.background\n      }]\n    }, React.createElement(Divider, {\n      style: {\n        borderRadius: 12,\n        height: Constance.largeDivider,\n        width: 100,\n        backgroundColor: theme.borderAlt,\n        alignSelf: 'center'\n      }\n    }), React.createElement(View, {\n      style: modal.modelContainerChild\n    }, React.createElement(Text, {\n      style: modal.textStyle\n    }, \"Enter your new password\"), React.createElement(Icon, {\n      type: \"ionicon\",\n      name: \"close\",\n      onPress: function onPress() {\n        setModalPasswordVisible(false);\n      }\n    })), React.createElement(InputComponent, {\n      right: React.createElement(TextInput.Icon, {\n        name: visiblepassword ? \"eye\" : \"eye-off\",\n        onPress: function onPress() {\n          return visiblepassword ? setvisiblepassword(false) : setvisiblepassword(true);\n        }\n      }),\n      secured: visiblepassword,\n      left: React.createElement(TextInput.Icon, {\n        name: \"lock\"\n      }),\n      hint: \"Password\",\n      changeText: props.handleChange(\"password\"),\n      value: props.values.password\n    }), React.createElement(InputComponent, {\n      right: React.createElement(TextInput.Icon, {\n        name: visibleComfirmPassword ? \"eye\" : \"eye-off\",\n        onPress: function onPress() {\n          return visibleComfirmPassword ? setvisibleComfirmPassword(false) : setvisibleComfirmPassword(true);\n        }\n      }),\n      secured: visibleComfirmPassword,\n      left: React.createElement(TextInput.Icon, {\n        name: \"lock\"\n      }),\n      hint: \"confirm password\",\n      changeText: props.handleChange(\"confirmpassword\"),\n      value: props.values.confirmpassword\n    }), React.createElement(ButtonComponent, {\n      mode: \"contained\",\n      btnstyle: {\n        backgroundColor: Constance.Yellow,\n        marginTop: 20,\n        marginBottom: 30\n      },\n      lblstyle: {\n        color: Constance.White,\n        textTransform: 'capitalize'\n      },\n      text: \"Proceed\",\n      press: props.handleSubmit\n    }));\n  })), React.createElement(Modal, {\n    entry: \"bottom\",\n    backdropPressToClose: true,\n    isOpen: modalUsernameVisible,\n    style: [modal.modalBox],\n    onClosed: function onClosed() {\n      return setModalUsernameVisible(false);\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      email: ''\n    },\n    onSubmit: function onSubmit(values, action) {\n      var data = {\n        email: values.email.trim()\n      };\n      UpdateEmail(data);\n    },\n    validationSchema: emailSchema\n  }, function (props) {\n    return React.createElement(View, {\n      style: [modal.content, {\n        backgroundColor: theme.background\n      }]\n    }, React.createElement(Divider, {\n      style: {\n        borderRadius: 12,\n        height: Constance.largeDivider,\n        width: 100,\n        backgroundColor: theme.borderAlt,\n        alignSelf: 'center'\n      }\n    }), React.createElement(View, {\n      style: modal.modelContainerChild\n    }, React.createElement(Text, {\n      style: modal.textStyle\n    }, \"Enter your new username\"), React.createElement(Icon, {\n      type: \"ionicon\",\n      name: \"close\",\n      onPress: function onPress() {\n        setModalUsernameVisible(false);\n      }\n    })), React.createElement(InputComponent, {\n      left: React.createElement(TextInput.Icon, {\n        name: \"email\"\n      }),\n      hint: \"E-mail\",\n      changeText: props.handleChange(\"email\"),\n      value: props.values.email\n    }), React.createElement(ButtonComponent, {\n      mode: \"contained\",\n      btnstyle: {\n        backgroundColor: Constance.Yellow,\n        marginTop: 20,\n        marginBottom: 30\n      },\n      lblstyle: {\n        color: Constance.White,\n        textTransform: 'capitalize'\n      },\n      text: \"Proceed\",\n      press: props.handleSubmit\n    }));\n  })), React.createElement(Modal, {\n    entry: \"bottom\",\n    backdropPressToClose: true,\n    isOpen: modalUpdateVisible,\n    style: modal.modalBox,\n    onClosed: function onClosed() {\n      return setModalUpdateVisible(false);\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      names: names,\n      contact: contact,\n      username: username\n    },\n    onSubmit: function onSubmit(values, action) {\n      var data = {\n        names: values.names,\n        username: values.username,\n        contact: values.contact\n      };\n      UpdateProfile(data);\n    },\n    validationSchema: profileSchema\n  }, function (props) {\n    return React.createElement(View, {\n      style: [modal.content, {\n        backgroundColor: theme.background\n      }]\n    }, React.createElement(Divider, {\n      style: {\n        borderRadius: 12,\n        height: Constance.largeDivider,\n        width: 100,\n        backgroundColor: theme.borderAlt,\n        alignSelf: 'center'\n      }\n    }), React.createElement(View, {\n      style: modal.modelContainerChild\n    }, React.createElement(Text, {\n      style: modal.textStyle\n    }, \"Update your profile.\"), React.createElement(Icon, {\n      type: \"ionicon\",\n      name: \"close\",\n      onPress: function onPress() {\n        setModalUpdateVisible(false);\n      }\n    })), React.createElement(InputComponent, {\n      left: React.createElement(TextInput.Icon, {\n        name: \"account\"\n      }),\n      hint: \"Names\",\n      changeText: props.handleChange(\"names\"),\n      value: props.values.names\n    }), React.createElement(InputComponent, {\n      left: React.createElement(TextInput.Icon, {\n        name: \"account-box\"\n      }),\n      hint: \"Username\",\n      changeText: props.handleChange(\"username\"),\n      value: props.values.username\n    }), React.createElement(InputComponent, {\n      left: React.createElement(TextInput.Icon, {\n        name: \"phone\"\n      }),\n      hint: \"Contact\",\n      changeText: props.handleChange(\"contact\"),\n      value: props.values.contact\n    }), React.createElement(ButtonComponent, {\n      mode: \"contained\",\n      btnstyle: {\n        backgroundColor: Constance.Yellow,\n        marginTop: 20,\n        marginBottom: 30\n      },\n      lblstyle: {\n        color: Constance.White,\n        textTransform: 'capitalize'\n      },\n      text: \"Proceed\",\n      press: props.handleSubmit\n    }));\n  }))), React.createElement(View, {\n    style: [style.image, {\n      shadowColor: theme.text,\n      top: 25,\n      right: 20,\n      position: 'absolute'\n    }]\n  }, React.createElement(TouchableOpacity, null, React.createElement(Image, {\n    style: [{\n      height: 70,\n      width: 70\n    }],\n    source: require(\"../../assets/images/user.png\")\n  }), React.createElement(View, {\n    style: {\n      position: 'absolute',\n      right: 5,\n      bottom: 0,\n      backgroundColor: theme.background,\n      height: 25,\n      width: 25,\n      justifyContent: 'center',\n      alignItems: 'center',\n      borderRadius: 12\n    }\n  }, React.createElement(Icon, {\n    onPress: function onPress() {\n      setopenCamera(true);\n    },\n    type: \"ionicon\",\n    name: \"camera\",\n    style: {\n      bottom: 2.5,\n      right: 0.5,\n      height: 16,\n      width: 16\n    },\n    color: theme.text,\n    size: 18\n  })))), openCamera ? React.createElement(View, {\n    style: {\n      position: 'absolute',\n      height: '100%',\n      width: '100%'\n    }\n  }, React.createElement(Cam, {\n    onClose: function onClose() {\n      setopenCamera(false);\n    }\n  })) : null, React.createElement(Snackbar, {\n    visible: invalid,\n    onDismiss: function onDismiss() {\n      return setinvalid(false);\n    }\n  }, message), load ? React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%',\n      position: 'absolute',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Progress, null)) : null);\n};\n\nexport default Account;","map":{"version":3,"sources":["D:/Development/Mobile Development/React native/Hotel/SunStar/SunStar/userapp/source/screens/account.tsx"],"names":["React","useContext","useEffect","useState","Divider","Icon","Image","Text","ActionBar","style","Constance","ThemeContext","Modal","ButtonComponent","InputComponent","modal","axios","yup","Snackbar","TextInput","SecureStore","Formik","TextComponent","Animatable","Progress","Cam","passwordSchema","object","password","string","required","min","matches","profileSchema","names","username","contact","emailSchema","email","resetPasswordSchema","confirmpassword","Account","navigation","modalComfirmVisible","setModalComfirmVisible","modalPasswordVisible","setModalPasswordVisible","modalUsernameVisible","setModalUsernameVisible","modalUpdateVisible","setModalUpdateVisible","visiblepassword","setvisiblepassword","visibleComfirmPassword","setvisibleComfirmPassword","action","setaction","newPassword","setnewPassword","newUsername","setnewUsername","oldPassword","setoldPassword","setusername","setcontact","setnames","setemail","invalid","setinvalid","load","setload","message","setmessage","openCamera","setopenCamera","theme","dark","handleConfirmPassword","console","log","signOut","deleteItemAsync","navigate","HandleAlert","Alert","alert","text","onPress","GetUserData","getItemAsync","token","key","get","concat","then","results","data","details","catch","err","ReAuthenticate","values","post","res","status","UpdatePassword","patch","UpdateEmail","UpdateProfile","backgroundColor","background","height","width","goBack","lblProfile","color","Platform","OS","borderAlt","lblcenterlined","fontWeight","fontSize","semi_large","marginTop","small","smallDivider","marginHorizontal","paddingVertical","borderRadius","flexContainer","textAlign","position","right","marginLeft","alignSelf","justifyContent","alignItems","bottom","flexDirection","Yellow","Red","modalBox","trim","props","content","modelContainerChild","marginVertical","textStyle","handleChange","errors","marginBottom","White","textTransform","handleSubmit","largeDivider","image","shadowColor","top","require"],"mappings":"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","sourcesContent":["import React, { Component, useContext, useEffect, useState } from 'react'\r\nimport { Alert, Platform, StatusBar, TouchableHighlight, TouchableOpacity, View } from 'react-native';\r\nimport { Divider, Icon, Image, Text } from 'react-native-elements';\r\nimport ActionBar from '../components/actionbar';\r\nimport style from '../styles/screens/profile';\r\nimport Constance from '../theme/const';\r\nimport { ThemeContext } from '../theme/themeProvider';\r\nimport Modal from \"react-native-modalbox\";\r\nimport ButtonComponent from '../components/button';\r\nimport InputComponent from '../components/input';\r\nimport modal from '../styles/components/modal';\r\nimport axios from 'axios';\r\nimport * as yup from 'yup';\r\nimport { Snackbar, TextInput } from 'react-native-paper';\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport { Formik } from 'formik';\r\nimport TextComponent from '../components/text';\r\nimport * as Animatable from 'react-native-animatable';\r\nimport Progress from '../components/indicator';\r\nimport { requestCameraPermissionsAsync } from \"expo-camera\";\r\nimport * as requestPermissionsAsync from \"expo-image-picker\";\r\nimport Cam from '../components/camera';\r\n\r\n\r\nconst passwordSchema = yup.object({\r\n    password: yup.string().required(\"Required\").min(8).matches(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/, \"Invalid password\"),\r\n})\r\n\r\nconst profileSchema = yup.object({\r\n    names: yup.string().required(\"Required\").min(3).matches(/^(?![\\s.]+$)[a-zA-Z\\s.]*$/, \"Invalid name\"),\r\n    username: yup.string().required(\"Required\").min(3).matches(/^[a-zA-Z0-9]+$/, \"Invalid username\"),\r\n    contact: yup.string().required(\"Required\").min(10).matches(/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/, \"Invalid contact\"),\r\n})\r\n\r\nconst emailSchema = yup.object({\r\n    email: yup.string().required(\"Required\").matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, \"Invalid email\"),\r\n})\r\n\r\nconst resetPasswordSchema = yup.object({\r\n    password: yup.string().required(\"Required\").min(8).matches(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/, \"Invalid password\"),\r\n    confirmpassword: yup.string().required(\"Required\").min(8).matches(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/, \"Invalid password\")\r\n})\r\n\r\nconst Account = ({ navigation }) => {\r\n    const [modalComfirmVisible, setModalComfirmVisible] = useState(false);\r\n    const [modalPasswordVisible, setModalPasswordVisible] = useState(false);\r\n    const [modalUsernameVisible, setModalUsernameVisible] = useState(false);\r\n    const [modalUpdateVisible, setModalUpdateVisible] = useState(false);\r\n    const [visiblepassword, setvisiblepassword] = useState(true);\r\n    const [visibleComfirmPassword, setvisibleComfirmPassword] = useState(true);\r\n    const [action, setaction] = useState('');\r\n    const [newPassword, setnewPassword] = useState('');\r\n    const [newUsername, setnewUsername] = useState('');\r\n    const [oldPassword, setoldPassword] = useState('');\r\n\r\n    const [username, setusername] = useState('');\r\n    const [contact, setcontact] = useState('');\r\n    const [names, setnames] = useState('');\r\n    const [email, setemail] = useState('');\r\n    const [invalid, setinvalid] = useState(false);\r\n    const [load, setload] = useState(false);\r\n    const [message, setmessage] = useState('');\r\n\r\n    const [openCamera, setopenCamera] = useState(false);\r\n    const { theme, dark } = useContext(ThemeContext)\r\n\r\n    const handleConfirmPassword = () => {\r\n        if (oldPassword) {\r\n            if (action === \"password\") {\r\n                setModalPasswordVisible(true);\r\n                setModalComfirmVisible(false)\r\n            }\r\n            else { setModalUsernameVisible(true); setModalComfirmVisible(false) }\r\n        }\r\n        else {\r\n            console.log('====================================');\r\n            console.log(\"nonsonce!!!!!!!!:)\");\r\n            console.log('====================================');\r\n        }\r\n    }\r\n\r\n    const signOut = async () => {\r\n        await SecureStore.deleteItemAsync('token');\r\n        await SecureStore.deleteItemAsync('key');\r\n        navigation.navigate('loginscreen');\r\n    }\r\n\r\n    const HandleAlert=()=>{\r\n        Alert.alert('Exiting app', 'You are prompting to exit the application, would you like to proceed?', [\r\n            {\r\n              text: 'No thanks',\r\n              onPress: () => console.log('Cancel Pressed'),\r\n              style: 'cancel',\r\n            },\r\n            { text: 'Yes, please', onPress: () => signOut() },\r\n          ]);\r\n    }\r\n\r\n    const GetUserData = async () => {\r\n        let token = await SecureStore.getItemAsync('token') || 'null';\r\n        let key = await SecureStore.getItemAsync('key') || 'null';\r\n\r\n        // setkey(key);\r\n\r\n        axios.get('https://sunstarapi.herokuapp.com/user/'.concat(key)).then((results) => {\r\n\r\n            let data = results.data;\r\n\r\n            setnames(data.names);\r\n            setemail(data.email);\r\n            setusername(data.username);\r\n            setcontact(data.contact)\r\n            console.log(data.details);\r\n        }).catch((err) => {\r\n\r\n            console.log(err + '.');\r\n\r\n        });\r\n\r\n    }\r\n\r\n    const ReAuthenticate = async (values: any) => {\r\n\r\n        setload(true);\r\n        let key = await SecureStore.getItemAsync('key') || 'null';\r\n\r\n        axios.post('https://sunstarapi.herokuapp.com/login/'.concat(key), values).then((res) => {\r\n\r\n            const results = res.data;\r\n\r\n            if (results.status == 'Success') {\r\n                setload(false);\r\n                if (action === \"password\") {\r\n                    setModalPasswordVisible(true);\r\n                    setModalComfirmVisible(false);\r\n                    setinvalid(true);\r\n                    setmessage(results.message)\r\n                }\r\n                else {\r\n                    setModalUsernameVisible(true);\r\n                    setModalComfirmVisible(false);\r\n                    setinvalid(true);\r\n                    setmessage(results.message)\r\n                }\r\n\r\n\r\n            } else {\r\n                setmessage(results.message);\r\n                setinvalid(true);\r\n                setload(false);\r\n            }\r\n\r\n        }).catch((err) => {\r\n\r\n            console.log(err + '.');\r\n\r\n        });\r\n\r\n    }\r\n\r\n    const UpdatePassword = async (values: any) => {\r\n\r\n        setload(true);\r\n        let key = await SecureStore.getItemAsync('key') || 'null';\r\n\r\n        axios.patch('https://sunstarapi.herokuapp.com/user/'.concat(key), values).then((res) => {\r\n\r\n            const results = res.data;\r\n\r\n            if (results.status == 'Success') {\r\n\r\n                setModalPasswordVisible(false);\r\n                setinvalid(true);\r\n                setmessage(results.message);\r\n                setload(false);\r\n\r\n            } else {\r\n                setmessage(results.message);\r\n                setinvalid(true);\r\n                setload(false);\r\n            }\r\n\r\n        }).catch((err) => {\r\n\r\n            setinvalid(true);\r\n            setmessage(err);\r\n            setload(false);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    const UpdateEmail = async (values: any) => {\r\n\r\n        setload(true);\r\n        let key = await SecureStore.getItemAsync('key') || 'null';\r\n\r\n        axios.patch('https://sunstarapi.herokuapp.com/user/'.concat(key), values).then((res) => {\r\n\r\n            const results = res.data;\r\n\r\n            if (results.status == 'Success') {\r\n\r\n                setModalPasswordVisible(false);\r\n                setinvalid(true);\r\n                setmessage(results.message);\r\n                setload(false);\r\n\r\n            } else {\r\n                setmessage(results.message);\r\n                setinvalid(true);\r\n                setload(false);\r\n            }\r\n\r\n        }).catch((err) => {\r\n\r\n            setinvalid(true);\r\n            setmessage(err);\r\n            setload(false);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    const UpdateProfile = async (values: any) => {\r\n\r\n        setload(true);\r\n        let key = await SecureStore.getItemAsync('key') || 'null';\r\n\r\n        axios.patch('https://sunstarapi.herokuapp.com/user/'.concat(key), values).then((res) => {\r\n\r\n            const results = res.data;\r\n\r\n            if (results.status == 'Success') {\r\n\r\n                setModalPasswordVisible(false);\r\n                setinvalid(true);\r\n                setmessage(results.message);\r\n                setload(false);\r\n\r\n            } else {\r\n                setmessage(results.message);\r\n                setinvalid(true);\r\n                setload(false);\r\n            }\r\n\r\n        }).catch((err) => {\r\n\r\n            setinvalid(true);\r\n            setmessage(err);\r\n            setload(false);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    \r\n    \r\n\r\n    useEffect(() => {\r\n        GetUserData();\r\n    }, [])\r\n\r\n    return (\r\n        <View style={[{ backgroundColor: theme.background, height: '100%', width: '100%' }]}>\r\n            <StatusBar barStyle={dark ? 'light-content' : 'dark-content'} backgroundColor={theme.background} />\r\n\r\n\r\n            <ActionBar text='Profile' onBackPress={() => navigation.goBack()} textStyle={[style.lblProfile, { color: theme.text }]} iconBack={Platform.OS === 'ios' ? 'chevron-back' : 'arrow-back'} bottomleftradius={35} backgroundColor={theme.borderAlt} />\r\n\r\n            <Text style={[style.lblcenterlined, { fontWeight: 'bold', fontSize: Constance.semi_large, color: theme.text, marginTop: 0 }]}> {names}</Text>\r\n            <Text style={[style.lblcenterlined, { fontWeight: '100', fontSize: Constance.small, color: theme.text }]}>{email}</Text>\r\n\r\n\r\n            <Divider style={{ height: Constance.smallDivider, backgroundColor: theme.borderAlt, marginTop: 5 }} />\r\n\r\n            <View style={{ width: '85%', marginHorizontal: 30, backgroundColor: theme.borderAlt, paddingVertical: 20, borderRadius: 12, marginTop: 20 }}>\r\n                <View style={[style.flexContainer, { marginTop: 5 }]}>\r\n                    <Text style={[style.lblcenterlined, { fontWeight: '100', fontSize: Constance.small, color: theme.text, width: '40%', textAlign: 'left' }]}> username </Text>\r\n                    <Text style={[style.lblcenterlined, { fontWeight: 'bold', fontSize: Constance.small, color: theme.text }]}> {username} </Text>\r\n                </View>\r\n\r\n                <View style={[style.flexContainer, { marginTop: 5 }]}>\r\n                    <Text style={[style.lblcenterlined, { fontWeight: '100', fontSize: Constance.small, color: theme.text, width: '40%', textAlign: 'left' }]}> Contact </Text>\r\n                    <Text style={[style.lblcenterlined, { fontWeight: 'bold', fontSize: Constance.small, color: theme.text }]}> {contact} </Text>\r\n                </View>\r\n\r\n                <View style={[style.flexContainer, { marginTop: 5 }]}>\r\n                    <Text style={[style.lblcenterlined, { fontWeight: '100', fontSize: Constance.small, color: theme.text, width: '40%', textAlign: 'left' }]}> Id </Text>\r\n                    <Text style={[style.lblcenterlined, { fontWeight: 'bold', fontSize: Constance.small, color: theme.text }]}> Account </Text>\r\n                </View>\r\n\r\n                <View style={[style.flexContainer, { marginTop: 5 }]}>\r\n                    <Text style={[style.lblcenterlined, { fontWeight: '100', fontSize: Constance.small, color: theme.text, width: '40%', textAlign: 'left' }]}> Reservation ID </Text>\r\n                    <Text style={[style.lblcenterlined, { fontWeight: 'bold', fontSize: Constance.small, color: theme.text }]}> Account </Text>\r\n                </View>\r\n\r\n                <View style={[{ position: 'absolute', right: 10, marginTop: 10 }]}>\r\n                    <Icon type='material-community' name=\"pencil\" color={theme.text} onPress={() => setModalUpdateVisible(true)} />\r\n                </View>\r\n\r\n            </View>\r\n\r\n            <Text style={[style.lblProfile, { marginLeft: 20, fontWeight: 'bold', fontSize: Constance.small, color: theme.text, marginTop: 15 }]}> Account </Text>\r\n\r\n            <TouchableOpacity onPress={() => { setModalComfirmVisible(true); setaction('password') }} style={{ alignSelf: 'center', width: '85%', borderRadius: 7, marginTop: 8 }}>\r\n                <View>\r\n                    <View style={[style.flexContainer, { justifyContent: 'space-between', height: 50, alignItems: 'center', marginTop: 5 }]}>\r\n                        <View style={[style.flexContainer,]}>\r\n                            <Icon type='ionicon' name='lock-closed' color={theme.text} />\r\n                            <Text style={[style.lblcenterlined, { fontWeight: '100', fontSize: Constance.small, color: theme.text }]}> Change password </Text>\r\n                        </View>\r\n                        <Icon type='ionicon' name='chevron-forward' color={theme.text} />\r\n                    </View>\r\n                    <Divider style={{ height: Constance.smallDivider, backgroundColor: theme.borderAlt, }} />\r\n                </View>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity onPress={() => { setModalComfirmVisible(true); setaction('username') }} style={{ alignSelf: 'center', width: '85%', borderRadius: 7, marginTop: 8 }}>\r\n                <View>\r\n                    <View style={[style.flexContainer, { justifyContent: 'space-between', height: 50, alignItems: 'center', marginTop: 5 }]}>\r\n                        <View style={[style.flexContainer,]}>\r\n                            <Icon type='ionicon' name='person-circle' color={theme.text} />\r\n                            <Text style={[style.lblcenterlined, { fontWeight: '100', fontSize: Constance.small, color: theme.text }]}> Change username </Text>\r\n                        </View>\r\n                        <Icon type='ionicon' name='chevron-forward' color={theme.text} />\r\n                    </View>\r\n                    <Divider style={{ height: Constance.smallDivider, backgroundColor: theme.borderAlt, }} />\r\n                </View>\r\n            </TouchableOpacity>\r\n\r\n            <View style={{ backgroundColor: theme.borderAlt, paddingVertical: 5, alignSelf: 'center', width: '85%', borderRadius: 12, marginTop: 8, position: 'absolute', bottom: 15, flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center' }}>\r\n\r\n                <TouchableOpacity >\r\n                    <Text style={{ color: theme.text }}>Ts {'&'} Cs</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity >\r\n                    <View>\r\n                        <Icon type='ionicon' name=\"alert-circle\" color={Constance.Yellow} />\r\n                        <Text style={{ color: theme.text }}>About</Text>\r\n                    </View>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity onPress={HandleAlert}>\r\n                    <View >\r\n                        <Icon type='ionicon' name=\"exit-outline\" color={Constance.Red} />\r\n                        <Text style={{ color: theme.text }}>Exit</Text>\r\n                    </View>\r\n                </TouchableOpacity>\r\n\r\n\r\n            </View>\r\n\r\n\r\n            <View style={{ height: '100%', width: '100%', position: 'absolute' }}>\r\n                {/* bottom sheet models */}\r\n                {/* comfirm password model */}\r\n                <Modal\r\n                    entry=\"bottom\"\r\n                    backdropPressToClose={true}\r\n                    isOpen={modalComfirmVisible}\r\n                    style={[modal.modalBox]}\r\n                    onClosed={() => setModalComfirmVisible(false)}\r\n                >\r\n                    <Formik\r\n                        initialValues={{ password: '' }}\r\n                        onSubmit={(values, action) => {\r\n                            let data = {\r\n                                password: values.password.trim()\r\n                            };\r\n                            ReAuthenticate(data);\r\n\r\n\r\n                        }}\r\n                        validationSchema={passwordSchema}\r\n                    >\r\n                        {(props) => (\r\n                            <View style={[modal.content, { backgroundColor: theme.background }]}>\r\n                                <View style={[modal.modelContainerChild, { marginVertical: 10 }]}>\r\n                                    <Text style={modal.textStyle}>Enter your recent password</Text>\r\n                                    <Icon type=\"ionicon\" name=\"close\" onPress={() => { setModalComfirmVisible(false) }} />\r\n                                </View>\r\n\r\n\r\n                                <InputComponent right={<TextInput.Icon name={visiblepassword ? \"eye\" : \"eye-off\"} onPress={() => visiblepassword ? setvisiblepassword(false) : setvisiblepassword(true)} />} secured={visiblepassword} left={<TextInput.Icon name=\"lock\" />} hint='Password'\r\n                                    changeText={props.handleChange(\"password\")}\r\n                                    value={props.values.password} />\r\n                                {props.errors.password ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red }} text={props.errors.password} /></Animatable.View> : null}\r\n\r\n                                <ButtonComponent mode='contained' btnstyle={{ backgroundColor: Constance.Yellow, marginTop: 20, marginBottom: 30 }} lblstyle={{ color: Constance.White, textTransform: 'capitalize' }} text='Comfirm' press={props.handleSubmit} />\r\n\r\n\r\n                            </View>\r\n                        )}\r\n                    </Formik>\r\n                </Modal>\r\n\r\n                {/* new password model  */}\r\n                <Modal\r\n                    entry=\"bottom\"\r\n                    backdropPressToClose={true}\r\n                    isOpen={modalPasswordVisible}\r\n                    style={[modal.modalBox]}\r\n                    onClosed={() => setModalPasswordVisible(false)}\r\n                >\r\n                    <Formik\r\n                        initialValues={{ password: '', confirmpassword: '' }}\r\n                        onSubmit={(values, action) => {\r\n\r\n                            if (values.confirmpassword === values.password) {\r\n                                let data = {\r\n                                    password: values.password.trim()\r\n                                };\r\n                                UpdatePassword(data);\r\n                            }\r\n                            else {\r\n                                setmessage(\"Password does not match\");\r\n                                setinvalid(true);\r\n                            }\r\n\r\n                        }}\r\n                        validationSchema={resetPasswordSchema}\r\n                    >\r\n                        {(props) => (\r\n                            <View style={[modal.content, { backgroundColor: theme.background }]}>\r\n                                <Divider style={{ borderRadius: 12, height: Constance.largeDivider, width: 100, backgroundColor: theme.borderAlt, alignSelf: 'center' }} />\r\n\r\n                                <View style={modal.modelContainerChild}>\r\n                                    <Text style={modal.textStyle}>Enter your new password</Text>\r\n                                    <Icon type=\"ionicon\" name=\"close\" onPress={() => { setModalPasswordVisible(false) }} />\r\n                                </View>\r\n\r\n                                <InputComponent right={<TextInput.Icon name={visiblepassword ? \"eye\" : \"eye-off\"} onPress={() => visiblepassword ? setvisiblepassword(false) : setvisiblepassword(true)} />} secured={visiblepassword} left={<TextInput.Icon name=\"lock\" />} hint='Password' changeText={props.handleChange(\"password\")}\r\n                                    value={props.values.password} />\r\n                                <InputComponent right={<TextInput.Icon name={visibleComfirmPassword ? \"eye\" : \"eye-off\"} onPress={() => visibleComfirmPassword ? setvisibleComfirmPassword(false) : setvisibleComfirmPassword(true)} />} secured={visibleComfirmPassword} left={<TextInput.Icon name=\"lock\" />} hint='confirm password' changeText={props.handleChange(\"confirmpassword\")}\r\n                                    value={props.values.confirmpassword} />\r\n\r\n                                <ButtonComponent mode='contained' btnstyle={{ backgroundColor: Constance.Yellow, marginTop: 20, marginBottom: 30 }} lblstyle={{ color: Constance.White, textTransform: 'capitalize' }} text='Proceed' press={props.handleSubmit} />\r\n\r\n                            </View>\r\n                        )}\r\n                    </Formik>\r\n                </Modal>\r\n\r\n                {/* new username model */}\r\n                <Modal\r\n                    entry=\"bottom\"\r\n                    backdropPressToClose={true}\r\n                    isOpen={modalUsernameVisible}\r\n                    style={[modal.modalBox]}\r\n                    onClosed={() => setModalUsernameVisible(false)}\r\n                >\r\n                    <Formik\r\n                        initialValues={{ email: '' }}\r\n                        onSubmit={(values, action) => {\r\n\r\n                            let data = {\r\n                                email: values.email.trim()\r\n                            };\r\n                            UpdateEmail(data);\r\n\r\n                        }}\r\n                        validationSchema={emailSchema}\r\n                    >\r\n                        {(props) => (\r\n                            <View style={[modal.content, { backgroundColor: theme.background }]}>\r\n                                <Divider style={{ borderRadius: 12, height: Constance.largeDivider, width: 100, backgroundColor: theme.borderAlt, alignSelf: 'center' }} />\r\n                                <View style={modal.modelContainerChild}>\r\n                                    <Text style={modal.textStyle}>Enter your new username</Text>\r\n                                    <Icon type=\"ionicon\" name=\"close\" onPress={() => { setModalUsernameVisible(false) }} />\r\n                                </View>\r\n\r\n\r\n                                <InputComponent left={<TextInput.Icon name=\"email\" />} hint='E-mail' changeText={props.handleChange(\"email\")}\r\n                                    value={props.values.email} />\r\n\r\n                                <ButtonComponent mode='contained' btnstyle={{ backgroundColor: Constance.Yellow, marginTop: 20, marginBottom: 30 }} lblstyle={{ color: Constance.White, textTransform: 'capitalize' }} text='Proceed' press={props.handleSubmit} />\r\n\r\n                            </View>\r\n                        )}\r\n                    </Formik>\r\n                </Modal>\r\n\r\n                {/* update model */}\r\n                <Modal\r\n                    entry=\"bottom\"\r\n                    backdropPressToClose={true}\r\n                    isOpen={modalUpdateVisible}\r\n                    style={modal.modalBox}\r\n                    onClosed={() => setModalUpdateVisible(false)}\r\n                >\r\n                    <Formik\r\n                        initialValues={{ names: names, contact: contact, username: username }}\r\n                        onSubmit={(values, action) => {\r\n\r\n                            let data = {\r\n                                names: values.names,\r\n                                username: values.username,\r\n                                contact: values.contact\r\n                            };\r\n                            UpdateProfile(data);\r\n\r\n                        }}\r\n                        validationSchema={profileSchema}\r\n                    >\r\n                        {(props) => (\r\n                            <View style={[modal.content, { backgroundColor: theme.background }]}>\r\n                                <Divider style={{ borderRadius: 12, height: Constance.largeDivider, width: 100, backgroundColor: theme.borderAlt, alignSelf: 'center' }} />\r\n                                <View style={modal.modelContainerChild}>\r\n                                    <Text style={modal.textStyle}>Update your profile.</Text>\r\n                                    <Icon type=\"ionicon\" name=\"close\" onPress={() => { setModalUpdateVisible(false) }} />\r\n                                </View>\r\n\r\n\r\n                                <InputComponent left={<TextInput.Icon name=\"account\" />} hint='Names' changeText={props.handleChange(\"names\")}\r\n                                    value={props.values.names} />\r\n                                <InputComponent left={<TextInput.Icon name=\"account-box\" />} hint='Username' changeText={props.handleChange(\"username\")}\r\n                                    value={props.values.username} />\r\n                                <InputComponent left={<TextInput.Icon name=\"phone\" />} hint='Contact' changeText={props.handleChange(\"contact\")}\r\n                                    value={props.values.contact} />\r\n\r\n                                <ButtonComponent mode='contained' btnstyle={{ backgroundColor: Constance.Yellow, marginTop: 20, marginBottom: 30 }} lblstyle={{ color: Constance.White, textTransform: 'capitalize' }} text='Proceed' press={props.handleSubmit} />\r\n\r\n\r\n                            </View>\r\n                        )}\r\n                    </Formik>\r\n                </Modal>\r\n\r\n            </View>\r\n\r\n\r\n\r\n            <View style={[style.image, {\r\n                shadowColor: theme.text,\r\n                top: 25, right: 20,\r\n                position: 'absolute',\r\n            }]} >\r\n                <TouchableOpacity >\r\n                    <Image style={[{ height: 70, width: 70 }]} source={require('../../assets/images/user.png')} />\r\n                    <View style={{ position: 'absolute', right: 5, bottom: 0, backgroundColor: theme.background, height: 25, width: 25, justifyContent: 'center', alignItems: 'center', borderRadius: 12 }}>\r\n                        <Icon onPress={() => { setopenCamera(true) }} type='ionicon' name='camera' style={{ bottom: 2.5, right: 0.5, height: 16, width: 16 }} color={theme.text} size={18} />\r\n                    </View>\r\n                </TouchableOpacity>\r\n            </View> \r\n            \r\n            {openCamera ? <View style={{ position: 'absolute', height: '100%', width: '100%' }}>\r\n                <Cam onClose={() => { setopenCamera(false) }} />\r\n            </View> : null}\r\n\r\n            \r\n\r\n            {/* Snackbar */}\r\n            <Snackbar\r\n                visible={invalid}\r\n                onDismiss={() => setinvalid(false)}\r\n            >\r\n                {message}\r\n            </Snackbar>\r\n\r\n            {load ? <View style={{ height: '100%', width: '100%', position: 'absolute', justifyContent: 'center', alignItems: 'center' }}>\r\n                <Progress />\r\n            </View> : null}\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Account\r\n"]},"metadata":{},"sourceType":"module"}