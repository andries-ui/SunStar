{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as Camera from 'expo-camera';\nimport Constance from \"../theme/const\";\nimport { Icon } from 'react-native-elements';\nimport { ThemeContext } from \"../theme/themeProvider\";\nimport * as ImagePicker from 'expo-image-picker';\n\nvar Cam = function Cam(props) {\n  var onClose = props.onClose;\n  var cameraRef = useRef();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      camera = _useState2[0],\n      setcamera = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hasPermission = _useState4[0],\n      setHasPermission = _useState4[1];\n\n  var _useState5 = useState(Camera.Constants.Type.back),\n      _useState6 = _slicedToArray(_useState5, 2),\n      type = _useState6[0],\n      setType = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      err = _useState8[0],\n      seterr = _useState8[1];\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme,\n      dark = _useContext.dark;\n\n  var _useState9 = useState(Constance.White),\n      _useState10 = _slicedToArray(_useState9, 2),\n      captureColor = _useState10[0],\n      setcaptureColor = _useState10[1];\n\n  var _useState11 = useState(Constance.White),\n      _useState12 = _slicedToArray(_useState11, 2),\n      rotatoColor = _useState12[0],\n      setrotatoColor = _useState12[1];\n\n  var _useState13 = useState(Constance.White),\n      _useState14 = _slicedToArray(_useState13, 2),\n      gallery = _useState14[0],\n      setgallery = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      flesh = _useState16[0],\n      setflesh = _useState16[1];\n\n  var _useState17 = useState(0),\n      _useState18 = _slicedToArray(_useState17, 2),\n      autofocus = _useState18[0],\n      setautofocus = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      isCameraReady = _useState20[0],\n      setIsCameraReady = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      isPreview = _useState22[0],\n      setIsPreview = _useState22[1];\n\n  var _useState23 = useState(''),\n      _useState24 = _slicedToArray(_useState23, 2),\n      imageUrl = _useState24[0],\n      setimageUrl = _useState24[1];\n\n  var starWarching = function starWarching() {\n    var _await$Camera$Camera$, status;\n\n    return _regeneratorRuntime.async(function starWarching$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Camera.requestCameraPermissionsAsync());\n\n          case 3:\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n          case 5:\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(Camera.Camera.requestCameraPermissionsAsync());\n\n          case 7:\n            _await$Camera$Camera$ = _context.sent;\n            status = _await$Camera$Camera$.status;\n            setHasPermission(status);\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            seterr(_context.t0);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  var fleshLight = function fleshLight() {\n    return _regeneratorRuntime.async(function fleshLight$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            flesh ? setflesh(false) : setflesh(true);\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onCameraReady = function onCameraReady() {\n    setIsCameraReady(true);\n  };\n\n  var cancelPreview = function cancelPreview() {\n    return _regeneratorRuntime.async(function cancelPreview$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(camera.resumePreview());\n\n          case 2:\n            setIsPreview(false);\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              base64: true,\n              allowsEditing: true,\n              aspect: [4, 3]\n            }));\n\n          case 2:\n            result = _context4.sent;\n            setIsPreview(true);\n            setimageUrl(result.uri);\n            convertBase64(result);\n            console.log('====================================');\n            setIsPreview(true);\n\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onSnap = function onSnap() {\n    var options, data, source;\n    return _regeneratorRuntime.async(function onSnap$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (!camera) {\n              _context5.next = 12;\n              break;\n            }\n\n            options = {\n              quality: 0.7,\n              base64: true\n            };\n            _context5.next = 4;\n            return _regeneratorRuntime.awrap(camera.takePictureAsync(options));\n\n          case 4:\n            data = _context5.sent;\n            source = data.base64;\n\n            if (!source) {\n              _context5.next = 11;\n              break;\n            }\n\n            _context5.next = 9;\n            return _regeneratorRuntime.awrap(camera.pausePreview());\n\n          case 9:\n            setimageUrl(source.url);\n            console.log(source, '====================================');\n\n          case 11:\n            setIsPreview(true);\n\n          case 12:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var convertBase64 = function convertBase64(file) {\n    return new Promise(function (resolve, reject) {\n      var fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n\n      fileReader.onload = function () {\n        resolve(fileReader.result);\n        console.log(fileReader.result);\n      };\n\n      fileReader.onerror = function (error) {\n        reject(error);\n        console.log('====================================');\n        console.log(error);\n        console.log('====================================');\n      };\n    });\n  };\n\n  useEffect(function () {\n    starWarching();\n  }, []);\n\n  if (hasPermission === '') {\n    return React.createElement(Text, null, \"No access to camera\");\n  }\n\n  if (hasPermission === 'not granted') {\n    return React.createElement(Text, null, \"No access to camera\");\n  }\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Camera.Camera, {\n    ref: function ref(_ref) {\n      return setcamera(_ref);\n    },\n    onCameraReady: onCameraReady,\n    style: styles.camera,\n    type: type,\n    flashMode: flesh ? 2 : 0,\n    autoFocus: autofocus,\n    focusDepth: 1,\n    onMagicTap: function onMagicTap() {\n      setautofocus(3);\n    },\n    pictureSize: \"1200*1200\"\n  }, isPreview ? React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 7,\n      position: 'absolute',\n      right: 5,\n      top: 5\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: imageUrl\n    },\n    style: {\n      backgroundColor: Constance.Green,\n      height: '100%',\n      width: '100%'\n    }\n  }), React.createElement(View, {\n    style: {\n      bottom: 30,\n      position: 'absolute',\n      width: '100%',\n      flexDirection: 'row',\n      justifyContent: 'space-evenly'\n    }\n  }, React.createElement(Icon, {\n    type: \"material-community\",\n    name: \"cloud-upload-outline\",\n    onPress: cancelPreview,\n    color: Constance.White,\n    size: 36,\n    style: {\n      position: 'absolute'\n    },\n    onPressIn: function onPressIn() {\n      setgallery(Constance.Red);\n    },\n    onPressOut: function onPressOut() {\n      setgallery(Constance.White);\n    }\n  }), React.createElement(Icon, {\n    type: \"material-community\",\n    name: \"close\",\n    onPress: cancelPreview,\n    color: Constance.White,\n    size: 36,\n    style: {\n      position: 'absolute'\n    },\n    onPressIn: function onPressIn() {\n      setgallery(Constance.Red);\n    },\n    onPressOut: function onPressOut() {\n      setgallery(Constance.White);\n    }\n  }))) : React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%'\n    }\n  }, React.createElement(View, {\n    style: {\n      height: 40,\n      width: 40,\n      borderRadius: 7,\n      position: 'absolute',\n      right: 5,\n      top: 15,\n      flexDirection: 'row'\n    }\n  }, React.createElement(Icon, {\n    type: \"material-community\",\n    name: \"close\",\n    onPress: onClose,\n    color: gallery,\n    size: 30,\n    style: {\n      position: 'absolute',\n      bottom: 10\n    },\n    onPressIn: function onPressIn() {\n      setgallery(Constance.Red);\n    },\n    onPressOut: function onPressOut() {\n      setgallery(Constance.White);\n    }\n  })), React.createElement(View, {\n    style: {\n      height: 40,\n      width: 40,\n      borderRadius: 7,\n      position: 'absolute',\n      bottom: 90,\n      alignSelf: 'center'\n    }\n  }, React.createElement(Icon, {\n    type: \"material-community\",\n    name: flesh ? 'flashlight-off' : 'flashlight',\n    onPress: fleshLight,\n    color: gallery,\n    size: 30,\n    style: {\n      position: 'absolute',\n      bottom: 10\n    },\n    onPressIn: function onPressIn() {\n      setgallery(Constance.Red);\n    },\n    onPressOut: function onPressOut() {\n      setgallery(Constance.White);\n    }\n  })), React.createElement(View, {\n    style: styles.buttonContainer\n  }, React.createElement(Icon, {\n    type: \"material-community\",\n    name: \"folder-multiple-image\",\n    onPress: pickImage,\n    color: gallery,\n    size: 30,\n    style: {\n      position: 'absolute',\n      bottom: 10\n    },\n    onPressIn: function onPressIn() {\n      setgallery(Constance.Red);\n    },\n    onPressOut: function onPressOut() {\n      setgallery(Constance.White);\n    }\n  }), React.createElement(Icon, {\n    type: \"feather\",\n    name: \"aperture\",\n    onPress: onSnap,\n    color: captureColor,\n    size: 50,\n    style: {\n      position: 'absolute',\n      bottom: 10\n    },\n    onPressIn: function onPressIn() {\n      setcaptureColor(Constance.Red);\n    },\n    onPressOut: function onPressOut() {\n      setcaptureColor(Constance.White);\n    }\n  }), React.createElement(Icon, {\n    disabled: !isCameraReady,\n    type: \"material-community\",\n    name: \"rotate-3d-variant\",\n    onPress: function onPress() {\n      setType(type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back);\n    },\n    color: rotatoColor,\n    size: 30,\n    style: {\n      position: 'absolute',\n      bottom: 10\n    },\n    onPressIn: function onPressIn() {\n      setrotatoColor(Constance.Red);\n    },\n    onPressOut: function onPressOut() {\n      setrotatoColor(Constance.White);\n    }\n  })))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    height: '100%',\n    width: '100%',\n    backgroundColor: Constance.GoldDark\n  },\n  camera: {\n    height: '100%',\n    width: '100%'\n  },\n  buttonContainer: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    marginTop: 15,\n    bottom: 20,\n    position: 'absolute'\n  },\n  content: {\n    position: 'absolute',\n    bottom: 20,\n    width: '100%',\n    alignItems: 'center'\n  },\n  button: {},\n  text: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    right: 10,\n    color: Constance.White\n  }\n});\nexport default Cam;","map":{"version":3,"sources":["D:/Development/Mobile Development/React native/Hotel/SunStar/SunStar/userapp/source/components/camera.tsx"],"names":["React","useState","useEffect","useContext","useRef","Camera","Constance","Icon","ThemeContext","ImagePicker","Cam","props","onClose","cameraRef","camera","setcamera","hasPermission","setHasPermission","Constants","Type","back","type","setType","err","seterr","theme","dark","White","captureColor","setcaptureColor","rotatoColor","setrotatoColor","gallery","setgallery","flesh","setflesh","autofocus","setautofocus","isCameraReady","setIsCameraReady","isPreview","setIsPreview","imageUrl","setimageUrl","starWarching","requestCameraPermissionsAsync","requestMediaLibraryPermissionsAsync","status","fleshLight","onCameraReady","cancelPreview","resumePreview","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","base64","allowsEditing","aspect","result","uri","convertBase64","console","log","onSnap","options","quality","takePictureAsync","data","source","pausePreview","url","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","error","styles","container","ref","height","width","borderRadius","position","right","top","backgroundColor","Green","bottom","flexDirection","justifyContent","Red","alignSelf","buttonContainer","front","StyleSheet","create","GoldDark","alignItems","marginTop","content","button","text","fontSize","fontWeight","color"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;;;;;AAEA,OAAO,KAAKC,MAAZ,MAAwB,aAAxB;AACA,OAAOC,SAAP;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,YAAT;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;;AAQA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAkB;AAE5B,MAAQC,OAAR,GAAoBD,KAApB,CAAQC,OAAR;AAEA,MAAIC,SAAS,GAAGT,MAAM,EAAtB;;AACA,kBAA4BH,QAAQ,EAApC;AAAA;AAAA,MAAOa,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAA0Cd,QAAQ,CAAC,EAAD,CAAlD;AAAA;AAAA,MAAOe,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,mBAAwBhB,QAAQ,CAACI,MAAM,CAACa,SAAP,CAAiBC,IAAjB,CAAsBC,IAAvB,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAsBrB,QAAQ,CAAC,EAAD,CAA9B;AAAA;AAAA,MAAOsB,GAAP;AAAA,MAAYC,MAAZ;;AACA,oBAAwBrB,UAAU,CAACK,YAAD,CAAlC;AAAA,MAAQiB,KAAR,eAAQA,KAAR;AAAA,MAAeC,IAAf,eAAeA,IAAf;;AACA,mBAAwCzB,QAAQ,CAACK,SAAS,CAACqB,KAAX,CAAhD;AAAA;AAAA,MAAOC,YAAP;AAAA,MAAqBC,eAArB;;AACA,oBAAsC5B,QAAQ,CAACK,SAAS,CAACqB,KAAX,CAA9C;AAAA;AAAA,MAAOG,WAAP;AAAA,MAAoBC,cAApB;;AACA,oBAA8B9B,QAAQ,CAACK,SAAS,CAACqB,KAAX,CAAtC;AAAA;AAAA,MAAOK,OAAP;AAAA,MAAgBC,UAAhB;;AACA,oBAA0BhC,QAAQ,CAAC,KAAD,CAAlC;AAAA;AAAA,MAAOiC,KAAP;AAAA,MAAcC,QAAd;;AACA,oBAAkClC,QAAQ,CAAC,CAAD,CAA1C;AAAA;AAAA,MAAOmC,SAAP;AAAA,MAAkBC,YAAlB;;AACA,oBAA0CpC,QAAQ,CAAC,KAAD,CAAlD;AAAA;AAAA,MAAOqC,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,oBAAkCtC,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOuC,SAAP;AAAA,MAAkBC,YAAlB;;AACA,oBAAgCxC,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOyC,QAAP;AAAA,MAAiBC,WAAjB;;AAKA,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAGXvC,MAAM,CAACwC,6BAAP,EAHW;;AAAA;AAAA;AAAA,6CAIXpC,WAAW,CAACqC,mCAAZ,EAJW;;AAAA;AAAA;AAAA,6CAMQzC,MAAM,CAACA,MAAP,CAAcwC,6BAAd,EANR;;AAAA;AAAA;AAMTE,YAAAA,MANS,yBAMTA,MANS;AAQjB9B,YAAAA,gBAAgB,CAAC8B,MAAD,CAAhB;AARiB;AAAA;;AAAA;AAAA;AAAA;AAUjBvB,YAAAA,MAAM,aAAN;;AAViB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAcA,MAAMwB,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAEjBd,YAAAA,KAAK,GAAGC,QAAQ,CAAC,KAAD,CAAX,GAAqBA,QAAQ,CAAC,IAAD,CAAlC;;AAFiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAKA,MAAMc,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BV,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAFD;;AAKA,MAAMW,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACdpC,MAAM,CAACqC,aAAP,EADc;;AAAA;AAEpBV,YAAAA,YAAY,CAAC,KAAD,CAAZ;;AAFoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAcA,MAAMW,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACG3C,WAAW,CAAC4C,uBAAZ,CAAoC;AACrDC,cAAAA,UAAU,EAAE7C,WAAW,CAAC8C,gBAAZ,CAA6BC,MADY;AAErDC,cAAAA,MAAM,EAAE,IAF6C;AAGrDC,cAAAA,aAAa,EAAE,IAHsC;AAIrDC,cAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ;AAJ6C,aAApC,CADH;;AAAA;AACZC,YAAAA,MADY;AAOhBnB,YAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,YAAAA,WAAW,CAACiB,MAAM,CAACC,GAAR,CAAX;AACAC,YAAAA,aAAa,CAACF,MAAD,CAAb;AACAG,YAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACAvB,YAAAA,YAAY,CAAC,IAAD,CAAZ;;AAXgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAcA,MAAMwB,MAAM,GAAG,SAATA,MAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACTnD,MADS;AAAA;AAAA;AAAA;;AAELoD,YAAAA,OAFK,GAEK;AAAEC,cAAAA,OAAO,EAAE,GAAX;AAAgBV,cAAAA,MAAM,EAAE;AAAxB,aAFL;AAAA;AAAA,6CAGQ3C,MAAM,CAACsD,gBAAP,CAAwBF,OAAxB,CAHR;;AAAA;AAGLG,YAAAA,IAHK;AAILC,YAAAA,MAJK,GAIID,IAAI,CAACZ,MAJT;;AAAA,iBAMPa,MANO;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAOHxD,MAAM,CAACyD,YAAP,EAPG;;AAAA;AAST5B,YAAAA,WAAW,CAAC2B,MAAM,CAACE,GAAR,CAAX;AACAT,YAAAA,OAAO,CAACC,GAAR,CAAYM,MAAZ,EAAmB,sCAAnB;;AAVS;AAaX7B,YAAAA,YAAY,CAAC,IAAD,CAAZ;;AAbW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAkBA,MAAMqB,aAAa,GAAG,SAAhBA,aAAgB,CAACW,IAAD,EAAc;AAClC,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,UAAMC,UAAU,GAAG,IAAIC,UAAJ,EAAnB;AACAD,MAAAA,UAAU,CAACE,aAAX,CAAyBN,IAAzB;;AAEAI,MAAAA,UAAU,CAACG,MAAX,GAAoB,YAAM;AACtBL,QAAAA,OAAO,CAACE,UAAU,CAACjB,MAAZ,CAAP;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYa,UAAU,CAACjB,MAAvB;AAEH,OAJD;;AAKAiB,MAAAA,UAAU,CAACI,OAAX,GAAqB,UAACC,KAAD,EAAW;AAC5BN,QAAAA,MAAM,CAACM,KAAD,CAAN;AACAnB,QAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYkB,KAAZ;AACAnB,QAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACH,OALD;AAMH,KAfM,CAAP;AAgBH,GAjBC;;AAmBA9D,EAAAA,SAAS,CAAC,YAAM;AACd0C,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAI5B,aAAa,KAAK,EAAtB,EAA0B;AACxB,WAAO,oBAAC,IAAD,8BAAP;AACD;;AACD,MAAIA,aAAa,KAAK,aAAtB,EAAqC;AACnC,WAAO,oBAAC,IAAD,8BAAP;AACD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEmE,MAAM,CAACC;AAApB,KACE,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,GAAG,EAAE,aAACC,IAAD;AAAA,aAAStE,SAAS,CAACsE,IAAD,CAAlB;AAAA,KAApB;AAA6C,IAAA,aAAa,EAAEpC,aAA5D;AAA2E,IAAA,KAAK,EAAEkC,MAAM,CAACrE,MAAzF;AAAiG,IAAA,IAAI,EAAEO,IAAvG;AAA6G,IAAA,SAAS,EAAEa,KAAK,GAAG,CAAH,GAAO,CAApI;AAAuI,IAAA,SAAS,EAAEE,SAAlJ;AAA6J,IAAA,UAAU,EAAE,CAAzK;AAA4K,IAAA,UAAU,EAAE,sBAAM;AAAEC,MAAAA,YAAY,CAAC,CAAD,CAAZ;AAAiB,KAAjN;AAAmN,IAAA,WAAW,EAAC;AAA/N,KAIGG,SAAS,GACR,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE8C,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,KAAK,EAAE,MAAzB;AAAiCC,MAAAA,YAAY,EAAE,CAA/C;AAAkDC,MAAAA,QAAQ,EAAE,UAA5D;AAAwEC,MAAAA,KAAK,EAAE,CAA/E;AAAkFC,MAAAA,GAAG,EAAE;AAAvF;AAAb,KACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAAE9B,MAAAA,GAAG,EAAEnB;AAAP,KAAf;AAAkC,IAAA,KAAK,EAAE;AAAEkD,MAAAA,eAAe,EAAEtF,SAAS,CAACuF,KAA7B;AAAoCP,MAAAA,MAAM,EAAE,MAA5C;AAAoDC,MAAAA,KAAK,EAAE;AAA3D;AAAzC,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEO,MAAAA,MAAM,EAAE,EAAV;AAAcL,MAAAA,QAAQ,EAAC,UAAvB;AAAkCF,MAAAA,KAAK,EAAC,MAAxC;AAAgDQ,MAAAA,aAAa,EAAE,KAA/D;AAAsEC,MAAAA,cAAc,EAAE;AAAtF;AAAb,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,oBAAX;AAAgC,IAAA,IAAI,EAAC,sBAArC;AAA4D,IAAA,OAAO,EAAE9C,aAArE;AAAoF,IAAA,KAAK,EAAE5C,SAAS,CAACqB,KAArG;AAA4G,IAAA,IAAI,EAAE,EAAlH;AAAsH,IAAA,KAAK,EAAE;AAAE8D,MAAAA,QAAQ,EAAE;AAAZ,KAA7H;AAAuJ,IAAA,SAAS,EAAE,qBAAM;AAAExD,MAAAA,UAAU,CAAC3B,SAAS,CAAC2F,GAAX,CAAV;AAA2B,KAArM;AAAuM,IAAA,UAAU,EAAE,sBAAM;AAAEhE,MAAAA,UAAU,CAAC3B,SAAS,CAACqB,KAAX,CAAV;AAA6B;AAAxP,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,oBAAX;AAAgC,IAAA,IAAI,EAAC,OAArC;AAA6C,IAAA,OAAO,EAAEuB,aAAtD;AAAqE,IAAA,KAAK,EAAE5C,SAAS,CAACqB,KAAtF;AAA6F,IAAA,IAAI,EAAE,EAAnG;AAAuG,IAAA,KAAK,EAAE;AAAE8D,MAAAA,QAAQ,EAAE;AAAZ,KAA9G;AAAwI,IAAA,SAAS,EAAE,qBAAM;AAAExD,MAAAA,UAAU,CAAC3B,SAAS,CAAC2F,GAAX,CAAV;AAA2B,KAAtL;AAAwL,IAAA,UAAU,EAAE,sBAAM;AAAEhE,MAAAA,UAAU,CAAC3B,SAAS,CAACqB,KAAX,CAAV;AAA6B;AAAzO,IAFF,CAFF,CADQ,GAQR,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE2D,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,KAAK,EAAE;AAAzB;AAAb,KAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,KAAK,EAAE,EAArB;AAAyBC,MAAAA,YAAY,EAAE,CAAvC;AAA0CC,MAAAA,QAAQ,EAAE,UAApD;AAAgEC,MAAAA,KAAK,EAAE,CAAvE;AAA0EC,MAAAA,GAAG,EAAE,EAA/E;AAAmFI,MAAAA,aAAa,EAAE;AAAlG;AAAb,KAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,oBAAX;AAAgC,IAAA,IAAI,EAAC,OAArC;AAA6C,IAAA,OAAO,EAAEnF,OAAtD;AAA+D,IAAA,KAAK,EAAEoB,OAAtE;AAA+E,IAAA,IAAI,EAAE,EAArF;AAAyF,IAAA,KAAK,EAAE;AAAEyD,MAAAA,QAAQ,EAAE,UAAZ;AAAwBK,MAAAA,MAAM,EAAE;AAAhC,KAAhG;AAAsI,IAAA,SAAS,EAAE,qBAAM;AAAE7D,MAAAA,UAAU,CAAC3B,SAAS,CAAC2F,GAAX,CAAV;AAA2B,KAApL;AAAsL,IAAA,UAAU,EAAE,sBAAM;AAAEhE,MAAAA,UAAU,CAAC3B,SAAS,CAACqB,KAAX,CAAV;AAA6B;AAAvO,IAFF,CAFF,EAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE2D,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,KAAK,EAAE,EAArB;AAAyBC,MAAAA,YAAY,EAAE,CAAvC;AAA0CC,MAAAA,QAAQ,EAAE,UAApD;AAAgEK,MAAAA,MAAM,EAAE,EAAxE;AAA4EI,MAAAA,SAAS,EAAE;AAAvF;AAAb,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,oBAAX;AAAgC,IAAA,IAAI,EAAEhE,KAAK,GAAG,gBAAH,GAAsB,YAAjE;AAA+E,IAAA,OAAO,EAAEc,UAAxF;AAAoG,IAAA,KAAK,EAAEhB,OAA3G;AAAoH,IAAA,IAAI,EAAE,EAA1H;AAA8H,IAAA,KAAK,EAAE;AAAEyD,MAAAA,QAAQ,EAAE,UAAZ;AAAwBK,MAAAA,MAAM,EAAE;AAAhC,KAArI;AAA2K,IAAA,SAAS,EAAE,qBAAM;AAAE7D,MAAAA,UAAU,CAAC3B,SAAS,CAAC2F,GAAX,CAAV;AAA2B,KAAzN;AAA2N,IAAA,UAAU,EAAE,sBAAM;AAAEhE,MAAAA,UAAU,CAAC3B,SAAS,CAACqB,KAAX,CAAV;AAA6B;AAA5Q,IADF,CAPF,EAYE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEwD,MAAM,CAACgB;AAApB,KAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,oBAAX;AAAgC,IAAA,IAAI,EAAC,uBAArC;AAA6D,IAAA,OAAO,EAAE/C,SAAtE;AAAiF,IAAA,KAAK,EAAEpB,OAAxF;AAAiG,IAAA,IAAI,EAAE,EAAvG;AAA2G,IAAA,KAAK,EAAE;AAAEyD,MAAAA,QAAQ,EAAE,UAAZ;AAAwBK,MAAAA,MAAM,EAAE;AAAhC,KAAlH;AAAwJ,IAAA,SAAS,EAAE,qBAAM;AAAE7D,MAAAA,UAAU,CAAC3B,SAAS,CAAC2F,GAAX,CAAV;AAA2B,KAAtM;AAAwM,IAAA,UAAU,EAAE,sBAAM;AAAEhE,MAAAA,UAAU,CAAC3B,SAAS,CAACqB,KAAX,CAAV;AAA6B;AAAzP,IAFF,EAKE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,IAAI,EAAC,UAA1B;AAAqC,IAAA,OAAO,EAAEsC,MAA9C;AAAsD,IAAA,KAAK,EAAErC,YAA7D;AAA2E,IAAA,IAAI,EAAE,EAAjF;AAAqF,IAAA,KAAK,EAAE;AAAE6D,MAAAA,QAAQ,EAAE,UAAZ;AAAwBK,MAAAA,MAAM,EAAE;AAAhC,KAA5F;AAAkI,IAAA,SAAS,EAAE,qBAAM;AAAEjE,MAAAA,eAAe,CAACvB,SAAS,CAAC2F,GAAX,CAAf;AAAgC,KAArL;AAAuL,IAAA,UAAU,EAAE,sBAAM;AAAEpE,MAAAA,eAAe,CAACvB,SAAS,CAACqB,KAAX,CAAf;AAAkC;AAA7O,IALF,EAOE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAE,CAACW,aAAjB;AAAgC,IAAA,IAAI,EAAC,oBAArC;AAA0D,IAAA,IAAI,EAAC,mBAA/D;AAAmF,IAAA,OAAO,EAAE,mBAAM;AAChGhB,MAAAA,OAAO,CACLD,IAAI,KAAKhB,MAAM,CAACa,SAAP,CAAiBC,IAAjB,CAAsBC,IAA/B,GACIf,MAAM,CAACa,SAAP,CAAiBC,IAAjB,CAAsBiF,KAD1B,GAEI/F,MAAM,CAACa,SAAP,CAAiBC,IAAjB,CAAsBC,IAHrB,CAAP;AAKD,KAND;AAMG,IAAA,KAAK,EAAEU,WANV;AAMuB,IAAA,IAAI,EAAE,EAN7B;AAMiC,IAAA,KAAK,EAAE;AAAE2D,MAAAA,QAAQ,EAAE,UAAZ;AAAwBK,MAAAA,MAAM,EAAE;AAAhC,KANxC;AAM8E,IAAA,SAAS,EAAE,qBAAM;AAAE/D,MAAAA,cAAc,CAACzB,SAAS,CAAC2F,GAAX,CAAd;AAA+B,KANhI;AAMkI,IAAA,UAAU,EAAE,sBAAM;AAAElE,MAAAA,cAAc,CAACzB,SAAS,CAACqB,KAAX,CAAd;AAAiC;AANvL,IAPF,CAZF,CAZJ,CADF,CADF;AAiDD,CA3KD;;AA6KA,IAAMwD,MAAM,GAAGkB,UAAU,CAACC,MAAX,CAAkB;AAC/BlB,EAAAA,SAAS,EAAE;AACTE,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,KAAK,EAAE,MAFE;AAGTK,IAAAA,eAAe,EAAEtF,SAAS,CAACiG;AAHlB,GADoB;AAM/BzF,EAAAA,MAAM,EAAE;AACNwE,IAAAA,MAAM,EAAE,MADF;AAENC,IAAAA,KAAK,EAAE;AAFD,GANuB;AAU/BY,EAAAA,eAAe,EAAE;AACfZ,IAAAA,KAAK,EAAE,MADQ;AAEfQ,IAAAA,aAAa,EAAE,KAFA;AAGfC,IAAAA,cAAc,EAAE,cAHD;AAIfQ,IAAAA,UAAU,EAAE,QAJG;AAKfC,IAAAA,SAAS,EAAE,EALI;AAMfX,IAAAA,MAAM,EAAE,EANO;AAOfL,IAAAA,QAAQ,EAAE;AAPK,GAVc;AAmB/BiB,EAAAA,OAAO,EAAE;AACPjB,IAAAA,QAAQ,EAAE,UADH;AAEPK,IAAAA,MAAM,EAAE,EAFD;AAGPP,IAAAA,KAAK,EAAE,MAHA;AAIPiB,IAAAA,UAAU,EAAE;AAJL,GAnBsB;AA0B/BG,EAAAA,MAAM,EAAE,EA1BuB;AA6B/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,UAAU,EAAE,MAFR;AAGJpB,IAAAA,KAAK,EAAE,EAHH;AAIJqB,IAAAA,KAAK,EAAEzG,SAAS,CAACqB;AAJb;AA7ByB,CAAlB,CAAf;AAqCA,eAAejB,GAAf","sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, Image } from 'react-native';\r\nimport * as Camera from 'expo-camera';\r\nimport Constance from '../theme/const';\r\nimport { Icon } from 'react-native-elements';\r\nimport { ThemeContext } from '../theme/themeProvider';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { Buffer } from \"buffer\";\r\n\r\n\r\ninterface props {\r\n  onClose: any\r\n}\r\n\r\nconst Cam = (props: props) => {\r\n\r\n  const { onClose } = props;\r\n\r\n  let cameraRef = useRef();\r\n  const [camera, setcamera] = useState<any>()\r\n  const [hasPermission, setHasPermission] = useState('');\r\n  const [type, setType] = useState(Camera.Constants.Type.back);\r\n  const [err, seterr] = useState('');\r\n  const { theme, dark } = useContext(ThemeContext);\r\n  const [captureColor, setcaptureColor] = useState(Constance.White);\r\n  const [rotatoColor, setrotatoColor] = useState(Constance.White);\r\n  const [gallery, setgallery] = useState(Constance.White);\r\n  const [flesh, setflesh] = useState(false);\r\n  const [autofocus, setautofocus] = useState(0);\r\n  const [isCameraReady, setIsCameraReady] = useState(false);\r\n  const [isPreview, setIsPreview] = useState(false);\r\n  const [imageUrl, setimageUrl] = useState('')\r\n\r\n\r\n\r\n\r\n  const starWarching = async () => {\r\n    try {\r\n\r\n      await Camera.requestCameraPermissionsAsync();\r\n      await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n\r\n      const { status } = await Camera.Camera.requestCameraPermissionsAsync();\r\n\r\n      setHasPermission(status)\r\n    } catch (err: any) {\r\n      seterr(err)\r\n    }\r\n  }\r\n\r\n  const fleshLight = async () => {\r\n\r\n    flesh ? setflesh(false) : setflesh(true);\r\n  }\r\n\r\n  const onCameraReady = () => {\r\n    setIsCameraReady(true);\r\n  };\r\n\r\n\r\n  const cancelPreview = async () => {\r\n    await camera.resumePreview();\r\n    setIsPreview(false);\r\n  };\r\n\r\n  // const takePicture = async () => {\r\n  //   if (camera) {\r\n  //     const data = await camera.takePictureAsync(null);\r\n  //     console.log(data.uri);\r\n  //     setImageUri(data.uri);\r\n  //   }\r\n  // };\r\n\r\n\r\n  const pickImage = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      base64: true,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n    });\r\n    setIsPreview(true);\r\n    setimageUrl(result.uri );\r\n    convertBase64(result);\r\n    console.log('====================================');\r\n    setIsPreview(true);\r\n  }\r\n\r\n  const onSnap = async () => {\r\n    if (camera) {\r\n      const options = { quality: 0.7, base64: true };\r\n      const data = await camera.takePictureAsync(options);\r\n      const source = data.base64;\r\n\r\n      if (source) {\r\n        await camera.pausePreview();\r\n        //convertBase64(camera);\r\n        setimageUrl(source.url);\r\n        console.log(source,'====================================');\r\n        \r\n      }\r\n      setIsPreview(true);\r\n    }\r\n\r\n  };\r\n\r\n  const convertBase64 = (file:any) => {\r\n    return new Promise((resolve, reject) => {\r\n        const fileReader = new FileReader();\r\n        fileReader.readAsDataURL(file);\r\n\r\n        fileReader.onload = () => {\r\n            resolve(fileReader.result);\r\n            console.log(fileReader.result);\r\n            \r\n        };\r\n        fileReader.onerror = (error) => {\r\n            reject(error);\r\n            console.log('====================================');\r\n            console.log(error);\r\n            console.log('====================================');\r\n        };\r\n    })\r\n}\r\n\r\n  useEffect(() => {\r\n    starWarching();\r\n  }, [])\r\n\r\n  if (hasPermission === '') {\r\n    return <Text>No access to camera</Text>;\r\n  }\r\n  if (hasPermission === 'not granted') {\r\n    return <Text>No access to camera</Text>;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Camera.Camera ref={(ref) => setcamera(ref)} onCameraReady={onCameraReady} style={styles.camera} type={type} flashMode={flesh ? 2 : 0} autoFocus={autofocus} focusDepth={1} onMagicTap={() => { setautofocus(3) }} pictureSize='1200*1200' >\r\n\r\n        {/* =================================Preview================================= */}\r\n\r\n        {isPreview ?\r\n          <View style={{ height: '100%', width: '100%', borderRadius: 7, position: 'absolute', right: 5, top: 5, }}>\r\n            <Image source={{ uri: imageUrl }} style={{ backgroundColor: Constance.Green, height: '100%', width: '100%' }} />\r\n            <View style={{ bottom: 30, position:'absolute',width:'100%', flexDirection: 'row', justifyContent: 'space-evenly' }}>\r\n              <Icon type='material-community' name='cloud-upload-outline' onPress={cancelPreview} color={Constance.White} size={36} style={{ position: 'absolute' }} onPressIn={() => { setgallery(Constance.Red) }} onPressOut={() => { setgallery(Constance.White) }} />\r\n              <Icon type='material-community' name='close' onPress={cancelPreview} color={Constance.White} size={36} style={{ position: 'absolute' }} onPressIn={() => { setgallery(Constance.Red) }} onPressOut={() => { setgallery(Constance.White) }} />\r\n            </View>\r\n          </View> :\r\n          <View style={{ height: '100%', width: '100%' }} >\r\n\r\n            <View style={{ height: 40, width: 40, borderRadius: 7, position: 'absolute', right: 5, top: 15, flexDirection: 'row' }}>\r\n\r\n              <Icon type='material-community' name='close' onPress={onClose} color={gallery} size={30} style={{ position: 'absolute', bottom: 10 }} onPressIn={() => { setgallery(Constance.Red) }} onPressOut={() => { setgallery(Constance.White) }} />\r\n            </View>\r\n\r\n            <View style={{ height: 40, width: 40, borderRadius: 7, position: 'absolute', bottom: 90, alignSelf: 'center' }}>\r\n              <Icon type='material-community' name={flesh ? 'flashlight-off' : 'flashlight'} onPress={fleshLight} color={gallery} size={30} style={{ position: 'absolute', bottom: 10 }} onPressIn={() => { setgallery(Constance.Red) }} onPressOut={() => { setgallery(Constance.White) }} />\r\n            </View>\r\n\r\n\r\n            <View style={styles.buttonContainer}>\r\n\r\n              <Icon type='material-community' name='folder-multiple-image' onPress={pickImage} color={gallery} size={30} style={{ position: 'absolute', bottom: 10 }} onPressIn={() => { setgallery(Constance.Red) }} onPressOut={() => { setgallery(Constance.White) }} />\r\n\r\n\r\n              <Icon type='feather' name='aperture' onPress={onSnap} color={captureColor} size={50} style={{ position: 'absolute', bottom: 10 }} onPressIn={() => { setcaptureColor(Constance.Red) }} onPressOut={() => { setcaptureColor(Constance.White) }} />\r\n\r\n              <Icon disabled={!isCameraReady} type='material-community' name='rotate-3d-variant' onPress={() => {\r\n                setType(\r\n                  type === Camera.Constants.Type.back\r\n                    ? Camera.Constants.Type.front\r\n                    : Camera.Constants.Type.back\r\n                );\r\n              }} color={rotatoColor} size={30} style={{ position: 'absolute', bottom: 10 }} onPressIn={() => { setrotatoColor(Constance.Red) }} onPressOut={() => { setrotatoColor(Constance.White) }} />\r\n\r\n            </View>\r\n          </View>\r\n        }\r\n        {/* =================================Preview================================= */}\r\n\r\n      </Camera.Camera>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    height: '100%',\r\n    width: '100%',\r\n    backgroundColor: Constance.GoldDark\r\n  },\r\n  camera: {\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  buttonContainer: {\r\n    width: '100%',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-evenly',\r\n    alignItems: 'center',\r\n    marginTop: 15,\r\n    bottom: 20,\r\n    position: 'absolute',\r\n  },\r\n  content: {\r\n    position: 'absolute',\r\n    bottom: 20,\r\n    width: '100%',\r\n    alignItems: 'center',\r\n\r\n  },\r\n  button: {\r\n\r\n  },\r\n  text: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    right: 10,\r\n    color: Constance.White\r\n  },\r\n});\r\n\r\nexport default Cam"]},"metadata":{},"sourceType":"module"}