{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useState } from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Icon } from 'react-native-elements';\nimport PagerView from 'react-native-pager-view';\nimport ButtonComponent from \"../components/button\";\nimport Bording from \"../components/onboarding\";\nimport TextComponent from \"../components/text\";\nimport style from \"../styles/screens/onboarding\";\nimport Constance from \"../theme/const\";\nimport { useFonts, NotoSans_400Regular, NotoSans_700Bold, NotoSans_400Regular_Italic } from '@expo-google-fonts/noto-sans';\nimport { ThemeContext } from \"../theme/themeProvider\";\nimport * as SecureStore from 'expo-secure-store';\n\nvar OnBoarding = function OnBoarding(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentPage = _useState2[0],\n      setCurrentPage = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      key = _useState4[0],\n      setKey = _useState4[1];\n\n  var _useFonts = useFonts({\n    NotoSans_400Regular_Italic: NotoSans_400Regular_Italic,\n    NotoSans_400Regular: NotoSans_400Regular,\n    NotoSans_700Bold: NotoSans_700Bold\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded) {\n    return React.createElement(View, null);\n  } else {\n    return React.createElement(View, null, React.createElement(StatusBar, {\n      barStyle: 'dark-content',\n      backgroundColor: Constance.White\n    }), React.createElement(View, {\n      style: style.containerTop\n    }, React.createElement(PagerView, {\n      initialPage: 0,\n      scrollEnabled: true,\n      style: {\n        flex: 1\n      },\n      showPageIndicator: true,\n      onPageSelected: function onPageSelected(e) {\n        setCurrentPage(e.nativeEvent.position);\n      }\n    }, React.createElement(View, {\n      key: \"1\",\n      style: {\n        justifyContent: \"center\"\n      }\n    }, React.createElement(Bording, {\n      json: require(\"../../assets/lottie/85406-data-loading.json\"),\n      caption: \"Browse availabe hotes in your area\",\n      style: {\n        fontFamily: 'NotoSans_400Regular',\n        fontWeight: \"900\"\n      }\n    })), React.createElement(View, {\n      key: \"2\",\n      style: {\n        justifyContent: \"center\"\n      }\n    }, React.createElement(Bording, {\n      json: require(\"../../assets/lottie/14521-hotel-booking.json\"),\n      caption: \"Book a room at your favourite hotel\",\n      style: {\n        fontFamily: 'NotoSans_400Regular',\n        fontWeight: \"900\"\n      }\n    })), React.createElement(View, {\n      key: \"3\",\n      style: {\n        justifyContent: \"center\"\n      }\n    }, React.createElement(Bording, {\n      json: require(\"../../assets/lottie/76686-driver-management.json\"),\n      caption: \"Manage your stay\",\n      style: {\n        fontFamily: 'NotoSans_400Regular',\n        fontWeight: \"900\"\n      }\n    }), currentPage >= 2 ? React.createElement(ButtonComponent, {\n      mode: \"contained\",\n      btnstyle: {\n        backgroundColor: Constance.Yellow,\n        marginVertical: 40,\n        marginHorizontal: 30\n      },\n      lblstyle: {\n        color: Constance.White,\n        textTransform: 'capitalize'\n      },\n      press: function _callee() {\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                navigation.navigate(\"loginscreen\");\n                _context.next = 3;\n                return _regeneratorRuntime.awrap(SecureStore.setItemAsync('launched', 'false'));\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      text: \"Get started\"\n    }) : null)), React.createElement(View, {\n      style: style.bottom\n    }, currentPage >= 2 ? null : React.createElement(TextComponent, {\n      style: {\n        color: Constance.Grey,\n        textAlign: 'center'\n      },\n      text: currentPage >= 1 ? \"Scroll again\" : 'Scroll right'\n    }), React.createElement(View, {\n      style: style.header\n    }, React.createElement(View, {\n      style: {\n        backgroundColor: currentPage >= 0 ? theme.text : Constance.Grey,\n        flexGrow: 1,\n        height: 4,\n        borderRadius: 4,\n        marginHorizontal: 2\n      }\n    }), React.createElement(View, {\n      style: {\n        backgroundColor: currentPage >= 1 ? theme.text : Constance.Grey,\n        flexGrow: 1,\n        height: 4,\n        borderRadius: 4,\n        marginHorizontal: 2\n      }\n    }), React.createElement(View, {\n      style: {\n        backgroundColor: currentPage >= 2 ? theme.text : Constance.Grey,\n        flexGrow: 1,\n        height: 4,\n        borderRadius: 4,\n        marginHorizontal: 2\n      }\n    }), React.createElement(View, {\n      style: {\n        width: 30,\n        borderRadius: 4\n      }\n    }, currentPage >= 2 ? null : React.createElement(Icon, {\n      type: \"ionicon\",\n      name: \"chevron-forward-outline\",\n      size: 34,\n      color: Constance.light_text,\n      onPress: function _callee2() {\n        return _regeneratorRuntime.async(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                navigation.navigate(\"loginscreen\");\n                _context2.next = 3;\n                return _regeneratorRuntime.awrap(SecureStore.setItemAsync('launched', 'false'));\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    }))))), currentPage >= 2 ? React.createElement(View, {\n      style: style.info\n    }, React.createElement(Icon, {\n      type: \"ionicon\",\n      name: \"information\",\n      size: 34,\n      color: Constance.Black,\n      onPress: function onPress() {\n        return navigation.navigate(\"loginscreen\");\n      }\n    })) : null);\n  }\n};\n\nexport default OnBoarding;","map":{"version":3,"sources":["D:/Development/Mobile Development/React native/Hotel/SunStar/SunStar/userapp/source/screens/onboardin.tsx"],"names":["React","useContext","useState","Icon","PagerView","ButtonComponent","Bording","TextComponent","style","Constance","useFonts","NotoSans_400Regular","NotoSans_700Bold","NotoSans_400Regular_Italic","ThemeContext","SecureStore","OnBoarding","navigation","theme","currentPage","setCurrentPage","key","setKey","fontsLoaded","White","containerTop","flex","e","nativeEvent","position","justifyContent","require","fontFamily","fontWeight","backgroundColor","Yellow","marginVertical","marginHorizontal","color","textTransform","navigate","setItemAsync","bottom","Grey","textAlign","header","text","flexGrow","height","borderRadius","width","light_text","info","Black"],"mappings":"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","sourcesContent":["import React, { Component, useContext, useEffect, useState } from 'react'\r\nimport { FlatList, SafeAreaView, StatusBar, Text, View } from 'react-native'\r\nimport { Icon, Image } from 'react-native-elements'\r\nimport PagerView, { PagerViewOnPageSelectedEvent } from 'react-native-pager-view'\r\nimport ButtonComponent from '../components/button'\r\nimport Bording from '../components/onboarding'\r\nimport TextComponent from '../components/text'\r\nimport style from '../styles/screens/onboarding'\r\nimport Constance from '../theme/const';\r\nimport { useFonts, NotoSans_400Regular, NotoSans_700Bold, NotoSans_400Regular_Italic } from '@expo-google-fonts/noto-sans';\r\nimport { ThemeContext } from '../theme/themeProvider';\r\nimport * as SecureStore from 'expo-secure-store';\r\n\r\n\r\n\r\nconst OnBoarding = ({ navigation }) => {\r\n\r\n  const {theme} = useContext(ThemeContext)\r\n\r\n  const [currentPage, setCurrentPage] = useState<number>(0);\r\n  const [key, setKey] = useState<number>(1);\r\n\r\n\r\n  let [fontsLoaded] = useFonts({ NotoSans_400Regular_Italic, NotoSans_400Regular, NotoSans_700Bold })\r\n  \r\n  if (!fontsLoaded) {\r\n    return (\r\n     <View/>\r\n    );\r\n  } else {\r\n  return (\r\n    <View >\r\n\r\n      <StatusBar barStyle={'dark-content'} backgroundColor={Constance.White}/>\r\n   \r\n\r\n      <View\r\n        style={style.containerTop}  >\r\n\r\n        <PagerView\r\n          initialPage={0}\r\n          scrollEnabled\r\n          style={{ flex: 1, }}\r\n          showPageIndicator={true}\r\n          onPageSelected={(e: PagerViewOnPageSelectedEvent) => {\r\n            setCurrentPage(e.nativeEvent.position);\r\n          }}\r\n\r\n        >\r\n          <View key={\"1\"} style={{ justifyContent: \"center\" }}>\r\n            <Bording\r\n              json={require('../../assets/lottie/85406-data-loading.json')}\r\n              caption={\r\n                \"Browse availabe hotes in your area\"\r\n              }\r\n              style={{ fontFamily: 'NotoSans_400Regular', fontWeight:\"900\"}}\r\n            />\r\n          </View>\r\n          <View key=\"2\" style={{ justifyContent: \"center\" }}>\r\n            <Bording\r\n              json={require('../../assets/lottie/14521-hotel-booking.json')}\r\n              caption={\r\n                \"Book a room at your favourite hotel\"\r\n              }\r\n              style={{ fontFamily: 'NotoSans_400Regular', fontWeight:\"900\"}}\r\n            />\r\n          </View>\r\n          <View key=\"3\" style={{ justifyContent: \"center\" }}>\r\n            <Bording\r\n              json={require('../../assets/lottie/76686-driver-management.json')}\r\n              caption={\r\n                \"Manage your stay\"\r\n              }\r\n              style={{ fontFamily: 'NotoSans_400Regular', fontWeight:\"900\"}}\r\n            />\r\n            {currentPage >= 2 ?\r\n              <ButtonComponent mode='contained' btnstyle={{ backgroundColor: Constance.Yellow, marginVertical: 40, marginHorizontal: 30 }}\r\n                lblstyle={{ color: Constance.White, textTransform: 'capitalize' }} press={async() =>{ navigation.navigate(\"loginscreen\"); await SecureStore.setItemAsync('launched', 'false');\r\n              }} text='Get started' />\r\n              : null\r\n            }\r\n          </View>\r\n        </PagerView>\r\n\r\n\r\n        <View\r\n          style={style.bottom}  >\r\n\r\n          {currentPage >= 2 ? null :\r\n            <TextComponent style={{ color: Constance.Grey, textAlign:'center'}} text={currentPage >= 1 ? \"Scroll again\" : 'Scroll right'} />\r\n\r\n          }\r\n          <View\r\n            style={style.header}  >\r\n            <View style={{\r\n              backgroundColor: currentPage >= 0 ? theme.text : Constance.Grey,\r\n              flexGrow: 1,\r\n              height: 4,\r\n              borderRadius: 4, marginHorizontal: 2\r\n            }}>\r\n\r\n            </View>\r\n            <View style={{\r\n              backgroundColor: currentPage >= 1 ? theme.text : Constance.Grey,\r\n              flexGrow: 1,\r\n              height: 4, borderRadius: 4, marginHorizontal: 2\r\n            }}>\r\n\r\n            </View>\r\n            <View style={{\r\n              backgroundColor: currentPage >= 2 ? theme.text : Constance.Grey,\r\n              flexGrow: 1, height: 4, borderRadius: 4, marginHorizontal: 2\r\n            }}>\r\n\r\n            </View>\r\n\r\n\r\n            <View style={{ width: 30, borderRadius: 4 }}>\r\n              {\r\n                currentPage >= 2 ? null : <Icon type='ionicon'\r\n                  name='chevron-forward-outline'\r\n                  size={34}\r\n                  color={Constance.light_text}\r\n                  onPress={async() =>{ navigation.navigate(\"loginscreen\"); await SecureStore.setItemAsync('launched', 'false');\r\n                }} />\r\n              }\r\n            </View>\r\n\r\n          </View>\r\n        </View>\r\n\r\n      </View>\r\n      {\r\n                currentPage >= 2 ? \r\n                 <View style={style.info}>\r\n              <Icon type='ionicon'\r\n                  name='information'\r\n                  size={34}\r\n                  color={Constance.Black}\r\n                  onPress={() => navigation.navigate(\"loginscreen\")} />\r\n            \r\n            </View>  :null}\r\n    </View>\r\n  )\r\n      }\r\n}\r\n\r\nexport default OnBoarding"]},"metadata":{},"sourceType":"module"}