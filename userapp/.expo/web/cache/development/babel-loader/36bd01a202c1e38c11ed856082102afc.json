{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Formik } from 'formik';\nimport React, { useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Snackbar, TextInput } from 'react-native-paper';\nimport ButtonComponent from \"../components/button\";\nimport InputComponent from \"../components/input\";\nimport TextComponent from \"../components/text\";\nimport style from \"../styles/screens/login\";\nimport Constance from \"../theme/const\";\nimport * as yup from 'yup';\nimport * as Animatable from 'react-native-animatable';\nimport Progress from \"../components/indicator\";\nimport Anim from \"../components/anim\";\nimport axios from 'axios';\nimport { useRoute } from '@react-navigation/native';\nimport * as SecureStore from 'expo-secure-store';\nvar loginSchema = yup.object({\n  pin: yup.string().required(\"Required\").min(3).matches(/[0-9]{5,6}/, \"Invalid pin\")\n});\n\nvar Verify = function Verify(_ref) {\n  var navigation = _ref.navigation;\n  var props = useRoute();\n  console.log(props.params);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      confirmVisible = _useState4[0],\n      setconfirmVisible = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      invalid = _useState6[0],\n      setinvalid = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      load = _useState8[0],\n      setload = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      message = _useState10[0],\n      setmessage = _useState10[1];\n\n  var handleSignIn = function handleSignIn(values) {\n    setinvalid(true);\n  };\n\n  var handleSuccessfulRegistration = function handleSuccessfulRegistration() {\n    var data = {\n      email: props.params.email,\n      password: props.params.password,\n      type: 'client'\n    };\n    setload(true);\n    var url = \"https://sunstarapi.herokuapp.com/login/\";\n    axios.post(url, data).then(function _callee(res) {\n      var results;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              results = res.data;\n\n              if (!(results.status == 'Success')) {\n                _context.next = 11;\n                break;\n              }\n\n              setload(false);\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(SecureStore.setItemAsync('token', results.token));\n\n            case 5:\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(SecureStore.setItemAsync('key', results.key));\n\n            case 7:\n              navigation.navigate('dashboardscreen', {\n                key: results.key\n              });\n              setload(false);\n              _context.next = 14;\n              break;\n\n            case 11:\n              setmessage(results.message);\n              setinvalid(true);\n              setload(false);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }).catch(function (err) {\n      setinvalid(true);\n      setmessage(err);\n      console.log(err);\n      setload(false);\n    });\n  };\n\n  var handleRegistration = function handleRegistration(values) {\n    console.log(values, undefined);\n    setload(true);\n    var url = \"https://sunstarapi.herokuapp.com/user/verify/\" + props.params.key;\n\n    try {\n      axios.post(url, values).then(function (res) {\n        if (res.data.status === \"Success\") {\n          if (props.params.task == \"registration\") {\n            handleSuccessfulRegistration();\n          } else {\n            navigation.navigate('resetscreen', {\n              key: props.params.key\n            });\n          }\n        } else {\n          setmessage(res.data.message + \".\");\n          console.log(res.data.details, \"++>>++>>\");\n          setinvalid(true);\n          setload(false);\n        }\n      }).catch(function (err) {\n        setmessage(err + \".==>>\");\n        console.log(err, \"===>>>>>\");\n        setinvalid(true);\n        setload(false);\n      });\n    } catch (err) {\n      console.log(err + \".\");\n      setload(false);\n    }\n  };\n\n  return React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%'\n    }\n  }, React.createElement(StatusBar, {\n    barStyle: 'dark-content',\n    backgroundColor: Constance.White\n  }), React.createElement(View, {\n    style: style.parent\n  }, React.createElement(View, {\n    style: [style.topcontainer, {\n      justifyContent: 'center',\n      alignItems: 'center'\n    }]\n  }, React.createElement(View, {\n    style: {\n      position: 'absolute',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 90\n    }\n  }, React.createElement(Anim, {\n    json: require(\"../../assets/lottie/15413-registro.json\"),\n    autoplay: true,\n    autosize: true,\n    loop: true,\n    speed: 1,\n    style: {\n      height: '100%',\n      width: '100%'\n    }\n  }))), React.createElement(View, {\n    style: style.bottomcontainer\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false\n  }, React.createElement(View, null, React.createElement(TextComponent, {\n    style: {\n      fontSize: Constance.medium,\n      marginVertical: 15\n    },\n    text: \"Register\"\n  }), React.createElement(Formik, {\n    initialValues: {\n      pin: ''\n    },\n    onSubmit: function onSubmit(values, action) {\n      var data = {\n        pin: values.pin\n      };\n      handleRegistration(data);\n    },\n    validationSchema: loginSchema\n  }, function (props) {\n    return React.createElement(View, null, React.createElement(InputComponent, {\n      hint: \"OTP\",\n      left: React.createElement(TextInput.Icon, {\n        name: \"account\"\n      }),\n      changeText: props.handleChange(\"pin\"),\n      value: props.values.pin,\n      keyboard: \"number-pad\",\n      style: {\n        borderColor: Constance.light_border,\n        borderWidth: 1,\n        borderRadius: 5\n      }\n    }), props.errors.pin || null ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.pin\n    })) : null, React.createElement(ButtonComponent, {\n      mode: \"contained\",\n      btnstyle: {\n        marginTop: 40,\n        backgroundColor: Constance.Yellow\n      },\n      lblstyle: {\n        color: Constance.White,\n        textTransform: 'capitalize'\n      },\n      text: \"Verify\",\n      press: props.handleSubmit\n    }));\n  })))), React.createElement(Snackbar, {\n    visible: invalid,\n    onDismiss: function onDismiss() {\n      return setinvalid(false);\n    }\n  }, message)), load ? React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%',\n      position: 'absolute',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Progress, null)) : null);\n};\n\nexport default Verify;","map":{"version":3,"sources":["D:/Development/Mobile Development/React native/Hotel/SunStar/SunStar/userapp/source/screens/verify.tsx"],"names":["Formik","React","useState","Snackbar","TextInput","ButtonComponent","InputComponent","TextComponent","style","Constance","yup","Animatable","Progress","Anim","axios","useRoute","SecureStore","loginSchema","object","pin","string","required","min","matches","Verify","navigation","props","console","log","params","visible","setVisible","confirmVisible","setconfirmVisible","invalid","setinvalid","load","setload","message","setmessage","handleSignIn","values","handleSuccessfulRegistration","data","email","password","type","url","post","then","res","results","status","setItemAsync","token","key","navigate","catch","err","handleRegistration","task","details","height","width","White","parent","topcontainer","justifyContent","alignItems","position","padding","require","bottomcontainer","fontSize","medium","marginVertical","action","handleChange","borderColor","light_border","borderWidth","borderRadius","errors","color","Red","marginTop","backgroundColor","Yellow","textTransform","handleSubmit"],"mappings":"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","sourcesContent":["import { Formik } from 'formik';\r\nimport React, { useContext, useState } from 'react'\r\nimport { Image, ScrollView, StatusBar, View } from 'react-native'\r\nimport { Snackbar, TextInput } from 'react-native-paper';\r\nimport ButtonComponent from '../components/button';\r\nimport InputComponent from '../components/input';\r\nimport TextComponent from '../components/text';\r\nimport style from '../styles/screens/login';\r\nimport Constance from '../theme/const';\r\nimport { ThemeContext } from '../theme/themeProvider';\r\nimport * as yup from 'yup';\r\nimport * as Animatable from 'react-native-animatable';\r\nimport Progress from '../components/indicator';\r\nimport Anim from '../components/anim';\r\nimport axios from 'axios';\r\nimport { useRoute } from '@react-navigation/native';\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport { BACKEND } from '@env';\r\n\r\n\r\nconst loginSchema = yup.object({\r\n  pin: yup.string().required(\"Required\").min(3).matches(/[0-9]{5,6}/, \"Invalid pin\")\r\n\r\n})\r\n\r\n\r\nconst Verify = ({ navigation }) => {\r\n\r\n  const props = useRoute();\r\n  console.log(props.params);\r\n\r\n  const [visible, setVisible] = useState(true);\r\n  const [confirmVisible, setconfirmVisible] = useState(true)\r\n  const [invalid, setinvalid] = useState(false);\r\n  const [load, setload] = useState(false);\r\n  const [message, setmessage] = useState('');\r\n\r\n\r\n  const handleSignIn = (values: any) => {\r\n    setinvalid(true)\r\n  }\r\n\r\n\r\n  const handleSuccessfulRegistration = () => {\r\n\r\n    const data = {\r\n      email: props.params.email,\r\n      password: props.params.password,\r\n      type: 'client'\r\n    }\r\n\r\n    setload(true);\r\n    const url = `https://sunstarapi.herokuapp.com/login/`\r\n    axios.post(url, data).then(async (res) => {\r\n      const results = res.data;\r\n      if (results.status == 'Success') {\r\n        setload(false);\r\n        await SecureStore.setItemAsync('token', results.token);\r\n        await SecureStore.setItemAsync('key', results.key);\r\n        navigation.navigate('dashboardscreen', { key: results.key });\r\n        setload(false);\r\n      } else {\r\n        setmessage(results.message);\r\n        setinvalid(true);\r\n        setload(false);\r\n      }\r\n    }).catch((err) => {\r\n      setinvalid(true);\r\n      setmessage(err);\r\n      console.log(err);\r\n      setload(false);\r\n\r\n    })\r\n\r\n\r\n  }\r\n\r\n\r\n  const handleRegistration = (values: any) => {\r\n\r\n    console.log(values, BACKEND);\r\n\r\n    setload(true);\r\n    const url = `https://sunstarapi.herokuapp.com/user/verify/${props.params.key}`;\r\n    try {\r\n      axios.post(url, values)\r\n        .then((res) => {\r\n\r\n          if (res.data.status === \"Success\") {\r\n\r\n            if (props.params.task == \"registration\") {\r\n              handleSuccessfulRegistration()\r\n            } else {\r\n              navigation.navigate('resetscreen', {\r\n                key: props.params.key,\r\n              });\r\n            }\r\n          } else {\r\n            setmessage(res.data.message + \".\");\r\n            console.log(res.data.details, \"++>>++>>\");\r\n            setinvalid(true);\r\n            setload(false);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          setmessage(err + \".==>>\");\r\n          console.log(err, \"===>>>>>\");\r\n          setinvalid(true);\r\n          setload(false);\r\n        })\r\n    } catch (err) {\r\n      console.log(err + \".\");\r\n      setload(false);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <View style={{ height: '100%', width: '100%' }}>\r\n      <StatusBar barStyle={'dark-content'} backgroundColor={Constance.White} />\r\n\r\n      <View style={style.parent}>\r\n\r\n        <View style={[style.topcontainer, { justifyContent: 'center', alignItems: 'center' }]}>\r\n          <View style={{ position: 'absolute', justifyContent: 'center', alignItems: 'center', padding: 90 }}>\r\n            <Anim json={require('../../assets/lottie/15413-registro.json')} autoplay={true} autosize={true} loop={true} speed={1} style={{ height: '100%', width: '100%' }} />\r\n          </View>\r\n        </View>\r\n\r\n        <View style={style.bottomcontainer}>\r\n          <ScrollView showsVerticalScrollIndicator={false}>\r\n            <View >\r\n\r\n              <TextComponent style={{ fontSize: Constance.medium, marginVertical: 15 }} text='Register' />\r\n\r\n              <Formik\r\n                initialValues={{ pin: '' }}\r\n                onSubmit={(values, action) => {\r\n                  let data = {\r\n                    pin: values.pin\r\n                  };\r\n                  handleRegistration(data);\r\n\r\n                }}\r\n                validationSchema={loginSchema}\r\n              >\r\n\r\n                {(props) => (\r\n                  <View>\r\n                    <InputComponent hint='OTP'\r\n                      left={<TextInput.Icon name=\"account\" />}\r\n                      changeText={props.handleChange(\"pin\")}\r\n                      value={props.values.pin}\r\n                      keyboard={\"number-pad\"}\r\n                      style={{\r\n                        borderColor: Constance.light_border,\r\n                        borderWidth: 1, borderRadius: 5\r\n                      }}\r\n                    />\r\n                    {props.errors.pin || null ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red }} text={props.errors.pin} /></Animatable.View> : null}\r\n\r\n\r\n                    <ButtonComponent mode='contained' btnstyle={{ marginTop: 40, backgroundColor: Constance.Yellow, }} lblstyle={{ color: Constance.White, textTransform: 'capitalize' }} text='Verify' press={props.handleSubmit} />\r\n\r\n                  </View>\r\n                )}\r\n              </Formik>\r\n\r\n            </View>\r\n          </ScrollView>\r\n        </View>\r\n\r\n        <Snackbar\r\n          visible={invalid}\r\n          onDismiss={() => setinvalid(false)}\r\n        >\r\n          {message}\r\n        </Snackbar>\r\n      </View>\r\n\r\n\r\n      {load ? <View style={{ height: '100%', width: '100%', position: 'absolute', justifyContent: 'center', alignItems: 'center' }}>\r\n        <Progress />\r\n      </View> : null}\r\n    </View >\r\n  )\r\n}\r\n\r\nexport default Verify\r\n"]},"metadata":{},"sourceType":"module"}