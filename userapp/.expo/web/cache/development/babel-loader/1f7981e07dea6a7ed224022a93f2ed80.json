{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Formik } from 'formik';\nimport React, { useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Snackbar, TextInput } from 'react-native-paper';\nimport ButtonComponent from \"../components/button\";\nimport InputComponent from \"../components/input\";\nimport TextComponent from \"../components/text\";\nimport style from \"../styles/screens/login\";\nimport Constance from \"../theme/const\";\nimport * as yup from 'yup';\nimport * as Animatable from 'react-native-animatable';\nimport Progress from \"../components/indicator\";\nimport Anim from \"../components/anim\";\nimport axios from 'axios';\nvar loginSchema = yup.object({\n  names: yup.string().required(\"Required\").min(3).matches(/^(?![\\s.]+$)[a-zA-Z\\s.]*$/, \"Invalid name\"),\n  username: yup.string().required(\"Required\").min(3).matches(/^[a-zA-Z0-9]+$/, \"Invalid username\"),\n  contact: yup.string().required(\"Required\").min(10).matches(/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/, \"Invalid contact\"),\n  email: yup.string().required(\"Required\").matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, \"Invalid email\"),\n  password: yup.string().required(\"Required\").min(8).matches(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/, \"Invalid password\"),\n  confirmpassword: yup.string().required(\"Required\").min(8).matches(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/, \"Invalid password\")\n});\n\nvar Register = function Register(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      confirmVisible = _useState4[0],\n      setconfirmVisible = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      invalid = _useState6[0],\n      setinvalid = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      load = _useState8[0],\n      setload = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      message = _useState10[0],\n      setmessage = _useState10[1];\n\n  var handleSignIn = function handleSignIn(values) {\n    setinvalid(true);\n  };\n\n  var handleRegistration = function handleRegistration(values) {\n    setload(true);\n    var url = \"https://sunstarapi.herokuapp.com/user/\";\n\n    try {\n      axios.post(url, values).then(function (res) {\n        if (res.data.status === \"Pending\") {\n          setload(false);\n          navigation.navigate('verifyscreen', {\n            email: values.email,\n            password: values.password,\n            key: res.data.key,\n            task: 'registration'\n          });\n        } else {\n          setmessage(res.data.message + \".\");\n          console.log(res.data.details);\n          setinvalid(true);\n          setload(false);\n        }\n      }).catch(function (err) {\n        setmessage(err + \".\");\n        console.log(err);\n        setinvalid(true);\n        setload(false);\n      });\n    } catch (err) {\n      console.log(err + \".\");\n      console.log(values);\n      setload(false);\n    }\n  };\n\n  return React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%'\n    }\n  }, React.createElement(StatusBar, {\n    barStyle: 'dark-content',\n    backgroundColor: Constance.White\n  }), React.createElement(View, {\n    style: style.parent\n  }, React.createElement(View, {\n    style: [style.topcontainer, {\n      justifyContent: 'center',\n      alignItems: 'center'\n    }]\n  }, React.createElement(View, {\n    style: {\n      position: 'absolute',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 90\n    }\n  }, React.createElement(Anim, {\n    json: require(\"../../assets/lottie/15413-registro.json\"),\n    autoplay: true,\n    autosize: true,\n    loop: true,\n    speed: 1,\n    style: {\n      height: '100%',\n      width: '100%'\n    }\n  }))), React.createElement(View, {\n    style: style.bottomcontainer\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false\n  }, React.createElement(View, null, React.createElement(TextComponent, {\n    style: {\n      fontSize: Constance.medium,\n      marginVertical: 15\n    },\n    text: \"Register\"\n  }), React.createElement(Formik, {\n    initialValues: {\n      names: '',\n      username: '',\n      contact: '',\n      email: '',\n      password: '',\n      confirmpassword: ''\n    },\n    onSubmit: function onSubmit(values, action) {\n      if (values.confirmpassword === values.password) {\n        var data = {\n          names: values.names,\n          username: values.username.trim(),\n          contact: values.contact.trim(),\n          email: values.email.toLowerCase().trim(),\n          password: values.password.trim(),\n          type: 'client'\n        };\n        handleRegistration(data);\n      } else {\n        setmessage(\"Password does not match\");\n        setinvalid(true);\n      }\n    },\n    validationSchema: loginSchema\n  }, function (props) {\n    return React.createElement(View, null, React.createElement(InputComponent, {\n      hint: \"Names\",\n      left: React.createElement(TextInput.Icon, {\n        name: \"account\"\n      }),\n      changeText: props.handleChange(\"names\"),\n      value: props.values.names,\n      style: {\n        borderColor: Constance.light_border,\n        borderWidth: 1,\n        borderRadius: 5\n      }\n    }), props.errors.names || null ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.name\n    })) : null, React.createElement(InputComponent, {\n      hint: \"Username\",\n      left: React.createElement(TextInput.Icon, {\n        name: \"account-box\"\n      }),\n      changeText: props.handleChange(\"username\"),\n      value: props.values.username,\n      style: {\n        borderColor: Constance.light_border,\n        borderWidth: 1,\n        borderRadius: 5,\n        marginTop: 5\n      }\n    }), props.errors.username || null ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.username\n    })) : null, React.createElement(InputComponent, {\n      hint: \"Contact\",\n      left: React.createElement(TextInput.Icon, {\n        name: \"phone\"\n      }),\n      changeText: props.handleChange(\"contact\"),\n      keyboard: \"phone-pad\",\n      value: props.values.contact,\n      style: {\n        borderColor: Constance.light_border,\n        borderWidth: 1,\n        borderRadius: 5,\n        marginTop: 5\n      }\n    }), props.errors.contact || null ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.contact\n    })) : null, React.createElement(InputComponent, {\n      hint: \"E-mail\",\n      left: React.createElement(TextInput.Icon, {\n        name: \"at\"\n      }),\n      changeText: props.handleChange(\"email\"),\n      value: props.values.email,\n      style: {\n        borderColor: Constance.light_border,\n        borderWidth: 1,\n        borderRadius: 5,\n        marginTop: 5\n      }\n    }), props.errors.email || null ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.email\n    })) : null, React.createElement(InputComponent, {\n      hint: \"Password\",\n      secured: visible,\n      left: React.createElement(TextInput.Icon, {\n        name: \"lock\"\n      }),\n      right: React.createElement(TextInput.Icon, {\n        name: visible ? \"eye\" : \"eye-off\",\n        onPress: function onPress() {\n          return visible ? setVisible(false) : setVisible(true);\n        }\n      }),\n      changeText: props.handleChange(\"password\"),\n      value: props.values.password,\n      style: {\n        borderColor: Constance.light_border,\n        borderRadius: 5,\n        borderWidth: 1,\n        marginTop: 5\n      }\n    }), props.errors.password ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.password\n    })) : null, React.createElement(InputComponent, {\n      hint: \"Confirm password\",\n      secured: confirmVisible,\n      left: React.createElement(TextInput.Icon, {\n        name: \"lock\"\n      }),\n      right: React.createElement(TextInput.Icon, {\n        name: visible ? \"eye\" : \"eye-off\",\n        onPress: function onPress() {\n          return visible ? setconfirmVisible(false) : setconfirmVisible(true);\n        }\n      }),\n      changeText: props.handleChange(\"confirmpassword\"),\n      value: props.values.confirmpassword,\n      style: {\n        borderColor: Constance.light_border,\n        borderRadius: 5,\n        borderWidth: 1,\n        marginTop: 5\n      }\n    }), props.errors.confirmpassword ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.confirmpassword\n    })) : null, React.createElement(ButtonComponent, {\n      mode: \"contained\",\n      btnstyle: {\n        marginTop: 40,\n        backgroundColor: Constance.Yellow\n      },\n      lblstyle: {\n        color: Constance.White,\n        textTransform: 'capitalize'\n      },\n      text: \"Register\",\n      press: props.handleSubmit\n    }));\n  }), React.createElement(ButtonComponent, {\n    mode: \"text\",\n    btnstyle: {\n      marginTop: 20,\n      alignSelf: 'center'\n    },\n    lblstyle: {\n      color: Constance.Black,\n      textTransform: 'capitalize'\n    },\n    text: \"Sign-in\",\n    press: function press() {\n      navigation.navigate('loginscreen');\n    }\n  })))), React.createElement(Snackbar, {\n    visible: invalid,\n    onDismiss: function onDismiss() {\n      return setinvalid(false);\n    }\n  }, message)), load ? React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%',\n      position: 'absolute',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Progress, null)) : null);\n};\n\nexport default Register;","map":{"version":3,"sources":["D:/Development/Mobile Development/React native/Hotel/SunStar/SunStar/userapp/source/screens/register.tsx"],"names":["Formik","React","useState","Snackbar","TextInput","ButtonComponent","InputComponent","TextComponent","style","Constance","yup","Animatable","Progress","Anim","axios","loginSchema","object","names","string","required","min","matches","username","contact","email","password","confirmpassword","Register","navigation","visible","setVisible","confirmVisible","setconfirmVisible","invalid","setinvalid","load","setload","message","setmessage","handleSignIn","values","handleRegistration","url","post","then","res","data","status","navigate","key","task","console","log","details","catch","err","height","width","White","parent","topcontainer","justifyContent","alignItems","position","padding","require","bottomcontainer","fontSize","medium","marginVertical","action","trim","toLowerCase","type","props","handleChange","borderColor","light_border","borderWidth","borderRadius","errors","color","Red","name","marginTop","backgroundColor","Yellow","textTransform","handleSubmit","alignSelf","Black"],"mappings":";AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,OAAOC,KAAP,IAA4BC,QAA5B,QAA4C,OAA5C;;;;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,OAAOC,eAAP;AACA,OAAOC,cAAP;AACA,OAAOC,aAAP;AACA,OAAOC,KAAP;AACA,OAAOC,SAAP;AAEA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAO,KAAKC,UAAZ,MAA4B,yBAA5B;AACA,OAAOC,QAAP;AACA,OAAOC,IAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,IAAMC,WAAW,GAAGL,GAAG,CAACM,MAAJ,CAAW;AAC7BC,EAAAA,KAAK,EAAEP,GAAG,CAACQ,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,EAAkCC,GAAlC,CAAsC,CAAtC,EAAyCC,OAAzC,CAAiD,2BAAjD,EAA8E,cAA9E,CADsB;AAE7BC,EAAAA,QAAQ,EAAEZ,GAAG,CAACQ,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,EAAkCC,GAAlC,CAAsC,CAAtC,EAAyCC,OAAzC,CAAiD,gBAAjD,EAAmE,kBAAnE,CAFmB;AAG7BE,EAAAA,OAAO,EAAEb,GAAG,CAACQ,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,EAAkCC,GAAlC,CAAsC,EAAtC,EAA0CC,OAA1C,CAAkD,8CAAlD,EAAkG,iBAAlG,CAHoB;AAI7BG,EAAAA,KAAK,EAAEd,GAAG,CAACQ,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,EAAkCE,OAAlC,CAA0C,yJAA1C,EAAqM,eAArM,CAJsB;AAK7BI,EAAAA,QAAQ,EAAEf,GAAG,CAACQ,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,EAAkCC,GAAlC,CAAsC,CAAtC,EAAyCC,OAAzC,CAAiD,gEAAjD,EAAmH,kBAAnH,CALmB;AAM7BK,EAAAA,eAAe,EAAEhB,GAAG,CAACQ,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,EAAkCC,GAAlC,CAAsC,CAAtC,EAAyCC,OAAzC,CAAiD,gEAAjD,EAAmH,kBAAnH;AANY,CAAX,CAApB;;AAUA,IAAMM,QAAQ,GAAG,SAAXA,QAAW,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAEnC,kBAA8B1B,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAO2B,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA4C5B,QAAQ,CAAC,IAAD,CAApD;AAAA;AAAA,MAAO6B,cAAP;AAAA,MAAuBC,iBAAvB;;AACA,mBAA8B9B,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAO+B,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAwBhC,QAAQ,CAAC,KAAD,CAAhC;AAAA;AAAA,MAAOiC,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA8BlC,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOmC,OAAP;AAAA,MAAgBC,UAAhB;;AAGA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAAiB;AACpCN,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAFD;;AAKA,MAAMO,kBAAkB,GAAG,SAArBA,kBAAqB,CAACD,MAAD,EAAiB;AAE1CJ,IAAAA,OAAO,CAAC,IAAD,CAAP;AACA,QAAMM,GAAG,GAAG,wCAAZ;;AAEA,QAAI;AACF5B,MAAAA,KAAK,CAAC6B,IAAN,CAAWD,GAAX,EAAgBF,MAAhB,EACGI,IADH,CACQ,UAACC,GAAD,EAAS;AAEb,YAAGA,GAAG,CAACC,IAAJ,CAASC,MAAT,KAAoB,SAAvB,EAAiC;AAEhCX,UAAAA,OAAO,CAAC,KAAD,CAAP;AACCR,UAAAA,UAAU,CAACoB,QAAX,CAAoB,cAApB,EAAoC;AAClCxB,YAAAA,KAAK,EAAEgB,MAAM,CAAChB,KADoB;AAElCC,YAAAA,QAAQ,EAAEe,MAAM,CAACf,QAFiB;AAGlCwB,YAAAA,GAAG,EAAEJ,GAAG,CAACC,IAAJ,CAASG,GAHoB;AAIlCC,YAAAA,IAAI,EAAC;AAJ6B,WAApC;AAOD,SAVD,MAUK;AACLZ,UAAAA,UAAU,CAACO,GAAG,CAACC,IAAJ,CAAST,OAAT,GAAmB,GAApB,CAAV;AACAc,UAAAA,OAAO,CAACC,GAAR,CAAYP,GAAG,CAACC,IAAJ,CAASO,OAArB;AACAnB,UAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,UAAAA,OAAO,CAAC,KAAD,CAAP;AAAgB;AACjB,OAlBH,EAmBGkB,KAnBH,CAmBS,UAACC,GAAD,EAAS;AACdjB,QAAAA,UAAU,CAACiB,GAAG,GAAG,GAAP,CAAV;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACArB,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD,OAxBH;AAyBD,KA1BD,CA0BE,OAAOmB,GAAP,EAAY;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,GAAG,GAAlB;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;AACAJ,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,GApCD;;AAwCA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEoB,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,KAAK,EAAE;AAAzB;AAAb,KACE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAE,cAArB;AAAqC,IAAA,eAAe,EAAEhD,SAAS,CAACiD;AAAhE,IADF,EAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElD,KAAK,CAACmD;AAAnB,KAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACnD,KAAK,CAACoD,YAAP,EAAqB;AAAEC,MAAAA,cAAc,EAAE,QAAlB;AAA4BC,MAAAA,UAAU,EAAE;AAAxC,KAArB;AAAb,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,UAAZ;AAAwBF,MAAAA,cAAc,EAAE,QAAxC;AAAkDC,MAAAA,UAAU,EAAE,QAA9D;AAAwEE,MAAAA,OAAO,EAAE;AAAjF;AAAb,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEC,OAAO,2CAAnB;AAAgE,IAAA,QAAQ,EAAE,IAA1E;AAAgF,IAAA,QAAQ,EAAE,IAA1F;AAAgG,IAAA,IAAI,EAAE,IAAtG;AAA4G,IAAA,KAAK,EAAE,CAAnH;AAAsH,IAAA,KAAK,EAAE;AAAET,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,KAAK,EAAE;AAAzB;AAA7H,IADF,CADF,CAFF,EAQE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjD,KAAK,CAAC0D;AAAnB,KACE,oBAAC,UAAD;AAAY,IAAA,4BAA4B,EAAE;AAA1C,KACE,oBAAC,IAAD,QAEE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE1D,SAAS,CAAC2D,MAAtB;AAA8BC,MAAAA,cAAc,EAAE;AAA9C,KAAtB;AAA0E,IAAA,IAAI,EAAC;AAA/E,IAFF,EAIE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEpD,MAAAA,KAAK,EAAE,EAAT;AAAaK,MAAAA,QAAQ,EAAE,EAAvB;AAA2BC,MAAAA,OAAO,EAAE,EAApC;AAAwCC,MAAAA,KAAK,EAAE,EAA/C;AAAmDC,MAAAA,QAAQ,EAAE,EAA7D;AAAiEC,MAAAA,eAAe,EAAE;AAAlF,KADjB;AAEE,IAAA,QAAQ,EAAE,kBAACc,MAAD,EAAS8B,MAAT,EAAoB;AAC5B,UAAI9B,MAAM,CAACd,eAAP,KAA2Bc,MAAM,CAACf,QAAtC,EAAgD;AAC9C,YAAIqB,IAAI,GAAG;AACT7B,UAAAA,KAAK,EAAEuB,MAAM,CAACvB,KADL;AAETK,UAAAA,QAAQ,EAAEkB,MAAM,CAAClB,QAAP,CAAgBiD,IAAhB,EAFD;AAGThD,UAAAA,OAAO,EAAEiB,MAAM,CAACjB,OAAP,CAAegD,IAAf,EAHA;AAIT/C,UAAAA,KAAK,EAAEgB,MAAM,CAAChB,KAAP,CAAagD,WAAb,GAA2BD,IAA3B,EAJE;AAKT9C,UAAAA,QAAQ,EAAEe,MAAM,CAACf,QAAP,CAAgB8C,IAAhB,EALD;AAMTE,UAAAA,IAAI,EAAE;AANG,SAAX;AAQAhC,QAAAA,kBAAkB,CAACK,IAAD,CAAlB;AACD,OAVD,MAWK;AACHR,QAAAA,UAAU,CAAC,yBAAD,CAAV;AACAJ,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AAEF,KAnBH;AAoBE,IAAA,gBAAgB,EAAEnB;AApBpB,KAuBG,UAAC2D,KAAD;AAAA,WACC,oBAAC,IAAD,QACE,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAC,OAArB;AACE,MAAA,IAAI,EAAE,oBAAC,SAAD,CAAW,IAAX;AAAgB,QAAA,IAAI,EAAC;AAArB,QADR;AAEE,MAAA,UAAU,EAAEA,KAAK,CAACC,YAAN,CAAmB,OAAnB,CAFd;AAGE,MAAA,KAAK,EAAED,KAAK,CAAClC,MAAN,CAAavB,KAHtB;AAIE,MAAA,KAAK,EAAE;AACL2D,QAAAA,WAAW,EAAEnE,SAAS,CAACoE,YADlB;AAELC,QAAAA,WAAW,EAAE,CAFR;AAEWC,QAAAA,YAAY,EAAE;AAFzB;AAJT,MADF,EAUGL,KAAK,CAACM,MAAN,CAAa/D,KAAb,IAAsB,IAAtB,GAA6B,oBAAC,UAAD,CAAY,IAAZ;AAAiB,MAAA,SAAS,EAAC,OAA3B;AAAmC,MAAA,MAAM,EAAC;AAA1C,OAAqD,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAE;AAAEgE,QAAAA,KAAK,EAAExE,SAAS,CAACyE;AAAnB,OAAtB;AAAgD,MAAA,IAAI,EAAER,KAAK,CAACM,MAAN,CAAaG;AAAnE,MAArD,CAA7B,GAAkL,IAVrL,EAYE,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAC,UAArB;AACE,MAAA,IAAI,EAAE,oBAAC,SAAD,CAAW,IAAX;AAAgB,QAAA,IAAI,EAAC;AAArB,QADR;AAEE,MAAA,UAAU,EAAET,KAAK,CAACC,YAAN,CAAmB,UAAnB,CAFd;AAGE,MAAA,KAAK,EAAED,KAAK,CAAClC,MAAN,CAAalB,QAHtB;AAIE,MAAA,KAAK,EAAE;AACLsD,QAAAA,WAAW,EAAEnE,SAAS,CAACoE,YADlB;AAELC,QAAAA,WAAW,EAAE,CAFR;AAEWC,QAAAA,YAAY,EAAE,CAFzB;AAE4BK,QAAAA,SAAS,EAAE;AAFvC;AAJT,MAZF,EAqBGV,KAAK,CAACM,MAAN,CAAa1D,QAAb,IAAyB,IAAzB,GAAgC,oBAAC,UAAD,CAAY,IAAZ;AAAiB,MAAA,SAAS,EAAC,OAA3B;AAAmC,MAAA,MAAM,EAAC;AAA1C,OAAqD,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAE;AAAE2D,QAAAA,KAAK,EAAExE,SAAS,CAACyE;AAAnB,OAAtB;AAAgD,MAAA,IAAI,EAAER,KAAK,CAACM,MAAN,CAAa1D;AAAnE,MAArD,CAAhC,GAAyL,IArB5L,EAuBE,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAC,SAArB;AACE,MAAA,IAAI,EAAE,oBAAC,SAAD,CAAW,IAAX;AAAgB,QAAA,IAAI,EAAC;AAArB,QADR;AAEE,MAAA,UAAU,EAAEoD,KAAK,CAACC,YAAN,CAAmB,SAAnB,CAFd;AAGE,MAAA,QAAQ,EAAE,WAHZ;AAIE,MAAA,KAAK,EAAED,KAAK,CAAClC,MAAN,CAAajB,OAJtB;AAKE,MAAA,KAAK,EAAE;AACLqD,QAAAA,WAAW,EAAEnE,SAAS,CAACoE,YADlB;AAELC,QAAAA,WAAW,EAAE,CAFR;AAEWC,QAAAA,YAAY,EAAE,CAFzB;AAE4BK,QAAAA,SAAS,EAAE;AAFvC;AALT,MAvBF,EAiCGV,KAAK,CAACM,MAAN,CAAazD,OAAb,IAAwB,IAAxB,GAA+B,oBAAC,UAAD,CAAY,IAAZ;AAAiB,MAAA,SAAS,EAAC,OAA3B;AAAmC,MAAA,MAAM,EAAC;AAA1C,OAAqD,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAE;AAAE0D,QAAAA,KAAK,EAAExE,SAAS,CAACyE;AAAnB,OAAtB;AAAgD,MAAA,IAAI,EAAER,KAAK,CAACM,MAAN,CAAazD;AAAnE,MAArD,CAA/B,GAAuL,IAjC1L,EAmCE,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAC,QAArB;AACE,MAAA,IAAI,EAAE,oBAAC,SAAD,CAAW,IAAX;AAAgB,QAAA,IAAI,EAAC;AAArB,QADR;AAEE,MAAA,UAAU,EAAEmD,KAAK,CAACC,YAAN,CAAmB,OAAnB,CAFd;AAGE,MAAA,KAAK,EAAED,KAAK,CAAClC,MAAN,CAAahB,KAHtB;AAIE,MAAA,KAAK,EAAE;AACLoD,QAAAA,WAAW,EAAEnE,SAAS,CAACoE,YADlB;AAELC,QAAAA,WAAW,EAAE,CAFR;AAEWC,QAAAA,YAAY,EAAE,CAFzB;AAE4BK,QAAAA,SAAS,EAAE;AAFvC;AAJT,MAnCF,EA4CGV,KAAK,CAACM,MAAN,CAAaxD,KAAb,IAAsB,IAAtB,GAA6B,oBAAC,UAAD,CAAY,IAAZ;AAAiB,MAAA,SAAS,EAAC,OAA3B;AAAmC,MAAA,MAAM,EAAC;AAA1C,OAAqD,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAE;AAAEyD,QAAAA,KAAK,EAAExE,SAAS,CAACyE;AAAnB,OAAtB;AAAgD,MAAA,IAAI,EAAER,KAAK,CAACM,MAAN,CAAaxD;AAAnE,MAArD,CAA7B,GAAmL,IA5CtL,EA8CE,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAC,UAArB;AACE,MAAA,OAAO,EAAEK,OADX;AAEE,MAAA,IAAI,EAAE,oBAAC,SAAD,CAAW,IAAX;AAAgB,QAAA,IAAI,EAAC;AAArB,QAFR;AAGE,MAAA,KAAK,EAAE,oBAAC,SAAD,CAAW,IAAX;AAAgB,QAAA,IAAI,EAAEA,OAAO,GAAG,KAAH,GAAW,SAAxC;AAAmD,QAAA,OAAO,EAAE;AAAA,iBAAMA,OAAO,GAAGC,UAAU,CAAC,KAAD,CAAb,GAAuBA,UAAU,CAAC,IAAD,CAA9C;AAAA;AAA5D,QAHT;AAIE,MAAA,UAAU,EAAE4C,KAAK,CAACC,YAAN,CAAmB,UAAnB,CAJd;AAKE,MAAA,KAAK,EAAED,KAAK,CAAClC,MAAN,CAAaf,QALtB;AAME,MAAA,KAAK,EAAE;AACLmD,QAAAA,WAAW,EAAEnE,SAAS,CAACoE,YADlB;AAELE,QAAAA,YAAY,EAAE,CAFT;AAGLD,QAAAA,WAAW,EAAE,CAHR;AAILM,QAAAA,SAAS,EAAE;AAJN;AANT,MA9CF,EA2DGV,KAAK,CAACM,MAAN,CAAavD,QAAb,GAAwB,oBAAC,UAAD,CAAY,IAAZ;AAAiB,MAAA,SAAS,EAAC,OAA3B;AAAmC,MAAA,MAAM,EAAC;AAA1C,OAAqD,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAE;AAAEwD,QAAAA,KAAK,EAAExE,SAAS,CAACyE;AAAnB,OAAtB;AAAgD,MAAA,IAAI,EAAER,KAAK,CAACM,MAAN,CAAavD;AAAnE,MAArD,CAAxB,GAAiL,IA3DpL,EA8DE,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAC,kBAArB;AACE,MAAA,OAAO,EAAEM,cADX;AAEE,MAAA,IAAI,EAAE,oBAAC,SAAD,CAAW,IAAX;AAAgB,QAAA,IAAI,EAAC;AAArB,QAFR;AAGE,MAAA,KAAK,EAAE,oBAAC,SAAD,CAAW,IAAX;AAAgB,QAAA,IAAI,EAAEF,OAAO,GAAG,KAAH,GAAW,SAAxC;AAAmD,QAAA,OAAO,EAAE;AAAA,iBAAMA,OAAO,GAAGG,iBAAiB,CAAC,KAAD,CAApB,GAA8BA,iBAAiB,CAAC,IAAD,CAA5D;AAAA;AAA5D,QAHT;AAIE,MAAA,UAAU,EAAE0C,KAAK,CAACC,YAAN,CAAmB,iBAAnB,CAJd;AAKE,MAAA,KAAK,EAAED,KAAK,CAAClC,MAAN,CAAad,eALtB;AAME,MAAA,KAAK,EAAE;AACLkD,QAAAA,WAAW,EAAEnE,SAAS,CAACoE,YADlB;AAELE,QAAAA,YAAY,EAAE,CAFT;AAGLD,QAAAA,WAAW,EAAE,CAHR;AAGWM,QAAAA,SAAS,EAAE;AAHtB;AANT,MA9DF,EA0EGV,KAAK,CAACM,MAAN,CAAatD,eAAb,GAA+B,oBAAC,UAAD,CAAY,IAAZ;AAAiB,MAAA,SAAS,EAAC,OAA3B;AAAmC,MAAA,MAAM,EAAC;AAA1C,OAAqD,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAE;AAAEuD,QAAAA,KAAK,EAAExE,SAAS,CAACyE;AAAnB,OAAtB;AAAiD,MAAA,IAAI,EAAER,KAAK,CAACM,MAAN,CAAatD;AAApE,MAArD,CAA/B,GAAgM,IA1EnM,EA4EE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAC,WAAtB;AAAkC,MAAA,QAAQ,EAAE;AAAE0D,QAAAA,SAAS,EAAE,EAAb;AAAiBC,QAAAA,eAAe,EAAE5E,SAAS,CAAC6E;AAA5C,OAA5C;AAAmG,MAAA,QAAQ,EAAE;AAAEL,QAAAA,KAAK,EAAExE,SAAS,CAACiD,KAAnB;AAA0B6B,QAAAA,aAAa,EAAE;AAAzC,OAA7G;AAAsK,MAAA,IAAI,EAAC,UAA3K;AAAsL,MAAA,KAAK,EAAEb,KAAK,CAACc;AAAnM,MA5EF,CADD;AAAA,GAvBH,CAJF,EA8GE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAC,MAAtB;AAA6B,IAAA,QAAQ,EAAE;AAAEJ,MAAAA,SAAS,EAAE,EAAb;AAAiBK,MAAAA,SAAS,EAAE;AAA5B,KAAvC;AAA+E,IAAA,QAAQ,EAAE;AAAER,MAAAA,KAAK,EAAExE,SAAS,CAACiF,KAAnB;AAA0BH,MAAAA,aAAa,EAAE;AAAzC,KAAzF;AAAkJ,IAAA,IAAI,EAAC,SAAvJ;AAAiK,IAAA,KAAK,EAAE,iBAAM;AAAE3D,MAAAA,UAAU,CAACoB,QAAX,CAAoB,aAApB;AAAoC;AAApN,IA9GF,CADF,CADF,CARF,EA8HE,oBAAC,QAAD;AACE,IAAA,OAAO,EAAEf,OADX;AAEE,IAAA,SAAS,EAAE;AAAA,aAAMC,UAAU,CAAC,KAAD,CAAhB;AAAA;AAFb,KAIGG,OAJH,CA9HF,CAHF,EA0IGF,IAAI,GAAG,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEqB,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,KAAK,EAAE,MAAzB;AAAiCM,MAAAA,QAAQ,EAAE,UAA3C;AAAuDF,MAAAA,cAAc,EAAE,QAAvE;AAAiFC,MAAAA,UAAU,EAAE;AAA7F;AAAb,KACN,oBAAC,QAAD,OADM,CAAH,GAEK,IA5IZ,CADF;AAgJD,CAtMD;;AAwMA,eAAenC,QAAf","sourcesContent":["import { Formik } from 'formik';\r\nimport React, { useContext, useState } from 'react'\r\nimport { Image, ScrollView, StatusBar, View } from 'react-native'\r\nimport { Snackbar, TextInput } from 'react-native-paper';\r\nimport ButtonComponent from '../components/button';\r\nimport InputComponent from '../components/input';\r\nimport TextComponent from '../components/text';\r\nimport style from '../styles/screens/login';\r\nimport Constance from '../theme/const';\r\nimport { ThemeContext } from '../theme/themeProvider';\r\nimport * as yup from 'yup';\r\nimport * as Animatable from 'react-native-animatable';\r\nimport Progress from '../components/indicator';\r\nimport Anim from '../components/anim';\r\nimport axios from 'axios';\r\n\r\n\r\nconst loginSchema = yup.object({\r\n  names: yup.string().required(\"Required\").min(3).matches(/^(?![\\s.]+$)[a-zA-Z\\s.]*$/, \"Invalid name\"),\r\n  username: yup.string().required(\"Required\").min(3).matches(/^[a-zA-Z0-9]+$/, \"Invalid username\"),\r\n  contact: yup.string().required(\"Required\").min(10).matches(/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/, \"Invalid contact\"),\r\n  email: yup.string().required(\"Required\").matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, \"Invalid email\"),\r\n  password: yup.string().required(\"Required\").min(8).matches(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/, \"Invalid password\"),\r\n  confirmpassword: yup.string().required(\"Required\").min(8).matches(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/, \"Invalid password\")\r\n})\r\n\r\n\r\nconst Register = ({ navigation }) => {\r\n\r\n  const [visible, setVisible] = useState(true);\r\n  const [confirmVisible, setconfirmVisible] = useState(true)\r\n  const [invalid, setinvalid] = useState(false);\r\n  const [load, setload] = useState(false);\r\n  const [message, setmessage] = useState('');\r\n\r\n\r\n  const handleSignIn = (values: any) => {\r\n    setinvalid(true)\r\n  }\r\n\r\n\r\n  const handleRegistration = (values: any) => {\r\n\r\n    setload(true);\r\n    const url = \"https://sunstarapi.herokuapp.com/user/\";\r\n\r\n    try {\r\n      axios.post(url, values)\r\n        .then((res) => {\r\n\r\n          if(res.data.status === \"Pending\"){\r\n           \r\n           setload(false); \r\n            navigation.navigate('verifyscreen', {\r\n              email: values.email,\r\n              password: values.password,\r\n              key: res.data.key,\r\n              task:'registration'\r\n            });\r\n       \r\n          }else{\r\n          setmessage(res.data.message + \".\");\r\n          console.log(res.data.details);\r\n          setinvalid(true);\r\n          setload(false);}\r\n        })\r\n        .catch((err) => {\r\n          setmessage(err + \".\");\r\n          console.log(err);\r\n          setinvalid(true);\r\n          setload(false);\r\n        })\r\n    } catch (err) {\r\n      console.log(err + \".\");\r\n      console.log(values);\r\n      setload(false);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <View style={{ height: '100%', width: '100%' }}>\r\n      <StatusBar barStyle={'dark-content'} backgroundColor={Constance.White} />\r\n\r\n      <View style={style.parent}>\r\n\r\n        <View style={[style.topcontainer, { justifyContent: 'center', alignItems: 'center' }]}>\r\n          <View style={{ position: 'absolute', justifyContent: 'center', alignItems: 'center', padding: 90 }}>\r\n            <Anim json={require('../../assets/lottie/15413-registro.json')} autoplay={true} autosize={true} loop={true} speed={1} style={{ height: '100%', width: '100%' }} />\r\n          </View>\r\n        </View>\r\n\r\n        <View style={style.bottomcontainer}>\r\n          <ScrollView showsVerticalScrollIndicator={false}>\r\n            <View >\r\n\r\n              <TextComponent style={{ fontSize: Constance.medium, marginVertical: 15 }} text='Register' />\r\n\r\n              <Formik\r\n                initialValues={{ names: '', username: '', contact: '', email: '', password: '', confirmpassword: '' }}\r\n                onSubmit={(values, action) => {\r\n                  if (values.confirmpassword === values.password) {\r\n                    let data = {\r\n                      names: values.names,\r\n                      username: values.username.trim(),\r\n                      contact: values.contact.trim(),\r\n                      email: values.email.toLowerCase().trim(),\r\n                      password: values.password.trim(),\r\n                      type: 'client'\r\n                    };\r\n                    handleRegistration(data);\r\n                  }\r\n                  else {\r\n                    setmessage(\"Password does not match\");\r\n                    setinvalid(true);\r\n                  }\r\n\r\n                }}\r\n                validationSchema={loginSchema}\r\n              >\r\n\r\n                {(props) => (\r\n                  <View>\r\n                    <InputComponent hint='Names'\r\n                      left={<TextInput.Icon name=\"account\" />}\r\n                      changeText={props.handleChange(\"names\")}\r\n                      value={props.values.names}\r\n                      style={{\r\n                        borderColor: Constance.light_border,\r\n                        borderWidth: 1, borderRadius: 5\r\n                      }}\r\n                    />\r\n                    {props.errors.names || null ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red }} text={props.errors.name} /></Animatable.View> : null}\r\n\r\n                    <InputComponent hint='Username'\r\n                      left={<TextInput.Icon name=\"account-box\" />}\r\n                      changeText={props.handleChange(\"username\")}\r\n                      value={props.values.username}\r\n                      style={{\r\n                        borderColor: Constance.light_border,\r\n                        borderWidth: 1, borderRadius: 5, marginTop: 5\r\n                      }}\r\n                    />\r\n                    {props.errors.username || null ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red }} text={props.errors.username} /></Animatable.View> : null}\r\n\r\n                    <InputComponent hint='Contact'\r\n                      left={<TextInput.Icon name=\"phone\" />}\r\n                      changeText={props.handleChange(\"contact\")}\r\n                      keyboard={\"phone-pad\"}\r\n                      value={props.values.contact}\r\n                      style={{\r\n                        borderColor: Constance.light_border,\r\n                        borderWidth: 1, borderRadius: 5, marginTop: 5\r\n                      }}\r\n                    />\r\n                    {props.errors.contact || null ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red }} text={props.errors.contact} /></Animatable.View> : null}\r\n\r\n                    <InputComponent hint='E-mail'\r\n                      left={<TextInput.Icon name=\"at\" />}\r\n                      changeText={props.handleChange(\"email\")}\r\n                      value={props.values.email}\r\n                      style={{\r\n                        borderColor: Constance.light_border,\r\n                        borderWidth: 1, borderRadius: 5, marginTop: 5\r\n                      }}\r\n                    />\r\n                    {props.errors.email || null ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red }} text={props.errors.email} /></Animatable.View> : null}\r\n\r\n                    <InputComponent hint='Password'\r\n                      secured={visible}\r\n                      left={<TextInput.Icon name=\"lock\" />}\r\n                      right={<TextInput.Icon name={visible ? \"eye\" : \"eye-off\"} onPress={() => visible ? setVisible(false) : setVisible(true)} />}\r\n                      changeText={props.handleChange(\"password\")}\r\n                      value={props.values.password}\r\n                      style={{\r\n                        borderColor: Constance.light_border,\r\n                        borderRadius: 5,\r\n                        borderWidth: 1,\r\n                        marginTop: 5\r\n                      }}\r\n                    />\r\n                    {props.errors.password ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red }} text={props.errors.password} /></Animatable.View> : null}\r\n\r\n\r\n                    <InputComponent hint='Confirm password'\r\n                      secured={confirmVisible}\r\n                      left={<TextInput.Icon name=\"lock\" />}\r\n                      right={<TextInput.Icon name={visible ? \"eye\" : \"eye-off\"} onPress={() => visible ? setconfirmVisible(false) : setconfirmVisible(true)} />}\r\n                      changeText={props.handleChange(\"confirmpassword\")}\r\n                      value={props.values.confirmpassword}\r\n                      style={{\r\n                        borderColor: Constance.light_border,\r\n                        borderRadius: 5,\r\n                        borderWidth: 1, marginTop: 5\r\n                      }}\r\n                    />\r\n                    {props.errors.confirmpassword ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red, }} text={props.errors.confirmpassword} /></Animatable.View> : null}\r\n\r\n                    <ButtonComponent mode='contained' btnstyle={{ marginTop: 40, backgroundColor: Constance.Yellow, }} lblstyle={{ color: Constance.White, textTransform: 'capitalize' }} text='Register' press={props.handleSubmit} />\r\n\r\n                  </View>\r\n                )}\r\n              </Formik>\r\n\r\n              <ButtonComponent mode='text' btnstyle={{ marginTop: 20, alignSelf: 'center' }} lblstyle={{ color: Constance.Black, textTransform: 'capitalize' }} text='Sign-in' press={() => { navigation.navigate('loginscreen') }} />\r\n\r\n            </View>\r\n          </ScrollView>\r\n        </View>\r\n\r\n        <Snackbar\r\n          visible={invalid}\r\n          onDismiss={() => setinvalid(false)}\r\n        >\r\n          {message}\r\n        </Snackbar>\r\n      </View>\r\n\r\n\r\n      {load ? <View style={{ height: '100%', width: '100%', position: 'absolute', justifyContent: 'center', alignItems: 'center' }}>\r\n        <Progress />\r\n      </View> : null}\r\n    </View >\r\n  )\r\n}\r\n\r\nexport default Register\r\n"]},"metadata":{},"sourceType":"module"}