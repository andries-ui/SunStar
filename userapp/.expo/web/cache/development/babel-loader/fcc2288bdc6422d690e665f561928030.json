{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActionBar from \"../components/actionbar\";\nimport style from \"../styles/screens/card\";\nimport Constance from \"../theme/const\";\nimport { Divider, Icon, Text } from 'react-native-elements';\nimport InputComponent from \"../components/input\";\nimport { ThemeContext } from \"../theme/themeProvider\";\nimport ButtonComponent from \"../components/button\";\nimport Modal from \"react-native-modalbox\";\nimport modal from \"../styles/components/modal\";\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport TextComponent from \"../components/text\";\nimport * as Animatable from 'react-native-animatable';\nimport { TextInput } from 'react-native-paper';\nimport { useRoute } from \"@react-navigation/native\";\nimport Constants from 'expo-constants';\nimport * as Notifications from 'expo-notifications';\nimport axios from 'axios';\nimport * as SecureStore from 'expo-secure-store';\nimport Progress from \"../components/indicator\";\nimport { Paystack } from 'react-native-paystack-webview';\nNotifications.setNotificationHandler({\n  handleNotification: function handleNotification() {\n    return _regeneratorRuntime.async(function handleNotification$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", {\n              shouldShowAlert: true,\n              shouldPlaySound: false,\n              shouldSetBadge: false\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n});\n\nfunction registerForPushNotificationsAsync() {\n  var token, _await$Notifications$, existingStatus, finalStatus, _await$Notifications$2, status;\n\n  return _regeneratorRuntime.async(function registerForPushNotificationsAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!Constants.isDevice) {\n            _context2.next = 17;\n            break;\n          }\n\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(Notifications.getPermissionsAsync());\n\n        case 3:\n          _await$Notifications$ = _context2.sent;\n          existingStatus = _await$Notifications$.status;\n          finalStatus = existingStatus;\n\n          if (!(existingStatus !== 'granted')) {\n            _context2.next = 12;\n            break;\n          }\n\n          _context2.next = 9;\n          return _regeneratorRuntime.awrap(Notifications.requestPermissionsAsync());\n\n        case 9:\n          _await$Notifications$2 = _context2.sent;\n          status = _await$Notifications$2.status;\n          finalStatus = status;\n\n        case 12:\n          _context2.next = 14;\n          return _regeneratorRuntime.awrap(Notifications.getExpoPushTokenAsync());\n\n        case 14:\n          token = _context2.sent.data;\n          _context2.next = 18;\n          break;\n\n        case 17:\n          console.log('Must use physical device for Push Notifications');\n\n        case 18:\n          if (Platform.OS === 'android') {\n            Notifications.setNotificationChannelAsync('default', {\n              name: 'default',\n              importance: Notifications.AndroidImportance.MAX,\n              vibrationPattern: [0, 250, 250, 250],\n              lightColor: '#FF231F7C'\n            });\n          }\n\n          return _context2.abrupt(\"return\", token);\n\n        case 20:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar cardSchema = yup.object({\n  names: yup.string().required('Required').min(3).matches(/^(?![\\s.]+$)[a-zA-Z\\s.]*$/, \"Only characters are allowed.\"),\n  cardnumber: yup.string().required('Required').length(16).matches(/^(?:(?<visa>4[0-9]{12}(?:[0-9]{3})?)|(?<mastercard>5[1-5][0-9]{14})|(?<discover>6(?:011|5[0-9]{2})[0-9]{12})|(?<amex>3[47][0-9]{13})|(?<diners>3(?:0[0-5]|[68][0-9])[0-9]{11})|(?<jcb>(?:2131|1800|35[0-9]{3})[0-9]{11}))$/, \"Invalid card number\"),\n  expdate: yup.string().required('Required').matches(/^(0[1-9]|1[0-2])\\/?([0-9]{4}|[0-9]{2})$/, \"invalid date\"),\n  cvv: yup.string().required('Required').length(4).matches(/[0-9]{4}/, \"Invalid pin\")\n});\nvar passwordSchema = yup.object({\n  password: yup.string().required(\"Required\").min(8).matches(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/, \"Invalid password\")\n});\n\nvar Payment = function Payment(_ref) {\n  var navigation = _ref.navigation;\n  var cards = [{\n    id: 1,\n    name: \"Sebola AM\",\n    cardnumber: \"1546 6546 5454 7365\",\n    expdate: '12/24'\n  }, {\n    id: 2,\n    name: \"Sebola AM\",\n    cardnumber: \"1546 6675 6577 5545\",\n    expdate: '07/26'\n  }, {\n    id: 1,\n    name: \"Sebola AM\",\n    cardnumber: \"1546 6546 5454 4115\",\n    expdate: '08/24'\n  }, {\n    id: 1,\n    name: \"Sebola AM\",\n    cardnumber: \"1546 6546 4585 4157\",\n    expdate: '05/28'\n  }];\n  var params = useRoute().params;\n  var paystackWebViewRef = useRef();\n  var payment = params.payment;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalComfirmVisible = _useState2[0],\n      setModalComfirmVisible = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      visiblepassword = _useState4[0],\n      setvisiblepassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      oldPassword = _useState6[0],\n      setoldPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      action = _useState8[0],\n      setaction = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      modalNewCard = _useState10[0],\n      setmodalNewCard = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      modalUpdateCard = _useState12[0],\n      setmodalUpdateCard = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      current = _useState14[0],\n      setcurrent = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      invalid = _useState16[0],\n      setinvalid = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      load = _useState18[0],\n      setload = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      message = _useState20[0],\n      setmessage = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      modalPasswordVisible = _useState22[0],\n      setModalPasswordVisible = _useState22[1];\n\n  var _useState23 = useState(''),\n      _useState24 = _slicedToArray(_useState23, 2),\n      names = _useState24[0],\n      setnames = _useState24[1];\n\n  var _useState25 = useState(''),\n      _useState26 = _slicedToArray(_useState25, 2),\n      email = _useState26[0],\n      setemail = _useState26[1];\n\n  var _useState27 = useState(''),\n      _useState28 = _slicedToArray(_useState27, 2),\n      roomtype = _useState28[0],\n      setroomtype = _useState28[1];\n\n  var _useState29 = useState(''),\n      _useState30 = _slicedToArray(_useState29, 2),\n      hotelname = _useState30[0],\n      sethotelname = _useState30[1];\n\n  var _useState31 = useState(''),\n      _useState32 = _slicedToArray(_useState31, 2),\n      roomNumber = _useState32[0],\n      setroomNumber = _useState32[1];\n\n  var _useState33 = useState(''),\n      _useState34 = _slicedToArray(_useState33, 2),\n      floor = _useState34[0],\n      setfloor = _useState34[1];\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  var GetRoom = function GetRoom() {\n    axios.get(\"https://sunstarapi.herokuapp.com/room/\" + params.roomKey).then(function (room_res) {\n      var room = room_res.data;\n      console.log(room);\n      setroomtype(room.type);\n      setroomNumber(room.roomNumber);\n      setfloor(room.floor);\n\n      if (room.status === \"Success\") {\n        axios.get(\"https://sunstarapi.herokuapp.com/hotel/\" + room.hotelKey).then(function (hotel_res) {\n          var room = hotel_res.data;\n          sethotelname(room.name);\n        }).catch(function (err) {\n          console.log(err);\n        });\n      } else {\n        console.log(room.message);\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  var ReAuthenticate = function ReAuthenticate(values) {\n    var key;\n    return _regeneratorRuntime.async(function ReAuthenticate$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            setload(true);\n            _context8.next = 3;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync('key'));\n\n          case 3:\n            _context8.t0 = _context8.sent;\n\n            if (_context8.t0) {\n              _context8.next = 6;\n              break;\n            }\n\n            _context8.t0 = 'null';\n\n          case 6:\n            key = _context8.t0;\n            axios.post('https://sunstarapi.herokuapp.com/login/'.concat(key), values).then(function _callee5(res) {\n              var results, _key, title, _message, reserve;\n\n              return _regeneratorRuntime.async(function _callee5$(_context7) {\n                while (1) {\n                  switch (_context7.prev = _context7.next) {\n                    case 0:\n                      results = res.data;\n\n                      if (!(results.status == 'Success')) {\n                        _context7.next = 15;\n                        break;\n                      }\n\n                      _context7.next = 4;\n                      return _regeneratorRuntime.awrap(SecureStore.getItemAsync('key'));\n\n                    case 4:\n                      _context7.t0 = _context7.sent;\n\n                      if (_context7.t0) {\n                        _context7.next = 7;\n                        break;\n                      }\n\n                      _context7.t0 = 'null';\n\n                    case 7:\n                      _key = _context7.t0;\n                      title = \"Congratulations! room is reserved.\";\n                      _message = params.rideRequest ? roomtype + \" room has been reserved for your at the \" + hotelname + \"\\nPlease take note of the following booking details:\\n\\n Checkin Date: \" + params.data.checkinDate.substring(0, 16) + \" \\nCheckout Date: \" + params.data.checkoutDate.substring(0, 16) + \"\\nroom number: \" + roomNumber + \" \\nfloor:          \" + floor + \"\\n Reservation Amount R\" + params.data.amount + \" \\n\\n  A ride request has been sent to our drives and a responce wiil be communicated to you once your request hes been accepted.\\n\\n Please do note that canceling a booking wil cost you a sum adding upto 25% from you reservation fee and there will be no refund once the system initiates your checkin process.\" : roomtype + \" room has been reserved for your at the \" + hotelname + \"\\nPlease take note of the following booking details:\\n\\nCheckin Date: \" + params.data.checkinDate + \"  \\nCheckout Date: \" + params.data.checkoutDate + \"\\nroom number: \" + roomNumber + \" \\nfloor:          \" + floor + \"\\nReservation Amount R\" + params.data.amount + \" \\n\\nPlease do note that canceling a booking wil cost you a fee of 25% from you reservation fee and there will be no refund once the system initiates your checkin process.\";\n                      reserve = {\n                        guestId: _key,\n                        hotelId: params.hotelKey,\n                        roomId: params.roomKey,\n                        transportation: params.rideRequest,\n                        checkinDate: params.data.checkinDate,\n                        checkoutDate: params.data.checkoutDate,\n                        adults: params.data.adults,\n                        children: params.data.children,\n                        email: email,\n                        names: names,\n                        message: _message,\n                        title: title\n                      };\n                      console.log(reserve);\n                      axios.post(\"https://sunstarapi.herokuapp.com/roomReservation/\", reserve).then(function _callee4(reservationRes) {\n                        var notification, tripReservation;\n                        return _regeneratorRuntime.async(function _callee4$(_context6) {\n                          while (1) {\n                            switch (_context6.prev = _context6.next) {\n                              case 0:\n                                if (reservationRes.data.status === \"Success\") {\n                                  notification = {\n                                    userId: _key,\n                                    title: title,\n                                    message: _message\n                                  };\n\n                                  if (params.rideRequest === true) {\n                                    tripReservation = {\n                                      userId: _key,\n                                      pickupDate: params.data.checkinDate,\n                                      pickupAddress: params.address,\n                                      status: \"Pending\"\n                                    };\n                                    axios.post(\"https://sunstarapi.herokuapp.com/tripReservation\", tripReservation).then(function _callee2(notificationRes) {\n                                      return _regeneratorRuntime.async(function _callee2$(_context4) {\n                                        while (1) {\n                                          switch (_context4.prev = _context4.next) {\n                                            case 0:\n                                              if (notificationRes.data.status === \"Success\") {\n                                                axios.post(\"https://sunstarapi.herokuapp.com/userNotifications\", notification).then(function _callee(notificationRes) {\n                                                  return _regeneratorRuntime.async(function _callee$(_context3) {\n                                                    while (1) {\n                                                      switch (_context3.prev = _context3.next) {\n                                                        case 0:\n                                                          if (notificationRes.data.status === \"Success\") {\n                                                            axios.post(\"https://app.nativenotify.com/api/indie/notification\", {\n                                                              subID: _key,\n                                                              appId: 910,\n                                                              appToken: 'IBzo5MJJB46vcD3JGfjwRf',\n                                                              title: title,\n                                                              message: _message + \" \\n A comfirmation email will be sent to you shortly\",\n                                                              pushData: {\n                                                                screen: \"notivationscreen\"\n                                                              }\n                                                            }).then(function (res) {\n                                                              navigation.navigate('paidscreen', {\n                                                                data: params.data,\n                                                                room: roomtype,\n                                                                hotelname: hotelname\n                                                              });\n                                                              setload(false);\n                                                            }).catch(function (err) {\n                                                              setload(false);\n                                                              console.log(err + \"===\");\n                                                            });\n                                                          } else {\n                                                            setload(false);\n                                                            console.log(notificationRes.data.details);\n                                                          }\n\n                                                        case 1:\n                                                        case \"end\":\n                                                          return _context3.stop();\n                                                      }\n                                                    }\n                                                  }, null, null, null, Promise);\n                                                }).catch(function (err) {\n                                                  setload(false);\n                                                  console.log(err + \"======\");\n                                                });\n                                              } else {\n                                                setload(false);\n                                                console.log(notificationRes.data.details);\n                                              }\n\n                                            case 1:\n                                            case \"end\":\n                                              return _context4.stop();\n                                          }\n                                        }\n                                      }, null, null, null, Promise);\n                                    }).catch(function (err) {\n                                      setload(false);\n                                      console.log(err + \"======\");\n                                    });\n                                  } else {\n                                    axios.post(\"https://sunstarapi.herokuapp.com/userNotifications\", notification).then(function _callee3(notificationRes) {\n                                      return _regeneratorRuntime.async(function _callee3$(_context5) {\n                                        while (1) {\n                                          switch (_context5.prev = _context5.next) {\n                                            case 0:\n                                              if (notificationRes.data.status === \"Success\") {\n                                                axios.post(\"https://app.nativenotify.com/api/indie/notification\", {\n                                                  subID: _key,\n                                                  appId: 910,\n                                                  appToken: 'IBzo5MJJB46vcD3JGfjwRf',\n                                                  title: title,\n                                                  message: _message + \" \\n A comfirmation email will be sent to you shortly\",\n                                                  pushData: {\n                                                    screen: \"notivationscreen\"\n                                                  }\n                                                }).then(function (res) {\n                                                  navigation.navigate('paidscreen', {\n                                                    data: params.data\n                                                  });\n                                                  setload(false);\n                                                }).catch(function (err) {\n                                                  setload(false);\n                                                  console.log(err + \"===\");\n                                                });\n                                              } else {\n                                                setload(false);\n                                                console.log(notificationRes.data.details);\n                                              }\n\n                                            case 1:\n                                            case \"end\":\n                                              return _context5.stop();\n                                          }\n                                        }\n                                      }, null, null, null, Promise);\n                                    }).catch(function (err) {\n                                      setload(false);\n                                      console.log(err + \"======\");\n                                    });\n                                  }\n                                } else {\n                                  setload(false);\n                                  console.log(reservationRes.data.details + \"======\");\n                                }\n\n                              case 1:\n                              case \"end\":\n                                return _context6.stop();\n                            }\n                          }\n                        }, null, null, null, Promise);\n                      }).catch(function (err) {\n                        setload(false);\n                        console.log(err + \"=>=>\");\n                      });\n                      _context7.next = 18;\n                      break;\n\n                    case 15:\n                      setmessage(results.message);\n                      setinvalid(true);\n                      setload(false);\n\n                    case 18:\n                    case \"end\":\n                      return _context7.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).catch(function (err) {\n              console.log(err + '.');\n            });\n\n          case 8:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var GetUserData = function GetUserData() {\n    var token, key;\n    return _regeneratorRuntime.async(function GetUserData$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync('token'));\n\n          case 2:\n            _context9.t0 = _context9.sent;\n\n            if (_context9.t0) {\n              _context9.next = 5;\n              break;\n            }\n\n            _context9.t0 = 'null';\n\n          case 5:\n            token = _context9.t0;\n            _context9.next = 8;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync('key'));\n\n          case 8:\n            _context9.t1 = _context9.sent;\n\n            if (_context9.t1) {\n              _context9.next = 11;\n              break;\n            }\n\n            _context9.t1 = 'null';\n\n          case 11:\n            key = _context9.t1;\n            axios.get('https://sunstarapi.herokuapp.com/user/'.concat(key)).then(function (results) {\n              var data = results.data;\n              setnames(data.names);\n              setemail(data.email);\n            }).catch(function (err) {\n              console.log(err + '.');\n            });\n\n          case 13:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    GetUserData();\n    GetRoom();\n  }, []);\n  return React.createElement(View, {\n    style: {\n      backgroundColor: theme.background,\n      height: '100%'\n    }\n  }, React.createElement(ActionBar, {\n    textStyle: {\n      color: theme.text,\n      fontSize: Constance.large,\n      fontWeight: 'bold'\n    },\n    onBackPress: function onBackPress() {\n      return navigation.goBack();\n    },\n    backgroundColor: theme.background,\n    text: \"Cards\",\n    iconBack: Platform.OS === 'ios' ? 'chevron-back' : 'arrow-back'\n  }), React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false\n  }, React.createElement(View, {\n    style: {\n      height: 100,\n      backgroundColor: Constance.Red,\n      width: '100%'\n    }\n  }, React.createElement(Paystack, {\n    buttonText: \"Make payment\",\n    showPayButton: true,\n    paystackKey: \"pk_test_fb493b6bf691093f30b0c0056b490fbf41e3d914\",\n    billingEmail: \"paystackwebview@something.com\",\n    amount: 25000.00,\n    billinMobile: \"0637838676\",\n    SafeAreaViewContainer: {\n      marginTop: 5\n    },\n    SafeAreaViewContainerModel: {\n      marginTop: 5\n    },\n    currency: \"ZAR\",\n    onCancel: function onCancel(e) {\n      console.log(e);\n    },\n    onSuccess: function onSuccess(res) {\n      console.log(res);\n    },\n    ref: paystackWebViewRef\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return paystackWebViewRef.current.startTransaction();\n    }\n  }, React.createElement(Text, null, \"Pay Now\")))), React.createElement(Modal, {\n    entry: \"bottom\",\n    backdropPressToClose: true,\n    isOpen: modalComfirmVisible,\n    style: [modal.modalBox],\n    onClosed: function onClosed() {\n      return setModalComfirmVisible(false);\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      password: ''\n    },\n    onSubmit: function onSubmit(values, action) {\n      var data = {\n        password: values.password.trim()\n      };\n      ReAuthenticate(data);\n    },\n    validationSchema: passwordSchema\n  }, function (props) {\n    return React.createElement(View, {\n      style: [modal.content, {\n        backgroundColor: theme.background\n      }]\n    }, React.createElement(View, {\n      style: [modal.modelContainerChild, {\n        marginVertical: 10\n      }]\n    }, React.createElement(Text, {\n      style: modal.textStyle\n    }, \"Enter your recent password\"), React.createElement(Icon, {\n      type: \"ionicon\",\n      name: \"close\",\n      onPress: function onPress() {\n        setModalComfirmVisible(false);\n      }\n    })), React.createElement(InputComponent, {\n      right: React.createElement(TextInput.Icon, {\n        name: visiblepassword ? \"eye\" : \"eye-off\",\n        onPress: function onPress() {\n          return visiblepassword ? setvisiblepassword(false) : setvisiblepassword(true);\n        }\n      }),\n      secured: visiblepassword,\n      left: React.createElement(TextInput.Icon, {\n        name: \"lock\"\n      }),\n      hint: \"Password\",\n      changeText: props.handleChange(\"password\"),\n      value: props.values.password\n    }), props.errors.password ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.password\n    })) : null, React.createElement(ButtonComponent, {\n      mode: \"contained\",\n      btnstyle: {\n        backgroundColor: Constance.Yellow,\n        marginTop: 20,\n        marginBottom: 30\n      },\n      lblstyle: {\n        color: Constance.White,\n        textTransform: 'capitalize'\n      },\n      text: \"Comfirm\",\n      press: props.handleSubmit\n    }));\n  })), React.createElement(Modal, {\n    entry: \"bottom\",\n    backdropPressToClose: true,\n    isOpen: modalNewCard,\n    style: [modal.modalBox],\n    onClosed: function onClosed() {\n      return setmodalNewCard(false);\n    }\n  }, React.createElement(View, {\n    style: [modal.content, {\n      backgroundColor: theme.background\n    }]\n  }, React.createElement(Divider, {\n    style: {\n      borderRadius: 12,\n      height: Constance.largeDivider,\n      width: 100,\n      backgroundColor: theme.borderAlt,\n      alignSelf: 'center'\n    }\n  }), React.createElement(View, {\n    style: modal.modelContainerChild\n  }, React.createElement(Text, {\n    style: modal.textStyle\n  }, \"Add new card\"), React.createElement(Icon, {\n    type: \"ionicon\",\n    name: \"close\",\n    onPress: function onPress() {\n      setmodalNewCard(false);\n    }\n  })), React.createElement(Formik, {\n    initialValues: {\n      names: '',\n      cardnumber: '',\n      expdate: '',\n      cvv: ''\n    },\n    onSubmit: function onSubmit(values, action) {},\n    validationSchema: cardSchema\n  }, function (props) {\n    return React.createElement(View, {\n      style: [{\n        marginTop: 0\n      }]\n    }, React.createElement(View, {\n      style: [style.flexContainer, {\n        width: '100%',\n        alignSelf: 'center',\n        backgroundColor: theme.backgroundAlt,\n        alignItems: 'center',\n        borderRadius: 12,\n        height: 40,\n        marginTop: 10\n      }]\n    }, React.createElement(Text, {\n      style: [{\n        width: '40%',\n        color: theme.text,\n        backgroundColor: theme.borderAlt,\n        borderRadius: 10,\n        height: 35,\n        textAlign: 'center',\n        textAlignVertical: 'center'\n      }]\n    }, \"Name on card\"), React.createElement(View, {\n      style: {\n        height: 40,\n        left: 5,\n        width: '58%'\n      }\n    }, React.createElement(InputComponent, {\n      hint: \"Names on card\",\n      changeText: props.handleChange(\"names\"),\n      value: props.values.names,\n      style: {\n        height: 40,\n        left: 5,\n        width: '100%',\n        backgroundColor: theme.backgroundAlt,\n        borderRadius: 12\n      }\n    }))), props.errors.names || null ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.names\n    })) : null, React.createElement(View, {\n      style: [style.flexContainer, {\n        width: '100%',\n        alignSelf: 'center',\n        backgroundColor: theme.backgroundAlt,\n        alignItems: 'center',\n        borderRadius: 12,\n        height: 40,\n        marginTop: 10\n      }]\n    }, React.createElement(Text, {\n      style: [{\n        width: '40%',\n        color: theme.text,\n        backgroundColor: theme.borderAlt,\n        borderRadius: 10,\n        height: 35,\n        textAlign: 'center',\n        textAlignVertical: 'center',\n        padding: 5\n      }]\n    }, \"Cardnumber\"), React.createElement(View, {\n      style: {\n        height: 40,\n        left: 5,\n        width: '58%'\n      }\n    }, React.createElement(InputComponent, {\n      hint: \"Card number\",\n      changeText: props.handleChange(\"cardnumber\"),\n      value: props.values.cardnumber,\n      style: {\n        height: 40,\n        left: 5,\n        width: '100%',\n        backgroundColor: theme.backgroundAlt,\n        borderRadius: 12\n      }\n    }))), props.errors.cardnumber || null ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.cardnumber\n    })) : null, React.createElement(View, {\n      style: [style.flexContainer, {\n        alignItems: 'center',\n        borderRadius: 12,\n        height: 40,\n        justifyContent: 'space-around',\n        marginTop: 10\n      }]\n    }, React.createElement(View, {\n      style: [{\n        width: '59%',\n        backgroundColor: theme.backgroundAlt,\n        borderRadius: 12,\n        height: 40\n      }]\n    }, React.createElement(View, {\n      style: [style.flexContainer, {\n        width: '100%',\n        alignSelf: 'center',\n        backgroundColor: theme.backgroundAlt,\n        borderRadius: 12,\n        height: 40,\n        alignItems: 'center'\n      }]\n    }, React.createElement(Text, {\n      style: [{\n        color: theme.text,\n        backgroundColor: theme.borderAlt,\n        borderRadius: 10,\n        height: 35,\n        textAlign: 'center',\n        textAlignVertical: 'center',\n        padding: 5\n      }]\n    }, \"EXP date\"), React.createElement(View, {\n      style: {\n        height: 40,\n        left: 5,\n        width: '58%'\n      }\n    }, React.createElement(InputComponent, {\n      hint: \"12/2026\",\n      changeText: props.handleChange(\"expdate\"),\n      value: props.values.expdate.length === 2 ? props.values.expdate + \"/\" : props.values.expdate,\n      style: {\n        height: 40,\n        left: 5,\n        width: '100%',\n        backgroundColor: theme.backgroundAlt,\n        borderRadius: 12\n      }\n    }))), props.errors.expdate || null ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.expdate\n    })) : null), React.createElement(View, {\n      style: [{\n        width: '39%',\n        backgroundColor: theme.backgroundAlt,\n        borderRadius: 12,\n        height: 40\n      }]\n    }, React.createElement(View, {\n      style: [style.flexContainer, {\n        width: '100%',\n        alignSelf: 'center',\n        backgroundColor: theme.backgroundAlt,\n        borderRadius: 12,\n        height: 40,\n        alignItems: 'center'\n      }]\n    }, React.createElement(Text, {\n      style: [{\n        color: theme.text,\n        backgroundColor: theme.borderAlt,\n        borderRadius: 10,\n        height: 35,\n        textAlign: 'center',\n        textAlignVertical: 'center',\n        padding: 5\n      }]\n    }, \"CVV\"), React.createElement(View, {\n      style: {\n        height: 40,\n        left: 5,\n        width: '58%'\n      }\n    }, React.createElement(InputComponent, {\n      hint: \"1234\",\n      changeText: props.handleChange(\"cvv\"),\n      value: props.values.cvv,\n      style: {\n        height: 40,\n        left: 5,\n        width: '100%',\n        backgroundColor: theme.backgroundAlt,\n        borderRadius: 12\n      }\n    }))), props.errors.cvv || null ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.cvv\n    })) : null)), React.createElement(ButtonComponent, {\n      press: function press() {},\n      lblstyle: {\n        color: theme.text\n      },\n      mode: '',\n      text: 'Update',\n      btnstyle: {\n        width: '100%',\n        marginTop: 40,\n        backgroundColor: Constance.Blue,\n        borderColor: theme.borderAlt,\n        borderWidth: 1,\n        borderRadius: 7,\n        height: 40,\n        alignItems: 'center'\n      }\n    }));\n  }))), React.createElement(Modal, {\n    entry: \"bottom\",\n    backdropPressToClose: true,\n    isOpen: modalUpdateCard,\n    style: [modal.modalBox],\n    onClosed: function onClosed() {\n      return setmodalUpdateCard(false);\n    }\n  }, React.createElement(View, {\n    style: [modal.content, {\n      backgroundColor: theme.background\n    }]\n  }, React.createElement(Divider, {\n    style: {\n      borderRadius: 12,\n      height: Constance.largeDivider,\n      width: 100,\n      backgroundColor: theme.borderAlt,\n      alignSelf: 'center'\n    }\n  }), React.createElement(View, {\n    style: modal.modelContainerChild\n  }, React.createElement(Text, {\n    style: modal.textStyle\n  }, \"Update card\"), React.createElement(Icon, {\n    type: \"ionicon\",\n    name: \"close\",\n    onPress: function onPress() {\n      setmodalUpdateCard(false);\n    }\n  })), React.createElement(Formik, {\n    initialValues: {\n      names: '',\n      cardnumber: '',\n      expdate: '',\n      cvv: ''\n    },\n    onSubmit: function onSubmit(values, action) {},\n    validationSchema: cardSchema\n  }, function (props) {\n    return React.createElement(View, {\n      style: [{\n        marginTop: 0\n      }]\n    }, React.createElement(View, {\n      style: [style.flexContainer, {\n        width: '100%',\n        alignSelf: 'center',\n        backgroundColor: theme.backgroundAlt,\n        alignItems: 'center',\n        borderRadius: 12,\n        height: 40,\n        marginTop: 10\n      }]\n    }, React.createElement(Text, {\n      style: [{\n        width: '40%',\n        color: theme.text,\n        backgroundColor: theme.borderAlt,\n        borderRadius: 10,\n        height: 35,\n        textAlign: 'center',\n        textAlignVertical: 'center'\n      }]\n    }, \"Name on card\"), React.createElement(View, {\n      style: {\n        height: 40,\n        left: 5,\n        width: '58%'\n      }\n    }, React.createElement(InputComponent, {\n      hint: \"Names on card\",\n      changeText: props.handleChange(\"names\"),\n      value: props.values.names,\n      style: {\n        height: 40,\n        left: 5,\n        width: '100%',\n        backgroundColor: theme.backgroundAlt,\n        borderRadius: 12\n      }\n    }))), props.errors.names || null ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.names\n    })) : null, React.createElement(View, {\n      style: [style.flexContainer, {\n        width: '100%',\n        alignSelf: 'center',\n        backgroundColor: theme.backgroundAlt,\n        alignItems: 'center',\n        borderRadius: 12,\n        height: 40,\n        marginTop: 10\n      }]\n    }, React.createElement(Text, {\n      style: [{\n        width: '40%',\n        color: theme.text,\n        backgroundColor: theme.borderAlt,\n        borderRadius: 10,\n        height: 35,\n        textAlign: 'center',\n        textAlignVertical: 'center',\n        padding: 5\n      }]\n    }, \"Cardnumber\"), React.createElement(View, {\n      style: {\n        height: 40,\n        left: 5,\n        width: '58%'\n      }\n    }, React.createElement(InputComponent, {\n      hint: \"Card number\",\n      changeText: props.handleChange(\"cardnumber\"),\n      value: props.values.cardnumber,\n      style: {\n        height: 40,\n        left: 5,\n        width: '100%',\n        backgroundColor: theme.backgroundAlt,\n        borderRadius: 12\n      }\n    }))), props.errors.cardnumber || null ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.cardnumber\n    })) : null, React.createElement(View, {\n      style: [style.flexContainer, {\n        alignItems: 'center',\n        borderRadius: 12,\n        height: 40,\n        justifyContent: 'space-around',\n        marginTop: 10\n      }]\n    }, React.createElement(View, {\n      style: [{\n        width: '59%',\n        backgroundColor: theme.backgroundAlt,\n        borderRadius: 12,\n        height: 40\n      }]\n    }, React.createElement(View, {\n      style: [style.flexContainer, {\n        width: '100%',\n        alignSelf: 'center',\n        backgroundColor: theme.backgroundAlt,\n        borderRadius: 12,\n        height: 40,\n        alignItems: 'center'\n      }]\n    }, React.createElement(Text, {\n      style: [{\n        color: theme.text,\n        backgroundColor: theme.borderAlt,\n        borderRadius: 10,\n        height: 35,\n        textAlign: 'center',\n        textAlignVertical: 'center',\n        padding: 5\n      }]\n    }, \"EXP date\"), React.createElement(View, {\n      style: {\n        height: 40,\n        left: 5,\n        width: '58%'\n      }\n    }, React.createElement(InputComponent, {\n      hint: \"12/2026\",\n      changeText: props.handleChange(\"expdate\"),\n      value: props.values.expdate.length === 2 ? props.values.expdate + \"/\" : props.values.expdate,\n      style: {\n        height: 40,\n        left: 5,\n        width: '100%',\n        backgroundColor: theme.backgroundAlt,\n        borderRadius: 12\n      }\n    }))), props.errors.expdate || null ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.expdate\n    })) : null), React.createElement(View, {\n      style: [{\n        width: '39%',\n        backgroundColor: theme.backgroundAlt,\n        borderRadius: 12,\n        height: 40\n      }]\n    }, React.createElement(View, {\n      style: [style.flexContainer, {\n        width: '100%',\n        alignSelf: 'center',\n        backgroundColor: theme.backgroundAlt,\n        borderRadius: 12,\n        height: 40,\n        alignItems: 'center'\n      }]\n    }, React.createElement(Text, {\n      style: [{\n        color: theme.text,\n        backgroundColor: theme.borderAlt,\n        borderRadius: 10,\n        height: 35,\n        textAlign: 'center',\n        textAlignVertical: 'center',\n        padding: 5\n      }]\n    }, \"CVV\"), React.createElement(View, {\n      style: {\n        height: 40,\n        left: 5,\n        width: '58%'\n      }\n    }, React.createElement(InputComponent, {\n      hint: \"1234\",\n      changeText: props.handleChange(\"cvv\"),\n      value: props.values.cvv,\n      style: {\n        height: 40,\n        left: 5,\n        width: '100%',\n        backgroundColor: theme.backgroundAlt,\n        borderRadius: 12\n      }\n    }))), props.errors.cvv || null ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.cvv\n    })) : null)), React.createElement(ButtonComponent, {\n      press: function press() {},\n      lblstyle: {\n        color: theme.text\n      },\n      mode: '',\n      text: 'Update',\n      btnstyle: {\n        width: '100%',\n        marginTop: 40,\n        backgroundColor: Constance.Blue,\n        borderColor: theme.borderAlt,\n        borderWidth: 1,\n        borderRadius: 7,\n        height: 40,\n        alignItems: 'center'\n      }\n    }));\n  }))), load ? React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%',\n      position: 'absolute',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Progress, null)) : null);\n};\n\nexport default Payment;","map":{"version":3,"sources":["D:/Development/Mobile Development/React native/Hotel/SunStar/SunStar/userapp/source/screens/payment.tsx"],"names":["React","useContext","useEffect","useRef","useState","ActionBar","style","Constance","Divider","Icon","Text","InputComponent","ThemeContext","ButtonComponent","Modal","modal","Formik","yup","TextComponent","Animatable","TextInput","useRoute","Constants","Notifications","axios","SecureStore","Progress","Paystack","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","registerForPushNotificationsAsync","isDevice","getPermissionsAsync","existingStatus","status","finalStatus","requestPermissionsAsync","getExpoPushTokenAsync","token","data","console","log","Platform","OS","setNotificationChannelAsync","name","importance","AndroidImportance","MAX","vibrationPattern","lightColor","cardSchema","object","names","string","required","min","matches","cardnumber","length","expdate","cvv","passwordSchema","password","Payment","navigation","cards","id","params","paystackWebViewRef","payment","modalComfirmVisible","setModalComfirmVisible","visiblepassword","setvisiblepassword","oldPassword","setoldPassword","action","setaction","modalNewCard","setmodalNewCard","modalUpdateCard","setmodalUpdateCard","current","setcurrent","invalid","setinvalid","load","setload","message","setmessage","modalPasswordVisible","setModalPasswordVisible","setnames","email","setemail","roomtype","setroomtype","hotelname","sethotelname","roomNumber","setroomNumber","floor","setfloor","theme","GetRoom","get","roomKey","then","room_res","room","type","hotelKey","hotel_res","catch","err","ReAuthenticate","values","getItemAsync","key","post","concat","res","results","title","rideRequest","checkinDate","substring","checkoutDate","amount","reserve","guestId","hotelId","roomId","transportation","adults","children","reservationRes","notification","userId","tripReservation","pickupDate","pickupAddress","address","notificationRes","subID","appId","appToken","pushData","screen","navigate","details","GetUserData","backgroundColor","background","height","color","text","fontSize","large","fontWeight","goBack","Red","width","marginTop","e","startTransaction","modalBox","trim","props","content","modelContainerChild","marginVertical","textStyle","handleChange","errors","Yellow","marginBottom","White","textTransform","handleSubmit","borderRadius","largeDivider","borderAlt","alignSelf","flexContainer","backgroundAlt","alignItems","textAlign","textAlignVertical","left","padding","justifyContent","Blue","borderColor","borderWidth","position"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport { Dimensions, Platform, ScrollView, TouchableOpacity, View } from 'react-native'\r\nimport PagerView, { PagerViewOnPageSelectedEvent } from 'react-native-pager-view'\r\nimport ActionBar from '../components/actionbar'\r\nimport CreditCardComponent from '../components/creditcard'\r\nimport style from '../styles/screens/card'\r\nimport Constance from '../theme/const'\r\nimport {\r\n    PagerTabIndicator,\r\n    IndicatorViewPager,\r\n    PagerTitleIndicator,\r\n    PagerDotIndicator,\r\n} from '@shankarmorwal/rn-viewpager';\r\nimport { Divider, Icon, Text } from 'react-native-elements'\r\nimport InputComponent from '../components/input'\r\nimport { ThemeContext } from '../theme/themeProvider'\r\nimport ButtonComponent from '../components/button'\r\nimport Modal from \"react-native-modalbox\";\r\nimport modal from '../styles/components/modal';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport TextComponent from '../components/text';\r\nimport * as Animatable from 'react-native-animatable';\r\nimport { TextInput } from 'react-native-paper';\r\nimport { useRoute } from \"@react-navigation/native\";\r\nimport Constants from 'expo-constants';\r\nimport * as Notifications from 'expo-notifications';\r\nimport axios from 'axios';\r\nimport * as SecureStore from 'expo-secure-store';\r\nimport Progress from '../components/indicator';\r\nimport { Paystack, paystackProps } from 'react-native-paystack-webview';\r\n\r\nNotifications.setNotificationHandler({ handleNotification: async () => ({ shouldShowAlert: true, shouldPlaySound: false, shouldSetBadge: false, }) });\r\nasync function registerForPushNotificationsAsync() { let token; if (Constants.isDevice) { const { status: existingStatus } = await Notifications.getPermissionsAsync(); let finalStatus = existingStatus; if (existingStatus !== 'granted') { const { status } = await Notifications.requestPermissionsAsync(); finalStatus = status; } token = (await Notifications.getExpoPushTokenAsync()).data; } else { console.log('Must use physical device for Push Notifications'); } if (Platform.OS === 'android') { Notifications.setNotificationChannelAsync('default', { name: 'default', importance: Notifications.AndroidImportance.MAX, vibrationPattern: [0, 250, 250, 250], lightColor: '#FF231F7C', }); } return token; }\r\n\r\nconst cardSchema = yup.object({\r\n    names: yup.string().required('Required').min(3)\r\n        .matches(/^(?![\\s.]+$)[a-zA-Z\\s.]*$/, \"Only characters are allowed.\"),\r\n    cardnumber: yup.string().required('Required').length(16).matches(/^(?:(?<visa>4[0-9]{12}(?:[0-9]{3})?)|(?<mastercard>5[1-5][0-9]{14})|(?<discover>6(?:011|5[0-9]{2})[0-9]{12})|(?<amex>3[47][0-9]{13})|(?<diners>3(?:0[0-5]|[68][0-9])[0-9]{11})|(?<jcb>(?:2131|1800|35[0-9]{3})[0-9]{11}))$/, \"Invalid card number\"),\r\n    expdate: yup.string().required('Required').matches(/^(0[1-9]|1[0-2])\\/?([0-9]{4}|[0-9]{2})$/, \"invalid date\"),\r\n    cvv: yup.string().required('Required').length(4).matches(/[0-9]{4}/, \"Invalid pin\")\r\n});\r\n\r\nconst passwordSchema = yup.object({\r\n    password: yup.string().required(\"Required\").min(8).matches(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/, \"Invalid password\"),\r\n})\r\n\r\nconst Payment = ({ navigation }) => {\r\n\r\n    const cards = [\r\n        {\r\n            id: 1,\r\n            name: \"Sebola AM\",\r\n            cardnumber: \"1546 6546 5454 7365\",\r\n            expdate: '12/24',\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Sebola AM\",\r\n            cardnumber: \"1546 6675 6577 5545\",\r\n            expdate: '07/26',\r\n        },\r\n        {\r\n            id: 1,\r\n            name: \"Sebola AM\",\r\n            cardnumber: \"1546 6546 5454 4115\",\r\n            expdate: '08/24',\r\n        },\r\n        {\r\n            id: 1,\r\n            name: \"Sebola AM\",\r\n            cardnumber: \"1546 6546 4585 4157\",\r\n            expdate: '05/28',\r\n        },\r\n\r\n    ];\r\n\r\n    const params = useRoute().params;\r\n\r\n    const paystackWebViewRef = useRef<paystackProps.PayStackRef>();\r\n    const payment = params.payment;\r\n    const [modalComfirmVisible, setModalComfirmVisible] = useState(false);\r\n    const [visiblepassword, setvisiblepassword] = useState(true);\r\n    const [oldPassword, setoldPassword] = useState('');\r\n    const [action, setaction] = useState('');\r\n\r\n    const [modalNewCard, setmodalNewCard] = useState(false);\r\n    const [modalUpdateCard, setmodalUpdateCard] = useState(false);\r\n    const [current, setcurrent] = useState<number>(0);\r\n    const [invalid, setinvalid] = useState(false);\r\n    const [load, setload] = useState(false);\r\n    const [message, setmessage] = useState('');\r\n    const [modalPasswordVisible, setModalPasswordVisible] = useState(false);\r\n    const [names, setnames] = useState('');\r\n    const [email, setemail] = useState('');\r\n\r\n    const [roomtype, setroomtype] = useState('');\r\n    const [hotelname, sethotelname] = useState('');\r\n    const [roomNumber, setroomNumber] = useState('');\r\n    const [floor, setfloor] = useState('');\r\n\r\n\r\n    const { theme } = useContext(ThemeContext);\r\n\r\n    const GetRoom = () => {\r\n\r\n        axios.get(`https://sunstarapi.herokuapp.com/room/${params.roomKey}`).then((room_res) => {\r\n            let room = room_res.data;\r\n\r\n            console.log(room);\r\n            setroomtype(room.type);\r\n            setroomNumber(room.roomNumber);\r\n            setfloor(room.floor);\r\n\r\n            if (room.status === \"Success\") {\r\n                axios.get(`https://sunstarapi.herokuapp.com/hotel/${room.hotelKey}`).then((hotel_res) => {\r\n                    let room = hotel_res.data;\r\n                    sethotelname(room.name);\r\n\r\n                })\r\n                    .catch((err) => {\r\n                        console.log(err);\r\n                    })\r\n            } else {\r\n                console.log(room.message);\r\n\r\n            }\r\n\r\n        })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const ReAuthenticate = async (values: any) => {\r\n\r\n        setload(true);\r\n        let key = await SecureStore.getItemAsync('key') || 'null';\r\n\r\n        axios.post('https://sunstarapi.herokuapp.com/login/'.concat(key), values).then(async (res) => {\r\n\r\n            const results = res.data;\r\n\r\n            if (results.status == 'Success') {\r\n\r\n                let key = await SecureStore.getItemAsync('key') || 'null';\r\n                let title = \"Congratulations! room is reserved.\";\r\n                let message = params.rideRequest ? `${roomtype} room has been reserved for your at the ${hotelname}\\nPlease take note of the following booking details:\\n\\n Checkin Date: ${params.data.checkinDate.substring(0, 16)} \\nCheckout Date: ${params.data.checkoutDate.substring(0, 16)}\\nroom number: ${roomNumber} \\nfloor:          ${floor}\\n Reservation Amount R${params.data.amount} \\n\\n  A ride request has been sent to our drives and a responce wiil be communicated to you once your request hes been accepted.\\n\\n Please do note that canceling a booking wil cost you a sum adding upto 25% from you reservation fee and there will be no refund once the system initiates your checkin process.`\r\n                    :\r\n                    `${roomtype} room has been reserved for your at the ${hotelname}\\nPlease take note of the following booking details:\\n\\nCheckin Date: ${params.data.checkinDate}  \\nCheckout Date: ${params.data.checkoutDate}\\nroom number: ${roomNumber} \\nfloor:          ${floor}\\nReservation Amount R${params.data.amount} \\n\\nPlease do note that canceling a booking wil cost you a fee of 25% from you reservation fee and there will be no refund once the system initiates your checkin process.`;\r\n\r\n\r\n                let reserve = {\r\n                    guestId: key,\r\n                    hotelId: params.hotelKey,\r\n                    roomId: params.roomKey,\r\n                    transportation: params.rideRequest,\r\n                    checkinDate: params.data.checkinDate,\r\n                    checkoutDate: params.data.checkoutDate,\r\n                    adults: params.data.adults,\r\n                    children: params.data.children,\r\n                    email: email,\r\n                    names: names,\r\n                    message: message,\r\n                    title: title\r\n                }\r\n\r\n                console.log(reserve);\r\n\r\n                axios.post(`https://sunstarapi.herokuapp.com/roomReservation/`, reserve).then(async (reservationRes) => {\r\n                    if (reservationRes.data.status === \"Success\") {\r\n\r\n\r\n                        let notification = {\r\n                            userId: key,\r\n                            title: title,\r\n                            message: message\r\n                        }\r\n\r\n                        if (params.rideRequest === true) {\r\n\r\n                            let tripReservation = {\r\n                                userId: key,\r\n                                pickupDate: params.data.checkinDate,\r\n                                pickupAddress: params.address,\r\n                                status: \"Pending\",\r\n                            }\r\n\r\n                            axios.post(`https://sunstarapi.herokuapp.com/tripReservation`, tripReservation).then(async (notificationRes) => {\r\n                                if (notificationRes.data.status === \"Success\") {\r\n\r\n                                    axios.post(`https://sunstarapi.herokuapp.com/userNotifications`, notification).then(async (notificationRes) => {\r\n                                        if (notificationRes.data.status === \"Success\") {\r\n\r\n                                            axios.post(`https://app.nativenotify.com/api/indie/notification`, {\r\n                                                subID: key,\r\n                                                appId: 910,\r\n                                                appToken: 'IBzo5MJJB46vcD3JGfjwRf',\r\n                                                title: title,\r\n                                                message: `${message} \\n A comfirmation email will be sent to you shortly`,\r\n                                                pushData: { screen: \"notivationscreen\" }\r\n                                            }).then((res) => {\r\n\r\n\r\n                                                navigation.navigate('paidscreen', { data: params.data, room: roomtype, hotelname: hotelname });\r\n                                                setload(false);\r\n                                            }).catch((err) => {\r\n\r\n                                                setload(false);\r\n                                                console.log(err + \"===\");\r\n\r\n                                            })\r\n\r\n                                        } else {\r\n\r\n                                            setload(false);\r\n                                            console.log(notificationRes.data.details);\r\n                                        }\r\n                                    }).catch((err) => {\r\n\r\n                                        setload(false);\r\n                                        console.log(err + \"======\");\r\n                                    })\r\n\r\n                                } else {\r\n\r\n                                    setload(false);\r\n                                    console.log(notificationRes.data.details);\r\n                                }\r\n                            }).catch((err) => {\r\n\r\n                                setload(false);\r\n                                console.log(err + \"======\");\r\n                            })\r\n                        } else {\r\n                            axios.post(`https://sunstarapi.herokuapp.com/userNotifications`, notification).then(async (notificationRes) => {\r\n                                if (notificationRes.data.status === \"Success\") {\r\n\r\n                                    axios.post(`https://app.nativenotify.com/api/indie/notification`, {\r\n                                        subID: key,\r\n                                        appId: 910,\r\n                                        appToken: 'IBzo5MJJB46vcD3JGfjwRf',\r\n                                        title: title,\r\n                                        message: `${message} \\n A comfirmation email will be sent to you shortly`,\r\n                                        pushData: { screen: \"notivationscreen\" }\r\n                                    }).then((res) => {\r\n\r\n\r\n                                        navigation.navigate('paidscreen', { data: params.data });\r\n                                        setload(false);\r\n                                    }).catch((err) => {\r\n\r\n                                        setload(false);\r\n                                        console.log(err + \"===\");\r\n\r\n                                    })\r\n\r\n                                } else {\r\n\r\n                                    setload(false);\r\n                                    console.log(notificationRes.data.details);\r\n                                }\r\n                            }).catch((err) => {\r\n\r\n                                setload(false);\r\n                                console.log(err + \"======\");\r\n                            })\r\n                        }\r\n\r\n                    } else {\r\n                        setload(false);\r\n                        console.log(reservationRes.data.details + \"======\");\r\n                    }\r\n                }).catch((err) => {\r\n                    setload(false);\r\n                    console.log(err + \"=>=>\");\r\n                })\r\n\r\n\r\n            } else {\r\n                setmessage(results.message);\r\n                setinvalid(true);\r\n                setload(false);\r\n            }\r\n\r\n        }).catch((err) => {\r\n\r\n            console.log(err + '.');\r\n\r\n        });\r\n\r\n    }\r\n\r\n    const GetUserData = async () => {\r\n        let token = await SecureStore.getItemAsync('token') || 'null';\r\n        let key = await SecureStore.getItemAsync('key') || 'null';\r\n\r\n\r\n        axios.get('https://sunstarapi.herokuapp.com/user/'.concat(key)).then((results) => {\r\n\r\n            let data = results.data;\r\n\r\n            setnames(data.names);\r\n            setemail(data.email);\r\n\r\n        }).catch((err) => {\r\n\r\n            console.log(err + '.');\r\n\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        GetUserData();\r\n        GetRoom();\r\n    }, [])\r\n\r\n    return (\r\n        <View style={{ backgroundColor: theme.background, height: '100%' }} >\r\n            <ActionBar textStyle={{ color: theme.text, fontSize: Constance.large, fontWeight: 'bold' }} onBackPress={() => navigation.goBack()} backgroundColor={theme.background} text='Cards' iconBack={Platform.OS === 'ios' ? 'chevron-back' : 'arrow-back'} />\r\n\r\n            <ScrollView showsVerticalScrollIndicator={false}>\r\n                <View style={{ height: 100, backgroundColor: Constance.Red, width: '100%' }}>\r\n                    <Paystack\r\n                        buttonText={\"Make payment\"}\r\n                        showPayButton={true}\r\n                        paystackKey=\"pk_test_fb493b6bf691093f30b0c0056b490fbf41e3d914\"\r\n                        billingEmail=\"paystackwebview@something.com\"\r\n                        amount={25000.00}\r\n                        billinMobile=\"0637838676\"\r\n                        SafeAreaViewContainer={{ marginTop: 5 }}\r\n                        SafeAreaViewContainerModel={{ marginTop: 5 }}\r\n                        currency={\"ZAR\"}\r\n                        onCancel={(e) => {\r\n                            console.log(e);\r\n\r\n                        }}\r\n                        onSuccess={(res) => {\r\n                            console.log(res);\r\n\r\n                        }}\r\n                        ref={paystackWebViewRef}\r\n                    />\r\n\r\n                    <TouchableOpacity onPress={() => paystackWebViewRef.current.startTransaction()}>\r\n                        <Text>Pay Now</Text>\r\n                    </TouchableOpacity>\r\n\r\n                </View>\r\n            </ScrollView>\r\n\r\n\r\n            {/* bottom sheet models */}\r\n            {/* comfirm password model */}\r\n            <Modal\r\n                entry=\"bottom\"\r\n                backdropPressToClose={true}\r\n                isOpen={modalComfirmVisible}\r\n                style={[modal.modalBox]}\r\n                onClosed={() => setModalComfirmVisible(false)}\r\n            >\r\n                <Formik\r\n                    initialValues={{ password: '' }}\r\n                    onSubmit={(values, action) => {\r\n                        let data = {\r\n                            password: values.password.trim()\r\n                        };\r\n                        ReAuthenticate(data);\r\n\r\n\r\n                    }}\r\n                    validationSchema={passwordSchema}\r\n                >\r\n                    {(props) => (\r\n                        <View style={[modal.content, { backgroundColor: theme.background }]}>\r\n                            <View style={[modal.modelContainerChild, { marginVertical: 10 }]}>\r\n                                <Text style={modal.textStyle}>Enter your recent password</Text>\r\n                                <Icon type=\"ionicon\" name=\"close\" onPress={() => { setModalComfirmVisible(false) }} />\r\n                            </View>\r\n\r\n\r\n                            <InputComponent right={<TextInput.Icon name={visiblepassword ? \"eye\" : \"eye-off\"} onPress={() => visiblepassword ? setvisiblepassword(false) : setvisiblepassword(true)} />} secured={visiblepassword} left={<TextInput.Icon name=\"lock\" />} hint='Password'\r\n                                changeText={props.handleChange(\"password\")}\r\n                                value={props.values.password} />\r\n                            {props.errors.password ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red }} text={props.errors.password} /></Animatable.View> : null}\r\n\r\n                            <ButtonComponent mode='contained' btnstyle={{ backgroundColor: Constance.Yellow, marginTop: 20, marginBottom: 30 }} lblstyle={{ color: Constance.White, textTransform: 'capitalize' }} text='Comfirm' press={props.handleSubmit} />\r\n\r\n\r\n                        </View>\r\n                    )}\r\n                </Formik>\r\n            </Modal>\r\n\r\n            {/* new card model  */}\r\n            <Modal\r\n                entry=\"bottom\"\r\n                backdropPressToClose={true}\r\n                isOpen={modalNewCard}\r\n                style={[modal.modalBox]}\r\n                onClosed={() => setmodalNewCard(false)}\r\n            >\r\n                <View style={[modal.content, { backgroundColor: theme.background }]}>\r\n\r\n                    <Divider style={{ borderRadius: 12, height: Constance.largeDivider, width: 100, backgroundColor: theme.borderAlt, alignSelf: 'center' }} />\r\n                    <View style={modal.modelContainerChild}>\r\n                        <Text style={modal.textStyle}>Add new card</Text>\r\n                        <Icon type=\"ionicon\" name=\"close\" onPress={() => { setmodalNewCard(false) }} />\r\n                    </View>\r\n\r\n                    <Formik initialValues={{ names: '', cardnumber: '', expdate: '', cvv: '' }}\r\n                        onSubmit={(values, action) => {\r\n\r\n                        }}\r\n                        validationSchema={cardSchema}\r\n                    >\r\n                        {(props) => (\r\n                            <View style={[{ marginTop: 0 }]}>\r\n                                <View style={[style.flexContainer, { width: '100%', alignSelf: 'center', backgroundColor: theme.backgroundAlt, alignItems: 'center', borderRadius: 12, height: 40, marginTop: 10 }]}>\r\n                                    <Text style={[{ width: '40%', color: theme.text, backgroundColor: theme.borderAlt, borderRadius: 10, height: 35, textAlign: 'center', textAlignVertical: 'center' }]}>Name on card</Text>\r\n                                    <View style={{ height: 40, left: 5, width: '58%' }}>\r\n                                        <InputComponent hint='Names on card' changeText={props.handleChange(\"names\")}\r\n                                            value={props.values.names} style={{ height: 40, left: 5, width: '100%', backgroundColor: theme.backgroundAlt, borderRadius: 12 }} />\r\n\r\n                                    </View>\r\n                                </View>\r\n                                {props.errors.names || null ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red }} text={props.errors.names} /></Animatable.View> : null}\r\n\r\n                                <View style={[style.flexContainer, { width: '100%', alignSelf: 'center', backgroundColor: theme.backgroundAlt, alignItems: 'center', borderRadius: 12, height: 40, marginTop: 10 }]}>\r\n                                    <Text style={[{ width: '40%', color: theme.text, backgroundColor: theme.borderAlt, borderRadius: 10, height: 35, textAlign: 'center', textAlignVertical: 'center', padding: 5 }]}>Cardnumber</Text>\r\n                                    <View style={{ height: 40, left: 5, width: '58%' }}>\r\n                                        <InputComponent hint='Card number' changeText={props.handleChange(\"cardnumber\")}\r\n                                            value={props.values.cardnumber} style={{ height: 40, left: 5, width: '100%', backgroundColor: theme.backgroundAlt, borderRadius: 12 }} />\r\n                                    </View>\r\n                                </View>\r\n                                {props.errors.cardnumber || null ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red }} text={props.errors.cardnumber} /></Animatable.View> : null}\r\n\r\n                                <View style={[style.flexContainer, { alignItems: 'center', borderRadius: 12, height: 40, justifyContent: 'space-around', marginTop: 10 }]}>\r\n\r\n                                    <View style={[{ width: '59%', backgroundColor: theme.backgroundAlt, borderRadius: 12, height: 40 }]}>\r\n                                        <View style={[style.flexContainer, { width: '100%', alignSelf: 'center', backgroundColor: theme.backgroundAlt, borderRadius: 12, height: 40, alignItems: 'center' }]}>\r\n                                            <Text style={[{ color: theme.text, backgroundColor: theme.borderAlt, borderRadius: 10, height: 35, textAlign: 'center', textAlignVertical: 'center', padding: 5 }]}>EXP date</Text>\r\n                                            <View style={{ height: 40, left: 5, width: '58%' }}>\r\n                                                <InputComponent hint='12/2026' changeText={props.handleChange(\"expdate\")}\r\n                                                    value={props.values.expdate.length === 2 ? props.values.expdate + \"/\" : props.values.expdate} style={{ height: 40, left: 5, width: '100%', backgroundColor: theme.backgroundAlt, borderRadius: 12 }} />\r\n\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                        {props.errors.expdate || null ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red }} text={props.errors.expdate} /></Animatable.View> : null}\r\n\r\n                                    </View>\r\n\r\n                                    <View style={[{ width: '39%', backgroundColor: theme.backgroundAlt, borderRadius: 12, height: 40 }]}>\r\n                                        <View style={[style.flexContainer, { width: '100%', alignSelf: 'center', backgroundColor: theme.backgroundAlt, borderRadius: 12, height: 40, alignItems: 'center' }]}>\r\n                                            <Text style={[{ color: theme.text, backgroundColor: theme.borderAlt, borderRadius: 10, height: 35, textAlign: 'center', textAlignVertical: 'center', padding: 5 }]}>CVV</Text>\r\n\r\n                                            <View style={{ height: 40, left: 5, width: '58%' }}>\r\n                                                <InputComponent hint='1234' changeText={props.handleChange(\"cvv\")}\r\n                                                    value={props.values.cvv} style={{ height: 40, left: 5, width: '100%', backgroundColor: theme.backgroundAlt, borderRadius: 12 }} />\r\n\r\n                                            </View>\r\n                                        </View>\r\n                                        {props.errors.cvv || null ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red }} text={props.errors.cvv} /></Animatable.View> : null}\r\n\r\n                                    </View>\r\n\r\n                                </View>\r\n\r\n                                <ButtonComponent press={() => { }} lblstyle={{ color: theme.text }} mode={''} text={'Update'} btnstyle={{ width: '100%', marginTop: 40, backgroundColor: Constance.Blue, borderColor: theme.borderAlt, borderWidth: 1, borderRadius: 7, height: 40, alignItems: 'center' }} />\r\n\r\n                            </View>\r\n                        )}\r\n                    </Formik>\r\n\r\n                </View>\r\n            </Modal>\r\n\r\n            {/* Update card model  */}\r\n            <Modal\r\n                entry=\"bottom\"\r\n                backdropPressToClose={true}\r\n                isOpen={modalUpdateCard}\r\n                style={[modal.modalBox]}\r\n                onClosed={() => setmodalUpdateCard(false)}\r\n            >\r\n                <View style={[modal.content, { backgroundColor: theme.background }]}>\r\n\r\n                    <Divider style={{ borderRadius: 12, height: Constance.largeDivider, width: 100, backgroundColor: theme.borderAlt, alignSelf: 'center' }} />\r\n                    <View style={modal.modelContainerChild}>\r\n                        <Text style={modal.textStyle}>Update card</Text>\r\n                        <Icon type=\"ionicon\" name=\"close\" onPress={() => { setmodalUpdateCard(false) }} />\r\n                    </View>\r\n\r\n                    <Formik initialValues={{ names: '', cardnumber: '', expdate: '', cvv: '' }}\r\n                        onSubmit={(values, action) => {\r\n\r\n                        }}\r\n                        validationSchema={cardSchema}\r\n                    >\r\n                        {(props) => (\r\n                            <View style={[{ marginTop: 0 }]}>\r\n                                <View style={[style.flexContainer, { width: '100%', alignSelf: 'center', backgroundColor: theme.backgroundAlt, alignItems: 'center', borderRadius: 12, height: 40, marginTop: 10 }]}>\r\n                                    <Text style={[{ width: '40%', color: theme.text, backgroundColor: theme.borderAlt, borderRadius: 10, height: 35, textAlign: 'center', textAlignVertical: 'center' }]}>Name on card</Text>\r\n                                    <View style={{ height: 40, left: 5, width: '58%' }}>\r\n                                        <InputComponent hint='Names on card' changeText={props.handleChange(\"names\")}\r\n                                            value={props.values.names} style={{ height: 40, left: 5, width: '100%', backgroundColor: theme.backgroundAlt, borderRadius: 12 }} />\r\n\r\n                                    </View>\r\n                                </View>\r\n                                {props.errors.names || null ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red }} text={props.errors.names} /></Animatable.View> : null}\r\n\r\n                                <View style={[style.flexContainer, { width: '100%', alignSelf: 'center', backgroundColor: theme.backgroundAlt, alignItems: 'center', borderRadius: 12, height: 40, marginTop: 10 }]}>\r\n                                    <Text style={[{ width: '40%', color: theme.text, backgroundColor: theme.borderAlt, borderRadius: 10, height: 35, textAlign: 'center', textAlignVertical: 'center', padding: 5 }]}>Cardnumber</Text>\r\n                                    <View style={{ height: 40, left: 5, width: '58%' }}>\r\n                                        <InputComponent hint='Card number' changeText={props.handleChange(\"cardnumber\")}\r\n                                            value={props.values.cardnumber} style={{ height: 40, left: 5, width: '100%', backgroundColor: theme.backgroundAlt, borderRadius: 12 }} />\r\n                                    </View>\r\n                                </View>\r\n                                {props.errors.cardnumber || null ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red }} text={props.errors.cardnumber} /></Animatable.View> : null}\r\n\r\n                                <View style={[style.flexContainer, { alignItems: 'center', borderRadius: 12, height: 40, justifyContent: 'space-around', marginTop: 10 }]}>\r\n\r\n                                    <View style={[{ width: '59%', backgroundColor: theme.backgroundAlt, borderRadius: 12, height: 40 }]}>\r\n                                        <View style={[style.flexContainer, { width: '100%', alignSelf: 'center', backgroundColor: theme.backgroundAlt, borderRadius: 12, height: 40, alignItems: 'center' }]}>\r\n                                            <Text style={[{ color: theme.text, backgroundColor: theme.borderAlt, borderRadius: 10, height: 35, textAlign: 'center', textAlignVertical: 'center', padding: 5 }]}>EXP date</Text>\r\n                                            <View style={{ height: 40, left: 5, width: '58%' }}>\r\n                                                <InputComponent hint='12/2026' changeText={props.handleChange(\"expdate\")}\r\n                                                    value={props.values.expdate.length === 2 ? props.values.expdate + \"/\" : props.values.expdate} style={{ height: 40, left: 5, width: '100%', backgroundColor: theme.backgroundAlt, borderRadius: 12 }} />\r\n\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                        {props.errors.expdate || null ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red }} text={props.errors.expdate} /></Animatable.View> : null}\r\n\r\n                                    </View>\r\n\r\n                                    <View style={[{ width: '39%', backgroundColor: theme.backgroundAlt, borderRadius: 12, height: 40 }]}>\r\n                                        <View style={[style.flexContainer, { width: '100%', alignSelf: 'center', backgroundColor: theme.backgroundAlt, borderRadius: 12, height: 40, alignItems: 'center' }]}>\r\n                                            <Text style={[{ color: theme.text, backgroundColor: theme.borderAlt, borderRadius: 10, height: 35, textAlign: 'center', textAlignVertical: 'center', padding: 5 }]}>CVV</Text>\r\n\r\n                                            <View style={{ height: 40, left: 5, width: '58%' }}>\r\n                                                <InputComponent hint='1234' changeText={props.handleChange(\"cvv\")}\r\n                                                    value={props.values.cvv} style={{ height: 40, left: 5, width: '100%', backgroundColor: theme.backgroundAlt, borderRadius: 12 }} />\r\n\r\n                                            </View>\r\n                                        </View>\r\n                                        {props.errors.cvv || null ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red }} text={props.errors.cvv} /></Animatable.View> : null}\r\n\r\n                                    </View>\r\n\r\n                                </View>\r\n\r\n                                <ButtonComponent press={() => { }} lblstyle={{ color: theme.text }} mode={''} text={'Update'} btnstyle={{ width: '100%', marginTop: 40, backgroundColor: Constance.Blue, borderColor: theme.borderAlt, borderWidth: 1, borderRadius: 7, height: 40, alignItems: 'center' }} />\r\n\r\n                            </View>\r\n                        )}\r\n                    </Formik>\r\n\r\n\r\n\r\n\r\n                </View>\r\n            </Modal>\r\n\r\n            {load ? <View style={{ height: '100%', width: '100%', position: 'absolute', justifyContent: 'center', alignItems: 'center' }}>\r\n                <Progress />\r\n            </View> : null}\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n"]},"metadata":{},"sourceType":"module"}