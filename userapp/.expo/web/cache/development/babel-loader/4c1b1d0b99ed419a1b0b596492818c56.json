{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport themes from \"./theme\";\nvar initialState = {\n  dark: false,\n  theme: themes.light,\n  toggle: function toggle() {}\n};\nvar ThemeContext = React.createContext(initialState);\n\nfunction ThemeProvider(_ref) {\n  var children = _ref.children;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dark = _React$useState2[0],\n      setDark = _React$useState2[1];\n\n  var toggle = function toggle() {\n    setDark(!dark);\n  };\n\n  var theme = dark ? themes.dark : themes.light;\n  return React.createElement(ThemeContext.Provider, {\n    value: {\n      theme: theme,\n      dark: dark,\n      toggle: toggle\n    }\n  }, children);\n}\n\nexport { ThemeProvider, ThemeContext };","map":{"version":3,"sources":["D:/Development/Mobile Development/React native/Hotel/SunStar/userapp/source/theme/themeProvider.tsx"],"names":["React","themes","initialState","dark","theme","light","toggle","ThemeContext","createContext","ThemeProvider","children","useState","setDark"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP;AAEA,IAAMC,YAAY,GAAG;AAClBC,EAAAA,IAAI,EAAE,KADY;AAElBC,EAAAA,KAAK,EAAEH,MAAM,CAACI,KAFI;AAGlBC,EAAAA,MAAM,EAAE,kBAAM,CAAE;AAHE,CAArB;AAKA,IAAMC,YAAY,GAAGP,KAAK,CAACQ,aAAN,CAAoBN,YAApB,CAArB;;AAGA,SAASO,aAAT,OAAqC;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AACjC,wBAAwBV,KAAK,CAACW,QAAN,CAAe,KAAf,CAAxB;AAAA;AAAA,MAAOR,IAAP;AAAA,MAAaS,OAAb;;AAGA,MAAMN,MAAM,GAAG,SAATA,MAAS,GAAM;AAClBM,IAAAA,OAAO,CAAC,CAACT,IAAF,CAAP;AACF,GAFD;;AAKA,MAAMC,KAAK,GAAGD,IAAI,GAAGF,MAAM,CAACE,IAAV,GAAiBF,MAAM,CAACI,KAA1C;AAEA,SACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAED,MAAAA,KAAK,EAALA,KAAF;AAASD,MAAAA,IAAI,EAAJA,IAAT;AAAeG,MAAAA,MAAM,EAANA;AAAf;AAA9B,KACII,QADJ,CADJ;AAKC;;AACD,SAASD,aAAT,EAAwBF,YAAxB","sourcesContent":["\r\nimport React from 'react';\r\nimport themes from './theme';\r\n\r\nconst initialState = {\r\n   dark: false,\r\n   theme: themes.light,\r\n   toggle: () => {}\r\n }\r\nconst ThemeContext = React.createContext(initialState);\r\n\r\n\r\nfunction ThemeProvider({ children }) {\r\n    const [dark, setDark] = React.useState(false) // Default theme is light\r\n    \r\n    // To toggle between dark and light modes\r\n    const toggle = () => {\r\n       setDark(!dark)\r\n    }\r\n    \r\n    // Filter the styles based on the theme selected\r\n    const theme = dark ? themes.dark : themes.light\r\n    \r\n    return (\r\n        <ThemeContext.Provider value={{ theme, dark, toggle }}>\r\n           {children}\r\n        </ThemeContext.Provider>\r\n        )\r\n    }\r\n    export { ThemeProvider, ThemeContext }"]},"metadata":{},"sourceType":"module"}