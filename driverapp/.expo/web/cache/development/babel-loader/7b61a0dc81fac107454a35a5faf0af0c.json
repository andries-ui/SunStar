{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Formik } from 'formik';\nimport React, { useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Snackbar, TextInput } from 'react-native-paper';\nimport ButtonComponent from \"../components/button\";\nimport InputComponent from \"../components/input\";\nimport TextComponent from \"../components/text\";\nimport style from \"../styles/screens/login\";\nimport Constance from \"../theme/const\";\nimport * as yup from 'yup';\nimport * as Animatable from 'react-native-animatable';\nimport Progress from \"../components/indicator\";\nimport Anim from \"../components/anim\";\nvar loginSchema = yup.object({\n  name: yup.string().required(\"Required\").min(3).matches(/^(?![\\s.]+$)[a-zA-Z\\s.]*$/, \"Invalid name\"),\n  username: yup.string().required(\"Required\").min(3).matches(/^[a-zA-Z0-9]+$/, \"Invalid username\"),\n  contact: yup.string().required(\"Required\").min(10).matches(/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/, \"Invalid contact\"),\n  email: yup.string().required(\"Required\").matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, \"Invalid email\"),\n  password: yup.string().required(\"Required\").min(8).matches(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/, \"Invalid password\"),\n  confirmpassword: yup.string().required(\"Required\").min(8).matches(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/, \"Invalid password\")\n});\n\nvar Register = function Register(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      invalid = _useState4[0],\n      setinvalid = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      load = _useState6[0],\n      setload = _useState6[1];\n\n  var handleSignIn = function handleSignIn(values) {\n    setinvalid(true);\n  };\n\n  return React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%'\n    }\n  }, React.createElement(StatusBar, {\n    barStyle: 'light-content'\n  }), React.createElement(Image, {\n    source: require(\"../../assets/images/onboardingimage.png\"),\n    style: style.image,\n    resizeMode: \"stretch\"\n  }), React.createElement(View, {\n    style: style.parent\n  }, React.createElement(View, {\n    style: [style.topcontainer, {\n      justifyContent: 'center',\n      alignItems: 'center'\n    }]\n  }, React.createElement(View, {\n    style: {\n      position: 'absolute',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 90\n    }\n  }, React.createElement(Anim, {\n    json: require(\"../../assets/lottie/15413-registro.json\"),\n    autoplay: true,\n    autosize: true,\n    loop: true,\n    speed: 1,\n    style: {\n      height: '100%',\n      width: '100%'\n    }\n  }))), React.createElement(View, {\n    style: style.bottomcontainer\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false\n  }, React.createElement(View, null, React.createElement(TextComponent, {\n    style: {\n      fontSize: Constance.medium,\n      marginVertical: 15\n    },\n    text: \"Register\"\n  }), React.createElement(Formik, {\n    initialValues: {\n      name: '',\n      username: '',\n      contact: '',\n      email: '',\n      password: '',\n      confirmpassword: ''\n    },\n    onSubmit: function onSubmit(values, action) {\n      handleSignIn(values);\n    },\n    validationSchema: loginSchema\n  }, function (props) {\n    return React.createElement(View, null, React.createElement(InputComponent, {\n      hint: \"Names\",\n      left: React.createElement(TextInput.Icon, {\n        name: \"account\"\n      }),\n      changeText: props.handleChange(\"name\"),\n      value: props.values.name,\n      style: {\n        borderColor: Constance.light_border,\n        borderWidth: 1,\n        borderRadius: 5\n      }\n    }), props.errors.name || null ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.name\n    })) : null, React.createElement(InputComponent, {\n      hint: \"Username\",\n      left: React.createElement(TextInput.Icon, {\n        name: \"account-box\"\n      }),\n      changeText: props.handleChange(\"username\"),\n      value: props.values.username,\n      style: {\n        borderColor: Constance.light_border,\n        borderWidth: 1,\n        borderRadius: 5,\n        marginTop: 5\n      }\n    }), props.errors.username || null ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.username\n    })) : null, React.createElement(InputComponent, {\n      hint: \"Contact\",\n      left: React.createElement(TextInput.Icon, {\n        name: \"phone\"\n      }),\n      changeText: props.handleChange(\"contact\"),\n      value: props.values.contact,\n      style: {\n        borderColor: Constance.light_border,\n        borderWidth: 1,\n        borderRadius: 5,\n        marginTop: 5\n      }\n    }), props.errors.contact || null ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.contact\n    })) : null, React.createElement(InputComponent, {\n      hint: \"E-mail\",\n      left: React.createElement(TextInput.Icon, {\n        name: \"at\"\n      }),\n      changeText: props.handleChange(\"email\"),\n      value: props.values.email,\n      style: {\n        borderColor: Constance.light_border,\n        borderWidth: 1,\n        borderRadius: 5,\n        marginTop: 5\n      }\n    }), props.errors.email || null ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.email\n    })) : null, React.createElement(InputComponent, {\n      hint: \"Password\",\n      secured: visible,\n      left: React.createElement(TextInput.Icon, {\n        name: \"lock\"\n      }),\n      right: React.createElement(TextInput.Icon, {\n        name: visible ? \"eye\" : \"eye-off\",\n        onPress: function onPress() {\n          return visible ? setVisible(false) : setVisible(true);\n        }\n      }),\n      changeText: props.handleChange(\"password\"),\n      value: props.values.password,\n      style: {\n        borderColor: Constance.light_border,\n        borderRadius: 5,\n        borderWidth: 1,\n        marginTop: 5\n      }\n    }), props.errors.password ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.password\n    })) : null, React.createElement(InputComponent, {\n      hint: \"Confirm password\",\n      secured: visible,\n      left: React.createElement(TextInput.Icon, {\n        name: \"lock\"\n      }),\n      right: React.createElement(TextInput.Icon, {\n        name: visible ? \"eye\" : \"eye-off\",\n        onPress: function onPress() {\n          return visible ? setVisible(false) : setVisible(true);\n        }\n      }),\n      changeText: props.handleChange(\"password\"),\n      value: props.values.password,\n      style: {\n        borderColor: Constance.light_border,\n        borderRadius: 5,\n        borderWidth: 1,\n        marginTop: 5\n      }\n    }), props.errors.password ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.password\n    })) : null, React.createElement(ButtonComponent, {\n      mode: \"contained\",\n      btnstyle: {\n        marginTop: 40,\n        backgroundColor: Constance.Yellow\n      },\n      lblstyle: {\n        color: Constance.White,\n        textTransform: 'capitalize'\n      },\n      text: \"Register\",\n      press: handleSignIn\n    }));\n  }), React.createElement(ButtonComponent, {\n    mode: \"text\",\n    btnstyle: {\n      marginTop: 20,\n      alignSelf: 'center'\n    },\n    lblstyle: {\n      color: Constance.Black,\n      textTransform: 'capitalize'\n    },\n    text: \"Sign-in\",\n    press: function press() {\n      navigation.navigate('loginscreen');\n    }\n  })))), React.createElement(Snackbar, {\n    visible: invalid,\n    onDismiss: function onDismiss() {\n      return setinvalid(false);\n    },\n    action: {\n      label: 'Undo',\n      onPress: function onPress() {}\n    }\n  }, \"Hey there! I'm a Snackbar.\")), load ? React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%',\n      position: 'absolute',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Progress, null)) : null);\n};\n\nexport default Register;","map":{"version":3,"sources":["D:/Development/Mobile Development/React native/Hotel/SunStar/driverapp/source/screens/register.tsx"],"names":["Formik","React","useState","Snackbar","TextInput","ButtonComponent","InputComponent","TextComponent","style","Constance","yup","Animatable","Progress","Anim","loginSchema","object","name","string","required","min","matches","username","contact","email","password","confirmpassword","Register","navigation","visible","setVisible","invalid","setinvalid","load","setload","handleSignIn","values","height","width","require","image","parent","topcontainer","justifyContent","alignItems","position","padding","bottomcontainer","fontSize","medium","marginVertical","action","props","handleChange","borderColor","light_border","borderWidth","borderRadius","errors","color","Red","marginTop","backgroundColor","Yellow","White","textTransform","alignSelf","Black","navigate","label","onPress"],"mappings":"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","sourcesContent":["import { Formik } from 'formik';\r\nimport React, { useContext, useState } from 'react'\r\nimport { Image, ScrollView, StatusBar, View } from 'react-native'\r\nimport { Snackbar, TextInput } from 'react-native-paper';\r\nimport ButtonComponent from '../components/button';\r\nimport InputComponent from '../components/input';\r\nimport TextComponent from '../components/text';\r\nimport style from '../styles/screens/login';\r\nimport Constance from '../theme/const';\r\nimport { ThemeContext } from '../theme/themeProvider';\r\nimport * as yup from 'yup';\r\nimport * as Animatable from 'react-native-animatable';\r\nimport Progress from '../components/indicator';\r\nimport Anim from '../components/anim';\r\n\r\n\r\nconst loginSchema = yup.object({\r\n  name: yup.string().required(\"Required\").min(3).matches(/^(?![\\s.]+$)[a-zA-Z\\s.]*$/,\"Invalid name\"), \r\n  username: yup.string().required(\"Required\").min(3).matches(/^[a-zA-Z0-9]+$/,\"Invalid username\"),\r\n  contact:yup.string().required(\"Required\").min(10).matches(/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/,\"Invalid contact\"),\r\n  email: yup.string().required(\"Required\").matches(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\"Invalid email\"),\r\n  password: yup.string().required(\"Required\").min(8).matches(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/,\"Invalid password\"),\r\n  confirmpassword: yup.string().required(\"Required\").min(8).matches(/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/,\"Invalid password\")\r\n})\r\n\r\n\r\nconst Register = ({navigation}) => {\r\n\r\n  const [visible, setVisible] = useState(true);\r\n  const [invalid, setinvalid] = useState(false);\r\n  const [load, setload] = useState(false)\r\n\r\n  const handleSignIn = (values: any) => {\r\n\r\n    setinvalid(true)\r\n  }\r\n\r\n  return (\r\n    <View style={{ height: '100%', width: '100%' }}>\r\n      <StatusBar barStyle={'light-content'} />\r\n\r\n      <Image source={require('../../assets/images/onboardingimage.png')}\r\n        style={style.image}\r\n        resizeMode=\"stretch\" />\r\n\r\n      <View style={style.parent}>\r\n\r\n      <View style={[style.topcontainer, { justifyContent: 'center', alignItems: 'center' }]}>\r\n          <View style={{ position: 'absolute', justifyContent: 'center', alignItems: 'center' , padding:90}}>\r\n            <Anim json={require('../../assets/lottie/15413-registro.json')} autoplay={true} autosize={true} loop={true} speed={1} style={{ height: '100%', width: '100%' }} />\r\n          </View>\r\n        </View>\r\n\r\n\r\n        <View style={style.bottomcontainer}>\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n          <View >\r\n\r\n            <TextComponent style={{ fontSize: Constance.medium, marginVertical: 15 }} text='Register' />\r\n\r\n            <Formik\r\n              initialValues={{name:'', username:'',contact:'', email: '', password: '',confirmpassword:'' }}\r\n              onSubmit={(values, action) => {\r\n                handleSignIn(values)\r\n              }}\r\n              validationSchema={loginSchema}\r\n            >\r\n\r\n              {(props) => (\r\n                <View>\r\n                  <InputComponent hint='Names'\r\n                    left={<TextInput.Icon name=\"account\" />}\r\n                    changeText={props.handleChange(\"name\")}\r\n                    value={props.values.name}\r\n                    style={{\r\n                      borderColor: Constance.light_border,\r\n                      borderWidth: 1, borderRadius: 5\r\n                    }}\r\n                  />\r\n                  {props.errors.name || null ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red }} text={props.errors.name} /></Animatable.View> : null}\r\n\r\n                  <InputComponent hint='Username'\r\n                    left={<TextInput.Icon name=\"account-box\" />}\r\n                    changeText={props.handleChange(\"username\")}\r\n                    value={props.values.username}\r\n                    style={{\r\n                      borderColor: Constance.light_border,\r\n                      borderWidth: 1, borderRadius: 5, marginTop:5\r\n                    }}\r\n                  />\r\n                  {props.errors.username || null ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red }} text={props.errors.username} /></Animatable.View> : null}\r\n\r\n                  <InputComponent hint='Contact'\r\n                    left={<TextInput.Icon name=\"phone\" />}\r\n                    changeText={props.handleChange(\"contact\")}\r\n                    value={props.values.contact}\r\n                    style={{\r\n                      borderColor: Constance.light_border,\r\n                      borderWidth: 1, borderRadius: 5, marginTop:5\r\n                    }}\r\n                  />\r\n                  {props.errors.contact || null ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red }} text={props.errors.contact} /></Animatable.View> : null}\r\n\r\n                  <InputComponent hint='E-mail'\r\n                    left={<TextInput.Icon name=\"at\" />}\r\n                    changeText={props.handleChange(\"email\")}\r\n                    value={props.values.email}\r\n                    style={{\r\n                      borderColor: Constance.light_border,\r\n                      borderWidth: 1, borderRadius: 5, marginTop:5\r\n                    }}\r\n                  />\r\n                  {props.errors.email || null ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red }} text={props.errors.email} /></Animatable.View> : null}\r\n\r\n                  <InputComponent hint='Password'\r\n                    secured={visible}\r\n                    left={<TextInput.Icon name=\"lock\" />}\r\n                    right={<TextInput.Icon name={visible ? \"eye\" : \"eye-off\"} onPress={() => visible ? setVisible(false) : setVisible(true)} />}\r\n                    changeText={props.handleChange(\"password\")}\r\n                    value={props.values.password}\r\n                    style={{\r\n                      borderColor: Constance.light_border,\r\n                      borderRadius: 5,\r\n                      borderWidth: 1,\r\n                      marginTop:5\r\n                    }}\r\n                  />\r\n                  {props.errors.password ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red  }} text={props.errors.password} /></Animatable.View> : null}\r\n\r\n\r\n                  <InputComponent hint='Confirm password'\r\n                    secured={visible}\r\n                    left={<TextInput.Icon name=\"lock\" />}\r\n                    right={<TextInput.Icon name={visible ? \"eye\" : \"eye-off\"} onPress={() => visible ? setVisible(false) : setVisible(true)} />}\r\n                    changeText={props.handleChange(\"password\")}\r\n                    value={props.values.password}\r\n                    style={{\r\n                      borderColor: Constance.light_border,\r\n                      borderRadius: 5,\r\n                      borderWidth: 1, marginTop:5\r\n                    }}\r\n                  />\r\n                  {props.errors.password ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red, }} text={props.errors.password} /></Animatable.View> : null}\r\n\r\n                  <ButtonComponent mode='contained' btnstyle={{ marginTop:40, backgroundColor: Constance.Yellow, }} lblstyle={{ color: Constance.White, textTransform: 'capitalize' }} text='Register' press={handleSignIn} />\r\n\r\n                </View>\r\n              )}\r\n            </Formik>\r\n\r\n             <ButtonComponent mode='text' btnstyle={{ marginTop: 20, alignSelf: 'center' }} lblstyle={{ color: Constance.Black, textTransform: 'capitalize' }} text='Sign-in' press={() => {navigation.navigate('loginscreen') }} />\r\n\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n\r\n      <Snackbar\r\n        visible={invalid}\r\n        onDismiss={() => setinvalid(false)}\r\n\r\n        action={{\r\n          label: 'Undo',\r\n          onPress: () => {\r\n            // Do something\r\n          },\r\n        }}>\r\n        Hey there! I'm a Snackbar.\r\n      </Snackbar>\r\n    </View>\r\n\r\n\r\n    { load? <View   style={{ height: '100%', width:'100%',position:'absolute', justifyContent:'center', alignItems:'center'}}>\r\n          <Progress  />\r\n      </View>: null}\r\n    </View >\r\n  )\r\n}\r\n\r\nexport default Register\r\n"]},"metadata":{},"sourceType":"module"}