{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Formik } from 'formik';\nimport React, { useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Snackbar, TextInput } from 'react-native-paper';\nimport ButtonComponent from \"../components/button\";\nimport InputComponent from \"../components/input\";\nimport TextComponent from \"../components/text\";\nimport style from \"../styles/screens/login\";\nimport Constance from \"../theme/const\";\nimport * as yup from 'yup';\nimport * as Animatable from 'react-native-animatable';\nimport axios from 'axios';\nimport Progress from \"../components/indicator\";\nimport Anim from \"../components/anim\";\nvar loginSchema = yup.object({\n  email: yup.string().required().email(),\n  password: yup.string().required().min(6)\n});\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setemail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setpassword = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      visible = _useState6[0],\n      setVisible = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      message = _useState8[0],\n      setmessage = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      load = _useState10[0],\n      setload = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      invalid = _useState12[0],\n      setinvalid = _useState12[1];\n\n  var handleSignIn = function handleSignIn(values) {\n    var url = \"https://sunstarapi.herokuapp.com/login\";\n    axios.post(url, values).then(function (res) {\n      var results = res.data;\n      setmessage(results.token + \"==\");\n    }).catch(function (err) {\n      setinvalid(true);\n      setmessage(err.JSON() + \" ==\");\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%'\n    }\n  }, React.createElement(StatusBar, {\n    barStyle: 'light-content'\n  }), React.createElement(Image, {\n    source: require(\"../../assets/images/onboardingimage.png\"),\n    style: style.image,\n    resizeMode: \"stretch\"\n  }), React.createElement(View, {\n    style: style.parent\n  }, React.createElement(View, {\n    style: [style.topcontainer, {\n      justifyContent: 'center',\n      alignItems: 'center'\n    }]\n  }, React.createElement(View, {\n    style: {\n      position: 'absolute',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 90\n    }\n  }, React.createElement(Anim, {\n    json: require(\"../../assets/lottie/81243-login-successfully.json\"),\n    autoplay: true,\n    autosize: true,\n    loop: true,\n    speed: 1,\n    style: {\n      height: '100%',\n      width: '100%'\n    }\n  }))), React.createElement(View, {\n    style: style.bottomcontainer\n  }, React.createElement(TextComponent, {\n    style: {\n      fontSize: Constance.medium,\n      marginVertical: 15\n    },\n    text: \"Sign-in\"\n  }), React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: function onSubmit(values, action) {\n      handleSignIn(values);\n    },\n    validationSchema: loginSchema\n  }, function (props) {\n    return React.createElement(View, null, React.createElement(InputComponent, {\n      hint: \"E-mail\",\n      left: React.createElement(TextInput.Icon, {\n        name: \"at\"\n      }),\n      changeText: props.handleChange(\"email\"),\n      value: props.values.email,\n      style: {\n        borderColor: Constance.light_border,\n        borderWidth: 1,\n        borderRadius: 5,\n        marginTop: 10\n      }\n    }), props.errors.email || null ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.email\n    })) : null, React.createElement(InputComponent, {\n      hint: \"Password\",\n      secured: visible,\n      left: React.createElement(TextInput.Icon, {\n        name: \"lock\"\n      }),\n      right: React.createElement(TextInput.Icon, {\n        name: visible ? \"eye\" : \"eye-off\",\n        onPress: function onPress() {\n          return visible ? setVisible(false) : setVisible(true);\n        }\n      }),\n      changeText: props.handleChange(\"password\"),\n      value: props.values.password,\n      style: {\n        borderColor: Constance.light_border,\n        borderRadius: 5,\n        borderWidth: 1,\n        marginTop: 5\n      }\n    }), props.errors.password ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.password\n    })) : null, React.createElement(TextComponent, {\n      style: {\n        textAlign: 'right',\n        marginVertical: 5,\n        height: 30,\n        marginTop: 10\n      },\n      text: \"Forgot Password?\",\n      press: function press() {\n        return navigation.navigate('resetscreen');\n      }\n    }), React.createElement(ButtonComponent, {\n      mode: \"contained\",\n      btnstyle: {\n        backgroundColor: Constance.Yellow,\n        marginTop: 0\n      },\n      lblstyle: {\n        color: Constance.White,\n        textTransform: 'capitalize'\n      },\n      text: \"Sign-in\",\n      press: handleSignIn\n    }));\n  }), React.createElement(ButtonComponent, {\n    mode: \"contained\",\n    btnstyle: {\n      backgroundColor: Constance.Grey\n    },\n    lblstyle: {\n      color: Constance.White,\n      textTransform: 'capitalize'\n    },\n    text: \"Register\",\n    press: function press() {\n      navigation.navigate('registerscreen');\n    }\n  }), React.createElement(ButtonComponent, {\n    mode: \"text\",\n    btnstyle: {\n      position: 'absolute',\n      bottom: 0,\n      alignSelf: 'center'\n    },\n    lblstyle: {\n      color: Constance.Black,\n      textTransform: 'capitalize'\n    },\n    text: \"Browse the app\",\n    press: function press() {\n      return navigation.navigate('dashboardscreen');\n    }\n  })), React.createElement(Snackbar, {\n    visible: invalid,\n    onDismiss: function onDismiss() {\n      return setinvalid(false);\n    },\n    action: {\n      label: 'Undo',\n      onPress: function onPress() {}\n    }\n  }, message)), load ? React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%',\n      position: 'absolute',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Progress, null)) : null);\n};\n\nexport default Login;","map":{"version":3,"sources":["D:/Development/Mobile Development/React native/Hotel/SunStar/driverapp/source/screens/login.tsx"],"names":["Formik","React","useState","Snackbar","TextInput","ButtonComponent","InputComponent","TextComponent","style","Constance","yup","Animatable","axios","Progress","Anim","loginSchema","object","email","string","required","password","min","Login","navigation","setemail","setpassword","visible","setVisible","message","setmessage","load","setload","invalid","setinvalid","handleSignIn","values","url","post","then","res","results","data","token","catch","err","JSON","height","width","require","image","parent","topcontainer","justifyContent","alignItems","position","padding","bottomcontainer","fontSize","medium","marginVertical","action","props","handleChange","borderColor","light_border","borderWidth","borderRadius","marginTop","errors","color","Red","textAlign","navigate","backgroundColor","Yellow","White","textTransform","Grey","bottom","alignSelf","Black","label","onPress"],"mappings":"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","sourcesContent":["import { Formik } from 'formik';\r\nimport React, { Component, useContext, useRef, useState } from 'react'\r\nimport { Animated, Image, StatusBar, View } from 'react-native'\r\nimport { BottomNavigation, Snackbar, TextInput } from 'react-native-paper';\r\nimport ButtonComponent from '../components/button';\r\nimport InputComponent from '../components/input';\r\nimport TextComponent from '../components/text';\r\nimport style from '../styles/screens/login';\r\nimport Constance from '../theme/const';\r\nimport * as yup from 'yup';\r\nimport * as Animatable from 'react-native-animatable';\r\nimport axios from 'axios';\r\nimport Progress from '../components/indicator';\r\nimport Anim from '../components/anim';\r\n\r\n\r\nconst loginSchema = yup.object({\r\n  email: yup.string().required().email(),\r\n  password: yup.string().required().min(6),\r\n})\r\n\r\n\r\nconst Login = ({ navigation }) => {\r\n\r\n  const [email, setemail] = useState('');\r\n  const [password, setpassword] = useState('');\r\n  const [visible, setVisible] = useState(true);\r\n  const [message, setmessage] = useState('');\r\n\r\n  const [load, setload] = useState(false);\r\n\r\n  const [invalid, setinvalid] = useState(false);\r\n  const handleSignIn = (values: any) => {\r\n\r\n    const url = \"https://sunstarapi.herokuapp.com/login\"\r\n    axios.post(url, values).then((res) => {\r\n      const results = res.data;\r\n      setmessage(results.token + \"==\")\r\n      // setmessage(results.token)\r\n    }).catch((err) => {\r\n      setinvalid(true);\r\n      setmessage(err.JSON() + \" ==\")\r\n    })\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <View style={{ height: '100%', width: '100%' }}>\r\n      <StatusBar barStyle={'light-content'} />\r\n\r\n      <Image source={require('../../assets/images/onboardingimage.png')}\r\n        style={style.image}\r\n        resizeMode=\"stretch\" />\r\n\r\n      <View style={style.parent}>\r\n\r\n        <View style={[style.topcontainer, { justifyContent: 'center', alignItems: 'center' }]}>\r\n          <View style={{ position: 'absolute', justifyContent: 'center', alignItems: 'center' , padding:90}}>\r\n            <Anim json={require('../../assets/lottie/81243-login-successfully.json')} autoplay={true} autosize={true} loop={true} speed={1} style={{ height: '100%', width: '100%' }} />\r\n          </View>\r\n        </View>\r\n\r\n        <View style={style.bottomcontainer}>\r\n          <TextComponent style={{ fontSize: Constance.medium, marginVertical: 15 }} text='Sign-in' />\r\n\r\n          <Formik\r\n            initialValues={{ email: '', password: '' }}\r\n            onSubmit={(values, action) => {\r\n              handleSignIn(values)\r\n            }}\r\n            validationSchema={loginSchema}\r\n          >\r\n\r\n            {(props) => (\r\n              <View>\r\n                <InputComponent hint='E-mail'\r\n                  left={<TextInput.Icon name=\"at\" />}\r\n                  changeText={props.handleChange(\"email\")}\r\n                  value={props.values.email}\r\n                  style={{\r\n                    borderColor: Constance.light_border,\r\n                    borderWidth: 1, borderRadius: 5, marginTop: 10\r\n                  }}\r\n                />\r\n\r\n                {props.errors.email || null ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red }} text={props.errors.email} /></Animatable.View> : null}\r\n                <InputComponent hint='Password'\r\n                  secured={visible}\r\n                  left={<TextInput.Icon name=\"lock\" />}\r\n                  right={<TextInput.Icon name={visible ? \"eye\" : \"eye-off\"} onPress={() => visible ? setVisible(false) : setVisible(true)} />}\r\n                  changeText={props.handleChange(\"password\")}\r\n                  value={props.values.password}\r\n                  style={{\r\n                    borderColor: Constance.light_border,\r\n                    borderRadius: 5,\r\n                    borderWidth: 1, marginTop: 5\r\n                  }}\r\n                />\r\n                {props.errors.password ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red }} text={props.errors.password} /></Animatable.View> : null}\r\n\r\n                <TextComponent\r\n                  style={{ textAlign: 'right', marginVertical: 5, height: 30, marginTop: 10 }} text='Forgot Password?' press={() => navigation.navigate('resetscreen')} />\r\n\r\n\r\n                <ButtonComponent mode='contained' btnstyle={{ backgroundColor: Constance.Yellow, marginTop: 0 }} lblstyle={{ color: Constance.White, textTransform: 'capitalize' }} text='Sign-in' press={handleSignIn} />\r\n\r\n              </View>\r\n            )}\r\n          </Formik>\r\n          <ButtonComponent mode='contained' btnstyle={{ backgroundColor: Constance.Grey, }} lblstyle={{ color: Constance.White, textTransform: 'capitalize' }} text='Register' press={() => {navigation.navigate('registerscreen') }} />\r\n          <ButtonComponent mode='text' btnstyle={{ position: 'absolute', bottom: 0, alignSelf: 'center' }} lblstyle={{ color: Constance.Black, textTransform: 'capitalize' }} text='Browse the app' press={() => navigation.navigate('dashboardscreen')} />\r\n\r\n        </View>\r\n\r\n\r\n        <Snackbar\r\n          visible={invalid}\r\n          onDismiss={() => setinvalid(false)}\r\n\r\n          action={{\r\n            label: 'Undo',\r\n            onPress: () => {\r\n              // Do something\r\n            },\r\n          }}>\r\n          {message}\r\n        </Snackbar>\r\n      </View>\r\n\r\n      {load ? <View style={{ height: '100%', width: '100%', position: 'absolute', justifyContent: 'center', alignItems: 'center' }}>\r\n        <Progress />\r\n      </View> : null}\r\n\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}