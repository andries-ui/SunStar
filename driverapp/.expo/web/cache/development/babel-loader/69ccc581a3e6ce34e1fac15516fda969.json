{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as Camera from 'expo-camera';\nimport Constance from \"../theme/const\";\nimport { Icon } from 'react-native-elements';\nimport { ThemeContext } from \"../theme/themeProvider\";\nimport * as ImagePicker from 'expo-image-picker';\n\nvar Cam = function Cam(props) {\n  var onClose = props.onClose;\n  var cameraRef = useRef();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(Camera.Constants.Type.back),\n      _useState4 = _slicedToArray(_useState3, 2),\n      type = _useState4[0],\n      setType = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      err = _useState6[0],\n      seterr = _useState6[1];\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme,\n      dark = _useContext.dark;\n\n  var _useState7 = useState(Constance.White),\n      _useState8 = _slicedToArray(_useState7, 2),\n      captureColor = _useState8[0],\n      setcaptureColor = _useState8[1];\n\n  var _useState9 = useState(Constance.White),\n      _useState10 = _slicedToArray(_useState9, 2),\n      rotatoColor = _useState10[0],\n      setrotatoColor = _useState10[1];\n\n  var _useState11 = useState(Constance.White),\n      _useState12 = _slicedToArray(_useState11, 2),\n      gallery = _useState12[0],\n      setgallery = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      flesh = _useState14[0],\n      setflesh = _useState14[1];\n\n  var _useState15 = useState(0),\n      _useState16 = _slicedToArray(_useState15, 2),\n      autofocus = _useState16[0],\n      setautofocus = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      isCameraReady = _useState18[0],\n      setIsCameraReady = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      isPreview = _useState20[0],\n      setIsPreview = _useState20[1];\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images\n            }));\n\n          case 2:\n            result = _context.sent;\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var starWarching = function starWarching() {\n    var _await$Camera$Camera$, status;\n\n    return _regeneratorRuntime.async(function starWarching$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(Camera.requestCameraPermissionsAsync());\n\n          case 3:\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n          case 5:\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(Camera.Camera.requestCameraPermissionsAsync());\n\n          case 7:\n            _await$Camera$Camera$ = _context2.sent;\n            status = _await$Camera$Camera$.status;\n            setHasPermission(status);\n            _context2.next = 15;\n            break;\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](0);\n            seterr(_context2.t0);\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  var fleshLight = function fleshLight() {\n    return _regeneratorRuntime.async(function fleshLight$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            flesh ? setflesh(false) : setflesh(true);\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onCameraReady = function onCameraReady() {\n    setIsCameraReady(true);\n  };\n\n  var cancelPreview = function cancelPreview() {\n    return _regeneratorRuntime.async(function cancelPreview$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(cameraRef.current.resumePreview());\n\n          case 2:\n            setIsPreview(false);\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onSnap = function onSnap() {\n    var options, data, source;\n    return _regeneratorRuntime.async(function onSnap$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (!cameraRef.current) {\n              _context5.next = 10;\n              break;\n            }\n\n            options = {\n              quality: 0.7,\n              base64: true\n            };\n            _context5.next = 4;\n            return _regeneratorRuntime.awrap(cameraRef.current.takePictureAsync(options));\n\n          case 4:\n            data = _context5.sent;\n            source = data.base64;\n\n            if (!source) {\n              _context5.next = 10;\n              break;\n            }\n\n            _context5.next = 9;\n            return _regeneratorRuntime.awrap(cameraRef.current.pausePreview());\n\n          case 9:\n            setIsPreview(true);\n\n          case 10:\n            console.log(cameraRef);\n\n          case 11:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    starWarching();\n  }, []);\n\n  if (hasPermission === '') {\n    return React.createElement(Text, null, \"No access to camera\");\n  }\n\n  if (hasPermission === 'not granted') {\n    return React.createElement(Text, null, \"No access to camera\");\n  }\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Camera.Camera, {\n    ref: cameraRef.current,\n    onCameraReady: onCameraReady,\n    style: styles.camera,\n    type: type,\n    flashMode: flesh ? 2 : 0,\n    autoFocus: autofocus,\n    focusDepth: 1,\n    onMagicTap: function onMagicTap() {\n      setautofocus(3);\n    },\n    pictureSize: \"1200*1200\"\n  }, isPreview && React.createElement(View, {\n    style: {\n      height: 40,\n      width: 40,\n      borderRadius: 7,\n      position: 'absolute',\n      right: 5,\n      top: 15,\n      flexDirection: 'row'\n    }\n  }, React.createElement(Icon, {\n    type: \"material-community\",\n    name: \"close\",\n    onPress: cancelPreview,\n    color: Constance.Green,\n    size: 30,\n    style: {\n      position: 'absolute',\n      bottom: 10\n    },\n    onPressIn: function onPressIn() {\n      setgallery(Constance.Red);\n    },\n    onPressOut: function onPressOut() {\n      setgallery(Constance.White);\n    }\n  })), !isPreview && React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%'\n    }\n  }, React.createElement(View, {\n    style: {\n      height: 40,\n      width: 40,\n      borderRadius: 7,\n      position: 'absolute',\n      right: 5,\n      top: 15,\n      flexDirection: 'row'\n    }\n  }, React.createElement(Icon, {\n    type: \"material-community\",\n    name: \"close\",\n    onPress: onClose,\n    color: gallery,\n    size: 30,\n    style: {\n      position: 'absolute',\n      bottom: 10\n    },\n    onPressIn: function onPressIn() {\n      setgallery(Constance.Red);\n    },\n    onPressOut: function onPressOut() {\n      setgallery(Constance.White);\n    }\n  })), React.createElement(View, {\n    style: {\n      height: 40,\n      width: 40,\n      borderRadius: 7,\n      position: 'absolute',\n      bottom: 90,\n      alignSelf: 'center'\n    }\n  }, React.createElement(Icon, {\n    type: \"material-community\",\n    name: flesh ? 'flashlight-off' : 'flashlight',\n    onPress: fleshLight,\n    color: gallery,\n    size: 30,\n    style: {\n      position: 'absolute',\n      bottom: 10\n    },\n    onPressIn: function onPressIn() {\n      setgallery(Constance.Red);\n    },\n    onPressOut: function onPressOut() {\n      setgallery(Constance.White);\n    }\n  })), React.createElement(View, {\n    style: styles.buttonContainer\n  }, React.createElement(Icon, {\n    type: \"material-community\",\n    name: \"folder-multiple-image\",\n    onPress: pickImage,\n    color: gallery,\n    size: 30,\n    style: {\n      position: 'absolute',\n      bottom: 10\n    },\n    onPressIn: function onPressIn() {\n      setgallery(Constance.Red);\n    },\n    onPressOut: function onPressOut() {\n      setgallery(Constance.White);\n    }\n  }), React.createElement(Icon, {\n    type: \"feather\",\n    name: \"aperture\",\n    onPress: onSnap,\n    color: captureColor,\n    size: 50,\n    style: {\n      position: 'absolute',\n      bottom: 10\n    },\n    onPressIn: function onPressIn() {\n      setcaptureColor(Constance.Red);\n    },\n    onPressOut: function onPressOut() {\n      setcaptureColor(Constance.White);\n    }\n  }), React.createElement(Icon, {\n    disabled: !isCameraReady,\n    type: \"material-community\",\n    name: \"rotate-3d-variant\",\n    onPress: function onPress() {\n      setType(type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back);\n    },\n    color: rotatoColor,\n    size: 30,\n    style: {\n      position: 'absolute',\n      bottom: 10\n    },\n    onPressIn: function onPressIn() {\n      setrotatoColor(Constance.Red);\n    },\n    onPressOut: function onPressOut() {\n      setrotatoColor(Constance.White);\n    }\n  })))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    height: '100%',\n    width: '100%',\n    backgroundColor: Constance.GoldDark\n  },\n  camera: {\n    height: '100%',\n    width: '100%'\n  },\n  buttonContainer: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    marginTop: 15,\n    bottom: 20,\n    position: 'absolute'\n  },\n  content: {\n    position: 'absolute',\n    bottom: 20,\n    width: '100%',\n    alignItems: 'center'\n  },\n  button: {},\n  text: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    right: 10,\n    color: Constance.White\n  }\n});\nexport default Cam;","map":{"version":3,"sources":["D:/Development/Mobile Development/React native/Hotel/SunStar/driverapp/source/components/camera.tsx"],"names":["React","useState","useEffect","useContext","useRef","Camera","Constance","Icon","ThemeContext","ImagePicker","Cam","props","onClose","cameraRef","hasPermission","setHasPermission","Constants","Type","back","type","setType","err","seterr","theme","dark","White","captureColor","setcaptureColor","rotatoColor","setrotatoColor","gallery","setgallery","flesh","setflesh","autofocus","setautofocus","isCameraReady","setIsCameraReady","isPreview","setIsPreview","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","result","starWarching","requestCameraPermissionsAsync","requestMediaLibraryPermissionsAsync","status","fleshLight","onCameraReady","cancelPreview","current","resumePreview","onSnap","options","quality","base64","takePictureAsync","data","source","pausePreview","console","log","styles","container","camera","height","width","borderRadius","position","right","top","flexDirection","Green","bottom","Red","alignSelf","buttonContainer","front","StyleSheet","create","backgroundColor","GoldDark","justifyContent","alignItems","marginTop","content","button","text","fontSize","fontWeight","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\r\nimport * as Camera from 'expo-camera';\r\nimport Constance from '../theme/const';\r\nimport { Icon } from 'react-native-elements';\r\nimport { ThemeContext } from '../theme/themeProvider';\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\n\r\ninterface props {\r\n  onClose: any\r\n}\r\n\r\nconst Cam = (props: props) => {\r\n\r\n  const { onClose } = props;\r\n\r\n  let cameraRef = useRef();\r\n  const [hasPermission, setHasPermission] = useState('');\r\n  const [type, setType] = useState(Camera.Constants.Type.back);\r\n  const [err, seterr] = useState('');\r\n  const { theme, dark } = useContext(ThemeContext);\r\n  const [captureColor, setcaptureColor] = useState(Constance.White);\r\n  const [rotatoColor, setrotatoColor] = useState(Constance.White);\r\n  const [gallery, setgallery] = useState(Constance.White);\r\n  const [flesh, setflesh] = useState(false);\r\n  const [autofocus, setautofocus] = useState(0);\r\n  const [isCameraReady, setIsCameraReady] = useState(false);\r\n  const [isPreview, setIsPreview] = useState(false);\r\n\r\n\r\n  const pickImage = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n    });\r\n  }\r\n\r\n  const starWarching = async () => {\r\n    try {\r\n\r\n\r\n      await Camera.requestCameraPermissionsAsync();\r\n      await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n\r\n      const { status } = await Camera.Camera.requestCameraPermissionsAsync();\r\n\r\n      setHasPermission(status)\r\n    } catch (err: any) {\r\n      seterr(err)\r\n    }\r\n  }\r\n\r\n  const fleshLight = async () => {\r\n\r\n    flesh ? setflesh(false) : setflesh(true);\r\n  }\r\n\r\n  const onCameraReady = () => {\r\n    setIsCameraReady(true);\r\n  };\r\n\r\n\r\n  const cancelPreview = async () => {\r\n    await cameraRef.current.resumePreview();\r\n    setIsPreview(false);\r\n  };\r\n\r\n  const onSnap = async () => {\r\n    if (cameraRef.current) {\r\n      const options = { quality: 0.7, base64: true };\r\n      const data = await cameraRef.current.takePictureAsync(options);\r\n      const source = data.base64;\r\n  \r\n      if (source) {\r\n        await cameraRef.current.pausePreview();\r\n        setIsPreview(true);\r\n      }\r\n\r\n    }\r\n\r\n      console.log(cameraRef);\r\n    \r\n    \r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    starWarching();\r\n  }, [])\r\n \r\n  if (hasPermission === '') {\r\n    return <Text>No access to camera</Text>;\r\n  }\r\n  if (hasPermission === 'not granted') {\r\n    return <Text>No access to camera</Text>;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Camera.Camera ref={cameraRef.current} onCameraReady={onCameraReady} style={styles.camera} type={type} flashMode={flesh ? 2 : 0} autoFocus={autofocus} focusDepth={1} onMagicTap={() => { setautofocus(3) }} pictureSize='1200*1200' >\r\n\r\n\r\n\r\n        {/* =================================Preview================================= */}\r\n\r\n        {isPreview && (\r\n          <View style={{ height: 40, width: 40, borderRadius: 7, position: 'absolute', right: 5, top: 15, flexDirection: 'row' }}>\r\n\r\n            <Icon type='material-community' name='close' onPress={cancelPreview} color={Constance.Green} size={30} style={{ position: 'absolute', bottom: 10 }} onPressIn={() => { setgallery(Constance.Red) }} onPressOut={() => { setgallery(Constance.White) }} />\r\n          </View>\r\n        )}\r\n\r\n\r\n        {!isPreview && (\r\n          <View style={{height:'100%', width:'100%'}} >\r\n\r\n            <View style={{ height: 40, width: 40, borderRadius: 7, position: 'absolute', right: 5, top: 15, flexDirection: 'row' }}>\r\n\r\n              <Icon type='material-community' name='close' onPress={onClose} color={gallery} size={30} style={{ position: 'absolute', bottom: 10 }} onPressIn={() => { setgallery(Constance.Red) }} onPressOut={() => { setgallery(Constance.White) }} />\r\n            </View>\r\n\r\n            <View style={{ height: 40, width: 40, borderRadius: 7, position: 'absolute', bottom: 90, alignSelf: 'center' }}>\r\n              <Icon type='material-community' name={flesh ? 'flashlight-off' : 'flashlight'} onPress={fleshLight} color={gallery} size={30} style={{ position: 'absolute', bottom: 10 }} onPressIn={() => { setgallery(Constance.Red) }} onPressOut={() => { setgallery(Constance.White) }} />\r\n            </View>\r\n\r\n\r\n            <View  style={styles.buttonContainer}>\r\n\r\n              <Icon type='material-community' name='folder-multiple-image' onPress={pickImage} color={gallery} size={30} style={{ position: 'absolute', bottom: 10 }} onPressIn={() => { setgallery(Constance.Red) }} onPressOut={() => { setgallery(Constance.White) }} />\r\n\r\n\r\n              <Icon type='feather' name='aperture' onPress={onSnap} color={captureColor} size={50} style={{ position: 'absolute', bottom: 10 }} onPressIn={() => { setcaptureColor(Constance.Red) }} onPressOut={() => { setcaptureColor(Constance.White) }} />\r\n\r\n              <Icon disabled={!isCameraReady} type='material-community' name='rotate-3d-variant' onPress={() => {\r\n                setType(\r\n                  type === Camera.Constants.Type.back\r\n                    ? Camera.Constants.Type.front\r\n                    : Camera.Constants.Type.back\r\n                );\r\n              }} color={rotatoColor} size={30} style={{ position: 'absolute', bottom: 10 }} onPressIn={() => { setrotatoColor(Constance.Red) }} onPressOut={() => { setrotatoColor(Constance.White) }} />\r\n\r\n            </View>\r\n          </View>\r\n        )}\r\n        {/* =================================Preview================================= */}\r\n\r\n\r\n\r\n      </Camera.Camera>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    height: '100%',\r\n    width: '100%',\r\n    backgroundColor: Constance.GoldDark\r\n  },\r\n  camera: {\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  buttonContainer: {\r\n    width: '100%',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-evenly',\r\n    alignItems: 'center',\r\n    marginTop: 15,\r\n    bottom: 20,\r\n    position: 'absolute',\r\n  },\r\n  content: {\r\n    position: 'absolute',\r\n    bottom: 20,\r\n    width: '100%',\r\n    alignItems: 'center',\r\n\r\n  },\r\n  button: {\r\n\r\n  },\r\n  text: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    right: 10,\r\n    color: Constance.White\r\n  },\r\n});\r\n\r\nexport default Cam"]},"metadata":{},"sourceType":"module"}