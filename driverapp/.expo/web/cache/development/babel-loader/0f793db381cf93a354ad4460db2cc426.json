{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Formik } from 'formik';\nimport React, { useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Snackbar, TextInput } from 'react-native-paper';\nimport ButtonComponent from \"../components/button\";\nimport InputComponent from \"../components/input\";\nimport TextComponent from \"../components/text\";\nimport style from \"../styles/screens/login\";\nimport Constance from \"../theme/const\";\nimport * as yup from 'yup';\nimport * as Animatable from 'react-native-animatable';\nimport Anim from \"../components/anim\";\nvar loginSchema = yup.object({\n  email: yup.string().required().email(),\n  password: yup.string().required().min(6)\n});\n\nvar ResetPassword = function ResetPassword(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setemail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setpassword = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      visible = _useState6[0],\n      setVisible = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      invalid = _useState8[0],\n      setinvalid = _useState8[1];\n\n  var handleSignIn = function handleSignIn(values) {\n    setinvalid(true);\n  };\n\n  return React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%'\n    }\n  }, React.createElement(StatusBar, {\n    barStyle: 'light-content'\n  }), React.createElement(Image, {\n    source: require(\"../../assets/images/onboardingimage.png\"),\n    style: style.image,\n    resizeMode: \"stretch\"\n  }), React.createElement(View, {\n    style: style.parent\n  }, React.createElement(View, {\n    style: [style.topcontainer, {\n      justifyContent: 'center',\n      alignItems: 'center'\n    }]\n  }, React.createElement(View, {\n    style: {\n      position: 'absolute',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 40\n    }\n  }, React.createElement(Anim, {\n    json: require(\"../../assets/lottie/75988-forgot-password.json\"),\n    autoplay: true,\n    autosize: true,\n    loop: true,\n    speed: 1,\n    style: {\n      height: '100%',\n      width: '100%'\n    }\n  }))), React.createElement(View, {\n    style: style.bottomcontainer\n  }, React.createElement(TextComponent, {\n    style: {\n      fontSize: Constance.medium,\n      marginVertical: 15\n    },\n    text: \"Reset password\"\n  }), React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: function onSubmit(values, action) {\n      handleSignIn(values);\n    },\n    validationSchema: loginSchema\n  }, function (props) {\n    return React.createElement(View, null, React.createElement(InputComponent, {\n      hint: \"E-mail\",\n      left: React.createElement(TextInput.Icon, {\n        name: \"at\"\n      }),\n      changeText: props.handleChange(\"email\"),\n      value: props.values.email,\n      style: {\n        borderColor: Constance.light_border,\n        borderWidth: 1,\n        borderRadius: 5\n      }\n    }), props.errors.email || null ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.email\n    })) : null, React.createElement(InputComponent, {\n      hint: \"username\",\n      left: React.createElement(TextInput.Icon, {\n        name: \"account-box\"\n      }),\n      changeText: props.handleChange(\"password\"),\n      value: props.values.password,\n      style: {\n        borderColor: Constance.light_border,\n        borderRadius: 5,\n        borderWidth: 1,\n        top: 5\n      }\n    }), props.errors.password ? React.createElement(Animatable.View, {\n      animation: \"pulse\",\n      easing: \"ease-out\"\n    }, React.createElement(TextComponent, {\n      style: {\n        color: Constance.Red\n      },\n      text: props.errors.password\n    })) : null, React.createElement(ButtonComponent, {\n      mode: \"contained\",\n      btnstyle: {\n        backgroundColor: Constance.Yellow,\n        marginTop: 30\n      },\n      lblstyle: {\n        color: Constance.White,\n        textTransform: 'capitalize'\n      },\n      text: \"Reset Password\",\n      press: handleSignIn\n    }));\n  })), React.createElement(Snackbar, {\n    visible: invalid,\n    onDismiss: function onDismiss() {\n      return setinvalid(false);\n    },\n    action: {\n      label: 'Undo',\n      onPress: function onPress() {}\n    }\n  }, \"Hey there! I'm a Snackbar.\")));\n};\n\nexport default ResetPassword;","map":{"version":3,"sources":["D:/Development/Mobile Development/React native/Hotel/SunStar/driverapp/source/screens/reset.tsx"],"names":["Formik","React","useState","Snackbar","TextInput","ButtonComponent","InputComponent","TextComponent","style","Constance","yup","Animatable","Anim","loginSchema","object","email","string","required","password","min","ResetPassword","navigation","setemail","setpassword","visible","setVisible","invalid","setinvalid","handleSignIn","values","height","width","require","image","parent","topcontainer","justifyContent","alignItems","position","padding","bottomcontainer","fontSize","medium","marginVertical","action","props","handleChange","borderColor","light_border","borderWidth","borderRadius","errors","color","Red","top","backgroundColor","Yellow","marginTop","White","textTransform","label","onPress"],"mappings":"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","sourcesContent":["import { Formik } from 'formik';\r\nimport React, { Component, useContext, useRef, useState } from 'react'\r\nimport { Animated, Image, StatusBar, View } from 'react-native'\r\nimport { BottomNavigation, Snackbar, TextInput } from 'react-native-paper';\r\nimport ButtonComponent from '../components/button';\r\nimport InputComponent from '../components/input';\r\nimport TextComponent from '../components/text';\r\nimport style from '../styles/screens/login';\r\nimport Constance from '../theme/const';\r\nimport { ThemeContext } from '../theme/themeProvider';\r\nimport * as yup from 'yup';\r\nimport * as Animatable from 'react-native-animatable';\r\nimport Anim from '../components/anim';\r\n\r\n\r\nconst loginSchema = yup.object({\r\n  email: yup.string().required().email(),\r\n  password: yup.string().required().min(6),\r\n})\r\n\r\n\r\nconst ResetPassword = ({ navigation }) => {\r\n\r\n  const [email, setemail] = useState('');\r\n  const [password, setpassword] = useState('');\r\n  const [visible, setVisible] = useState(true);\r\n\r\n\r\n\r\n  const [invalid, setinvalid] = useState(false);\r\n\r\n  const handleSignIn = (values: any) => {\r\n\r\n    setinvalid(true)\r\n  }\r\n\r\n  return (\r\n    <View style={{ height: '100%', width: '100%' }}>\r\n      <StatusBar barStyle={'light-content'} />\r\n\r\n      <Image source={require('../../assets/images/onboardingimage.png')}\r\n        style={style.image}\r\n        resizeMode=\"stretch\" />\r\n\r\n      <View style={style.parent}>\r\n\r\n      <View style={[style.topcontainer, { justifyContent: 'center', alignItems: 'center' }]}>\r\n          <View style={{ position: 'absolute', justifyContent: 'center', alignItems: 'center' , padding:40}}>\r\n            <Anim json={require('../../assets/lottie/75988-forgot-password.json')} autoplay={true} autosize={true} loop={true} speed={1} style={{ height: '100%', width: '100%' }} />\r\n          </View>\r\n        </View>\r\n\r\n        <View style={style.bottomcontainer}>\r\n          <TextComponent style={{ fontSize: Constance.medium, marginVertical: 15 }} text='Reset password' />\r\n\r\n          <Formik\r\n            initialValues={{ email: '', password: '' }}\r\n            onSubmit={(values, action) => {\r\n              handleSignIn(values)\r\n            }}\r\n            validationSchema={loginSchema}\r\n          >\r\n\r\n            {(props) => (\r\n              <View>\r\n                <InputComponent hint='E-mail'\r\n                  left={<TextInput.Icon name=\"at\" />}\r\n                  changeText={props.handleChange(\"email\")}\r\n                  value={props.values.email}\r\n                  style={{\r\n                    borderColor: Constance.light_border,\r\n                    borderWidth: 1, borderRadius: 5\r\n                  }}\r\n                />\r\n\r\n                {props.errors.email || null ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red }} text={props.errors.email} /></Animatable.View> : null}\r\n                <InputComponent hint='username'\r\n                  left={<TextInput.Icon name=\"account-box\" />}\r\n                  changeText={props.handleChange(\"password\")}\r\n                  value={props.values.password}\r\n                  style={{\r\n                    borderColor: Constance.light_border,\r\n                    borderRadius: 5,\r\n                    borderWidth: 1, top: 5\r\n                  }}\r\n                />\r\n                {props.errors.password ? <Animatable.View animation=\"pulse\" easing=\"ease-out\"><TextComponent style={{ color: Constance.Red }} text={props.errors.password} /></Animatable.View> : null}\r\n\r\n\r\n                <ButtonComponent mode='contained' btnstyle={{ backgroundColor: Constance.Yellow, marginTop: 30 }} lblstyle={{ color: Constance.White, textTransform: 'capitalize' }} text='Reset Password' press={handleSignIn} />\r\n\r\n              </View>\r\n            )}\r\n          </Formik>\r\n\r\n        </View>\r\n\r\n\r\n        <Snackbar\r\n          visible={invalid}\r\n          onDismiss={() => setinvalid(false)}\r\n\r\n          action={{\r\n            label: 'Undo',\r\n            onPress: () => {\r\n              // Do something\r\n            },\r\n          }}>\r\n          Hey there! I'm a Snackbar.\r\n        </Snackbar>\r\n      </View>\r\n\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default ResetPassword\r\n"]},"metadata":{},"sourceType":"module"}