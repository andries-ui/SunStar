{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useState } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Divider, Icon, Image, Text } from 'react-native-elements';\nimport ActionBar from \"../components/actionbar\";\nimport style from \"../styles/screens/profile\";\nimport Constance from \"../theme/const\";\nimport { ThemeContext } from \"../theme/themeProvider\";\nimport Modal from \"react-native-modalbox\";\nimport ButtonComponent from \"../components/button\";\nimport InputComponent from \"../components/input\";\nimport { TextInput } from 'react-native-paper';\nimport modal from \"../styles/components/modal\";\n\nvar Account = function Account(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalComfirmVisible = _useState2[0],\n      setModalComfirmVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalPasswordVisible = _useState4[0],\n      setModalPasswordVisible = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalUsernameVisible = _useState6[0],\n      setModalUsernameVisible = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      modalUpdateVisible = _useState8[0],\n      setModalUpdateVisible = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      visiblepassword = _useState10[0],\n      setvisiblepassword = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      visibleComfirmPassword = _useState12[0],\n      setvisibleComfirmPassword = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      action = _useState14[0],\n      setaction = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      newPassword = _useState16[0],\n      setnewPassword = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      newUsername = _useState18[0],\n      setnewUsername = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      oldPassword = _useState20[0],\n      setoldPassword = _useState20[1];\n\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme,\n      dark = _useContext.dark;\n\n  var handleConfirmPassword = function handleConfirmPassword() {\n    if (oldPassword) {\n      if (action === \"password\") {\n        setModalPasswordVisible(true);\n        setModalComfirmVisible(false);\n      } else {\n        setModalUsernameVisible(true);\n        setModalComfirmVisible(false);\n      }\n    } else {\n      console.log('====================================');\n      console.log(\"nonsonce!!!!!!!!:)\");\n      console.log('====================================');\n    }\n  };\n\n  return React.createElement(View, {\n    style: [{\n      backgroundColor: theme.background,\n      height: '100%',\n      width: '100%'\n    }]\n  }, React.createElement(StatusBar, {\n    barStyle: dark ? 'light-content' : 'dark-content',\n    backgroundColor: theme.background\n  }), React.createElement(ActionBar, {\n    text: \"Profile\",\n    onBackPress: function onBackPress() {\n      return navigation.goBack();\n    },\n    textStyle: [style.lblProfile, {\n      color: theme.text\n    }],\n    iconBack: Platform.OS === 'ios' ? 'chevron-back' : 'arrow-back',\n    bottomleftradius: 35,\n    backgroundColor: theme.borderAlt\n  }), React.createElement(View, {\n    style: [style.image, {\n      shadowColor: theme.text,\n      top: 25,\n      right: 20,\n      alignSelf: 'flex-end'\n    }]\n  }, React.createElement(Image, {\n    style: [{\n      height: 70,\n      width: 70\n    }],\n    source: require(\"../../assets/images/user.png\")\n  })), React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: 'bold',\n      fontSize: Constance.semi_large,\n      color: theme.text,\n      marginTop: 0\n    }]\n  }, \" Andries sebola\"), React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: '100',\n      fontSize: Constance.small,\n      color: theme.text\n    }]\n  }, \" andries@gmail.com\"), React.createElement(Divider, {\n    style: {\n      height: Constance.smallDivider,\n      backgroundColor: theme.borderAlt,\n      marginTop: 5\n    }\n  }), React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false\n  }, React.createElement(View, null, React.createElement(View, {\n    style: {\n      width: '85%',\n      marginHorizontal: 30,\n      backgroundColor: theme.borderAlt,\n      paddingVertical: 20,\n      borderRadius: 12,\n      marginTop: 20\n    }\n  }, React.createElement(View, {\n    style: [style.flexContainer, {\n      marginTop: 5\n    }]\n  }, React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: '100',\n      fontSize: Constance.small,\n      color: theme.text,\n      width: '40%',\n      textAlign: 'left'\n    }]\n  }, \" username \"), React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: 'bold',\n      fontSize: Constance.small,\n      color: theme.text\n    }]\n  }, \" Account \")), React.createElement(View, {\n    style: [style.flexContainer, {\n      marginTop: 5\n    }]\n  }, React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: '100',\n      fontSize: Constance.small,\n      color: theme.text,\n      width: '40%',\n      textAlign: 'left'\n    }]\n  }, \" Contact \"), React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: 'bold',\n      fontSize: Constance.small,\n      color: theme.text\n    }]\n  }, \" Account \")), React.createElement(View, {\n    style: [style.flexContainer, {\n      marginTop: 5\n    }]\n  }, React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: '100',\n      fontSize: Constance.small,\n      color: theme.text,\n      width: '40%',\n      textAlign: 'left'\n    }]\n  }, \" Id \"), React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: 'bold',\n      fontSize: Constance.small,\n      color: theme.text\n    }]\n  }, \" Account \")), React.createElement(View, {\n    style: [style.flexContainer, {\n      marginTop: 5\n    }]\n  }, React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: '100',\n      fontSize: Constance.small,\n      color: theme.text,\n      width: '40%',\n      textAlign: 'left'\n    }]\n  }, \" Reservation ID \"), React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: 'bold',\n      fontSize: Constance.small,\n      color: theme.text\n    }]\n  }, \" Account \")), React.createElement(View, {\n    style: [{\n      position: 'absolute',\n      right: 10,\n      marginTop: 10\n    }]\n  }, React.createElement(Icon, {\n    type: \"material-community\",\n    name: \"pencil\",\n    color: theme.text,\n    onPress: function onPress() {\n      return setModalUpdateVisible(true);\n    }\n  }))), React.createElement(View, {\n    style: {\n      width: '85%',\n      marginHorizontal: 30,\n      backgroundColor: theme.borderAlt,\n      paddingVertical: 20,\n      borderRadius: 12,\n      marginTop: 20\n    }\n  }, React.createElement(View, {\n    style: [style.flexContainer, {\n      marginTop: 5\n    }]\n  }, React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: '100',\n      fontSize: Constance.small,\n      color: theme.text,\n      width: '40%',\n      textAlign: 'left'\n    }]\n  }, \" username \"), React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: 'bold',\n      fontSize: Constance.small,\n      color: theme.text\n    }]\n  }, \" Account \")), React.createElement(View, {\n    style: [style.flexContainer, {\n      marginTop: 5\n    }]\n  }, React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: '100',\n      fontSize: Constance.small,\n      color: theme.text,\n      width: '40%',\n      textAlign: 'left'\n    }]\n  }, \" Contact \"), React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: 'bold',\n      fontSize: Constance.small,\n      color: theme.text\n    }]\n  }, \" Account \")), React.createElement(View, {\n    style: [style.flexContainer, {\n      marginTop: 5\n    }]\n  }, React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: '100',\n      fontSize: Constance.small,\n      color: theme.text,\n      width: '40%',\n      textAlign: 'left'\n    }]\n  }, \" Id \"), React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: 'bold',\n      fontSize: Constance.small,\n      color: theme.text\n    }]\n  }, \" Account \")), React.createElement(View, {\n    style: [style.flexContainer, {\n      marginTop: 5\n    }]\n  }, React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: '100',\n      fontSize: Constance.small,\n      color: theme.text,\n      width: '40%',\n      textAlign: 'left'\n    }]\n  }, \" Reservation ID \"), React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: 'bold',\n      fontSize: Constance.small,\n      color: theme.text\n    }]\n  }, \" Account \")), React.createElement(View, {\n    style: [{\n      position: 'absolute',\n      right: 10,\n      marginTop: 10\n    }]\n  }, React.createElement(Icon, {\n    type: \"material-community\",\n    name: \"pencil\",\n    color: theme.text,\n    onPress: function onPress() {\n      return setModalUpdateVisible(true);\n    }\n  }))), React.createElement(Text, {\n    style: [style.lblProfile, {\n      marginLeft: 20,\n      fontWeight: 'bold',\n      fontSize: Constance.small,\n      color: theme.text,\n      marginTop: 15\n    }]\n  }, \" Account \"), React.createElement(TouchableHighlight, {\n    onPress: function onPress() {\n      setModalComfirmVisible(true);\n      setaction('password');\n    },\n    style: {\n      alignSelf: 'center',\n      width: '85%',\n      borderRadius: 7,\n      marginTop: 8\n    }\n  }, React.createElement(View, null, React.createElement(View, {\n    style: [style.flexContainer, {\n      justifyContent: 'space-between',\n      height: 50,\n      alignItems: 'center',\n      marginTop: 5\n    }]\n  }, React.createElement(View, {\n    style: [style.flexContainer]\n  }, React.createElement(Icon, {\n    type: \"ionicon\",\n    name: \"lock-closed\",\n    color: theme.text\n  }), React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: '100',\n      fontSize: Constance.small,\n      color: theme.text\n    }]\n  }, \" Change password \")), React.createElement(Icon, {\n    type: \"ionicon\",\n    name: \"chevron-forward\",\n    color: theme.text\n  })), React.createElement(Divider, {\n    style: {\n      height: Constance.smallDivider,\n      backgroundColor: theme.borderAlt\n    }\n  }))), React.createElement(TouchableHighlight, {\n    onPress: function onPress() {\n      setModalComfirmVisible(true);\n      setaction('username');\n    },\n    style: {\n      alignSelf: 'center',\n      width: '85%',\n      borderRadius: 7,\n      marginTop: 8\n    }\n  }, React.createElement(View, null, React.createElement(View, {\n    style: [style.flexContainer, {\n      justifyContent: 'space-between',\n      height: 50,\n      alignItems: 'center',\n      marginTop: 5\n    }]\n  }, React.createElement(View, {\n    style: [style.flexContainer]\n  }, React.createElement(Icon, {\n    type: \"ionicon\",\n    name: \"person-circle\",\n    color: theme.text\n  }), React.createElement(Text, {\n    style: [style.lblcenterlined, {\n      fontWeight: '100',\n      fontSize: Constance.small,\n      color: theme.text\n    }]\n  }, \" Change username \")), React.createElement(Icon, {\n    type: \"ionicon\",\n    name: \"chevron-forward\",\n    color: theme.text\n  })), React.createElement(Divider, {\n    style: {\n      height: Constance.smallDivider,\n      backgroundColor: theme.borderAlt\n    }\n  }))))), React.createElement(View, {\n    style: {\n      backgroundColor: theme.borderAlt,\n      paddingVertical: 5,\n      alignSelf: 'center',\n      width: '85%',\n      borderRadius: 12,\n      marginTop: 8,\n      position: 'absolute',\n      bottom: 15,\n      flexDirection: 'row',\n      justifyContent: 'space-evenly',\n      alignItems: 'center'\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: theme.text\n    }\n  }, \"Ts  Cs\"), React.createElement(View, null, React.createElement(Icon, {\n    type: \"ionicon\",\n    name: \"alert-circle\",\n    color: Constance.Yellow\n  }), React.createElement(Text, {\n    style: {\n      color: theme.text\n    }\n  }, \"About\")), React.createElement(View, null, React.createElement(Icon, {\n    type: \"ionicon\",\n    name: \"exit-outline\",\n    color: Constance.Red\n  }), React.createElement(Text, {\n    style: {\n      color: theme.text\n    }\n  }, \"Exit\"))), React.createElement(Modal, {\n    entry: \"bottom\",\n    backdropPressToClose: true,\n    isOpen: modalComfirmVisible,\n    style: [modal.modalBox],\n    onClosed: function onClosed() {\n      return setModalComfirmVisible(false);\n    }\n  }, React.createElement(View, {\n    style: [modal.content, {\n      backgroundColor: theme.background\n    }]\n  }, React.createElement(View, {\n    style: [modal.modelContainerChild, {\n      marginVertical: 10\n    }]\n  }, React.createElement(Text, {\n    style: modal.textStyle\n  }, \"Enter your recent password\"), React.createElement(Icon, {\n    type: \"ionicon\",\n    name: \"close\",\n    onPress: function onPress() {\n      setModalComfirmVisible(false);\n    }\n  })), React.createElement(InputComponent, {\n    right: React.createElement(TextInput.Icon, {\n      name: visiblepassword ? \"eye\" : \"eye-off\",\n      onPress: function onPress() {\n        return visiblepassword ? setvisiblepassword(false) : setvisiblepassword(true);\n      }\n    }),\n    secured: visiblepassword,\n    left: React.createElement(TextInput.Icon, {\n      name: \"lock\"\n    }),\n    hint: \"Password\",\n    changeText: function changeText(e) {\n      return setoldPassword(e);\n    },\n    value: oldPassword\n  }), React.createElement(ButtonComponent, {\n    mode: \"contained\",\n    btnstyle: {\n      backgroundColor: Constance.Yellow,\n      marginTop: 20,\n      marginBottom: 30\n    },\n    lblstyle: {\n      color: Constance.White,\n      textTransform: 'capitalize'\n    },\n    text: \"Comfirm\",\n    press: handleConfirmPassword\n  }))), React.createElement(Modal, {\n    entry: \"bottom\",\n    backdropPressToClose: true,\n    isOpen: modalPasswordVisible,\n    style: [modal.modalBox, {\n      backgroundColor: theme.border\n    }],\n    onClosed: function onClosed() {\n      return setModalPasswordVisible(false);\n    }\n  }, React.createElement(View, {\n    style: [modal.content, {\n      backgroundColor: theme.background\n    }]\n  }, React.createElement(Divider, {\n    style: {\n      borderRadius: 12,\n      height: Constance.largeDivider,\n      width: 100,\n      backgroundColor: theme.borderAlt,\n      alignSelf: 'center'\n    }\n  }), React.createElement(View, {\n    style: modal.modelContainerChild\n  }, React.createElement(Text, {\n    style: modal.textStyle\n  }, \"Enter your new password\"), React.createElement(Icon, {\n    type: \"ionicon\",\n    name: \"close\",\n    onPress: function onPress() {\n      setModalPasswordVisible(false);\n    }\n  })), React.createElement(InputComponent, {\n    right: React.createElement(TextInput.Icon, {\n      name: visiblepassword ? \"eye\" : \"eye-off\",\n      onPress: function onPress() {\n        return visiblepassword ? setvisiblepassword(false) : setvisiblepassword(true);\n      }\n    }),\n    secured: visiblepassword,\n    left: React.createElement(TextInput.Icon, {\n      name: \"lock\"\n    }),\n    hint: \"Password\",\n    changeText: function changeText(e) {\n      return setoldPassword(e);\n    },\n    value: oldPassword\n  }), React.createElement(InputComponent, {\n    right: React.createElement(TextInput.Icon, {\n      name: visibleComfirmPassword ? \"eye\" : \"eye-off\",\n      onPress: function onPress() {\n        return visibleComfirmPassword ? setvisibleComfirmPassword(false) : setvisibleComfirmPassword(true);\n      }\n    }),\n    secured: visiblepassword,\n    left: React.createElement(TextInput.Icon, {\n      name: \"lock\"\n    }),\n    hint: \"Password\",\n    changeText: function changeText(e) {\n      return setoldPassword(e);\n    },\n    value: oldPassword\n  }), React.createElement(ButtonComponent, {\n    mode: \"contained\",\n    btnstyle: {\n      backgroundColor: Constance.Yellow,\n      marginTop: 20,\n      marginBottom: 30\n    },\n    lblstyle: {\n      color: Constance.White,\n      textTransform: 'capitalize'\n    },\n    text: \"Proceed\",\n    press: handleConfirmPassword\n  }))), React.createElement(Modal, {\n    entry: \"bottom\",\n    backdropPressToClose: true,\n    isOpen: modalUsernameVisible,\n    style: [modal.modalBox, {\n      backgroundColor: theme.border\n    }],\n    onClosed: function onClosed() {\n      return setModalUsernameVisible(false);\n    }\n  }, React.createElement(View, {\n    style: [modal.content, {\n      backgroundColor: theme.background\n    }]\n  }, React.createElement(Divider, {\n    style: {\n      borderRadius: 12,\n      height: Constance.largeDivider,\n      width: 100,\n      backgroundColor: theme.borderAlt,\n      alignSelf: 'center'\n    }\n  }), React.createElement(View, {\n    style: modal.modelContainerChild\n  }, React.createElement(Text, {\n    style: modal.textStyle\n  }, \"Enter your new username\"), React.createElement(Icon, {\n    type: \"ionicon\",\n    name: \"close\",\n    onPress: function onPress() {\n      setModalUsernameVisible(false);\n    }\n  })), React.createElement(InputComponent, {\n    left: React.createElement(TextInput.Icon, {\n      name: \"account-box\"\n    }),\n    hint: \"E-mail\",\n    changeText: function changeText(e) {\n      return setoldPassword(e);\n    },\n    value: oldPassword\n  }), React.createElement(ButtonComponent, {\n    mode: \"contained\",\n    btnstyle: {\n      backgroundColor: Constance.Yellow,\n      marginTop: 20,\n      marginBottom: 30\n    },\n    lblstyle: {\n      color: Constance.White,\n      textTransform: 'capitalize'\n    },\n    text: \"Proceed\",\n    press: function press() {}\n  }))), React.createElement(Modal, {\n    entry: \"bottom\",\n    backdropPressToClose: true,\n    isOpen: modalUpdateVisible,\n    style: modal.modalBox,\n    onClosed: function onClosed() {\n      return setModalUpdateVisible(false);\n    }\n  }, React.createElement(View, {\n    style: [modal.content, {\n      backgroundColor: theme.background\n    }]\n  }, React.createElement(Divider, {\n    style: {\n      borderRadius: 12,\n      height: Constance.largeDivider,\n      width: 100,\n      backgroundColor: theme.borderAlt,\n      alignSelf: 'center'\n    }\n  }), React.createElement(View, {\n    style: modal.modelContainerChild\n  }, React.createElement(Text, {\n    style: modal.textStyle\n  }, \"Update your profile.\"), React.createElement(Icon, {\n    type: \"ionicon\",\n    name: \"close\",\n    onPress: function onPress() {\n      setModalUpdateVisible(false);\n    }\n  })), React.createElement(InputComponent, {\n    left: React.createElement(TextInput.Icon, {\n      name: \"account-box\"\n    }),\n    hint: \"Names\",\n    changeText: function changeText(e) {\n      return setoldPassword(e);\n    },\n    value: oldPassword\n  }), React.createElement(InputComponent, {\n    left: React.createElement(TextInput.Icon, {\n      name: \"phone\"\n    }),\n    hint: \"Contact\",\n    changeText: function changeText(e) {\n      return setoldPassword(e);\n    },\n    value: oldPassword\n  }), React.createElement(ButtonComponent, {\n    mode: \"contained\",\n    btnstyle: {\n      backgroundColor: Constance.Yellow,\n      marginTop: 20,\n      marginBottom: 30\n    },\n    lblstyle: {\n      color: Constance.White,\n      textTransform: 'capitalize'\n    },\n    text: \"Proceed\",\n    press: function press() {}\n  }))));\n};\n\nexport default Account;","map":{"version":3,"sources":["D:/Development/Mobile Development/React native/Hotel/SunStar/driverapp/source/screens/account.tsx"],"names":["React","useContext","useState","Divider","Icon","Image","Text","ActionBar","style","Constance","ThemeContext","Modal","ButtonComponent","InputComponent","TextInput","modal","Account","navigation","modalComfirmVisible","setModalComfirmVisible","modalPasswordVisible","setModalPasswordVisible","modalUsernameVisible","setModalUsernameVisible","modalUpdateVisible","setModalUpdateVisible","visiblepassword","setvisiblepassword","visibleComfirmPassword","setvisibleComfirmPassword","action","setaction","newPassword","setnewPassword","newUsername","setnewUsername","oldPassword","setoldPassword","theme","dark","handleConfirmPassword","console","log","backgroundColor","background","height","width","goBack","lblProfile","color","text","Platform","OS","borderAlt","image","shadowColor","top","right","alignSelf","require","lblcenterlined","fontWeight","fontSize","semi_large","marginTop","small","smallDivider","marginHorizontal","paddingVertical","borderRadius","flexContainer","textAlign","position","marginLeft","justifyContent","alignItems","bottom","flexDirection","Yellow","Red","modalBox","content","modelContainerChild","marginVertical","textStyle","e","marginBottom","White","textTransform","border","largeDivider"],"mappings":"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","sourcesContent":["import React, { Component, useContext, useState } from 'react'\r\nimport { Platform, ScrollView, StatusBar, TouchableHighlight, View } from 'react-native';\r\nimport { Divider, Icon, Image, Text } from 'react-native-elements';\r\nimport ActionBar from '../components/actionbar';\r\nimport style from '../styles/screens/profile';\r\nimport Constance from '../theme/const';\r\nimport { ThemeContext } from '../theme/themeProvider';\r\nimport Modal from \"react-native-modalbox\";\r\nimport ButtonComponent from '../components/button';\r\nimport InputComponent from '../components/input';\r\nimport { TextInput } from 'react-native-paper';\r\nimport modal from '../styles/components/modal';\r\n\r\nconst Account = ({ navigation }) => {\r\n    const [modalComfirmVisible, setModalComfirmVisible] = useState(false);\r\n    const [modalPasswordVisible, setModalPasswordVisible] = useState(false);\r\n    const [modalUsernameVisible, setModalUsernameVisible] = useState(false);\r\n    const [modalUpdateVisible, setModalUpdateVisible] = useState(false);\r\n    const [visiblepassword, setvisiblepassword] = useState(true);\r\n    const [visibleComfirmPassword, setvisibleComfirmPassword] = useState(true);\r\n    const [action, setaction] = useState('');\r\n    const [newPassword, setnewPassword] = useState('');\r\n    const [newUsername, setnewUsername] = useState('');\r\n    const [oldPassword, setoldPassword] = useState('');\r\n\r\n    const { theme, dark } = useContext(ThemeContext)\r\n\r\n    const handleConfirmPassword = () => {\r\n        if (oldPassword) {\r\n            if (action === \"password\") {\r\n                setModalPasswordVisible(true);\r\n                setModalComfirmVisible(false)\r\n            }\r\n            else { setModalUsernameVisible(true); setModalComfirmVisible(false) }\r\n        } else {\r\n            console.log('====================================');\r\n            console.log(\"nonsonce!!!!!!!!:)\");\r\n            console.log('====================================');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View style={[{ backgroundColor: theme.background, height: '100%', width: '100%' }]}>\r\n            <StatusBar barStyle={dark ? 'light-content' : 'dark-content'} backgroundColor={theme.background} />\r\n            <ActionBar text='Profile' onBackPress={() => navigation.goBack()} textStyle={[style.lblProfile, { color: theme.text }]} iconBack={Platform.OS === 'ios' ? 'chevron-back' : 'arrow-back'} bottomleftradius={35} backgroundColor={theme.borderAlt} />\r\n            <View style={[style.image, {\r\n                shadowColor: theme.text,\r\n                top: 25, right: 20,\r\n                alignSelf: 'flex-end',\r\n            }]}>\r\n                <Image style={[{ height: 70, width: 70 }]} source={require('../../assets/images/user.png')} />\r\n            </View>\r\n            <Text style={[style.lblcenterlined, { fontWeight: 'bold', fontSize: Constance.semi_large, color: theme.text, marginTop: 0 }]}> Andries sebola</Text>\r\n            <Text style={[style.lblcenterlined, { fontWeight: '100', fontSize: Constance.small, color: theme.text }]}> andries@gmail.com</Text>\r\n\r\n            <Divider style={{ height: Constance.smallDivider, backgroundColor: theme.borderAlt, marginTop: 5 }} />\r\n\r\n            <ScrollView showsVerticalScrollIndicator={false}>\r\n                <View>\r\n                    <View style={{ width: '85%', marginHorizontal: 30, backgroundColor: theme.borderAlt, paddingVertical: 20, borderRadius: 12, marginTop: 20 }}>\r\n                        <View style={[style.flexContainer, { marginTop: 5 }]}>\r\n                            <Text style={[style.lblcenterlined, { fontWeight: '100', fontSize: Constance.small, color: theme.text, width: '40%', textAlign: 'left' }]}> username </Text>\r\n                            <Text style={[style.lblcenterlined, { fontWeight: 'bold', fontSize: Constance.small, color: theme.text }]}> Account </Text>\r\n                        </View>\r\n\r\n                        <View style={[style.flexContainer, { marginTop: 5 }]}>\r\n                            <Text style={[style.lblcenterlined, { fontWeight: '100', fontSize: Constance.small, color: theme.text, width: '40%', textAlign: 'left' }]}> Contact </Text>\r\n                            <Text style={[style.lblcenterlined, { fontWeight: 'bold', fontSize: Constance.small, color: theme.text }]}> Account </Text>\r\n                        </View>\r\n\r\n                        <View style={[style.flexContainer, { marginTop: 5 }]}>\r\n                            <Text style={[style.lblcenterlined, { fontWeight: '100', fontSize: Constance.small, color: theme.text, width: '40%', textAlign: 'left' }]}> Id </Text>\r\n                            <Text style={[style.lblcenterlined, { fontWeight: 'bold', fontSize: Constance.small, color: theme.text }]}> Account </Text>\r\n                        </View>\r\n\r\n                        <View style={[style.flexContainer, { marginTop: 5 }]}>\r\n                            <Text style={[style.lblcenterlined, { fontWeight: '100', fontSize: Constance.small, color: theme.text, width: '40%', textAlign: 'left' }]}> Reservation ID </Text>\r\n                            <Text style={[style.lblcenterlined, { fontWeight: 'bold', fontSize: Constance.small, color: theme.text }]}> Account </Text>\r\n                        </View>\r\n\r\n                        <View style={[{ position: 'absolute', right: 10, marginTop: 10 }]}>\r\n                            <Icon type='material-community' name=\"pencil\" color={theme.text} onPress={() => setModalUpdateVisible(true)} />\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <View style={{ width: '85%', marginHorizontal: 30, backgroundColor: theme.borderAlt, paddingVertical: 20, borderRadius: 12, marginTop: 20 }}>\r\n                        <View style={[style.flexContainer, { marginTop: 5 }]}>\r\n                            <Text style={[style.lblcenterlined, { fontWeight: '100', fontSize: Constance.small, color: theme.text, width: '40%', textAlign: 'left' }]}> username </Text>\r\n                            <Text style={[style.lblcenterlined, { fontWeight: 'bold', fontSize: Constance.small, color: theme.text }]}> Account </Text>\r\n                        </View>\r\n\r\n                        <View style={[style.flexContainer, { marginTop: 5 }]}>\r\n                            <Text style={[style.lblcenterlined, { fontWeight: '100', fontSize: Constance.small, color: theme.text, width: '40%', textAlign: 'left' }]}> Contact </Text>\r\n                            <Text style={[style.lblcenterlined, { fontWeight: 'bold', fontSize: Constance.small, color: theme.text }]}> Account </Text>\r\n                        </View>\r\n\r\n                        <View style={[style.flexContainer, { marginTop: 5 }]}>\r\n                            <Text style={[style.lblcenterlined, { fontWeight: '100', fontSize: Constance.small, color: theme.text, width: '40%', textAlign: 'left' }]}> Id </Text>\r\n                            <Text style={[style.lblcenterlined, { fontWeight: 'bold', fontSize: Constance.small, color: theme.text }]}> Account </Text>\r\n                        </View>\r\n\r\n                        <View style={[style.flexContainer, { marginTop: 5 }]}>\r\n                            <Text style={[style.lblcenterlined, { fontWeight: '100', fontSize: Constance.small, color: theme.text, width: '40%', textAlign: 'left' }]}> Reservation ID </Text>\r\n                            <Text style={[style.lblcenterlined, { fontWeight: 'bold', fontSize: Constance.small, color: theme.text }]}> Account </Text>\r\n                        </View>\r\n\r\n                        <View style={[{ position: 'absolute', right: 10, marginTop: 10 }]}>\r\n                            <Icon type='material-community' name=\"pencil\" color={theme.text} onPress={() => setModalUpdateVisible(true)} />\r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <Text style={[style.lblProfile, { marginLeft: 20, fontWeight: 'bold', fontSize: Constance.small, color: theme.text, marginTop: 15 }]}> Account </Text>\r\n\r\n                    <TouchableHighlight onPress={() => { setModalComfirmVisible(true); setaction('password') }} style={{ alignSelf: 'center', width: '85%', borderRadius: 7, marginTop: 8 }}>\r\n                        <View>\r\n                            <View style={[style.flexContainer, { justifyContent: 'space-between', height: 50, alignItems: 'center', marginTop: 5 }]}>\r\n                                <View style={[style.flexContainer,]}>\r\n                                    <Icon type='ionicon' name='lock-closed' color={theme.text} />\r\n                                    <Text style={[style.lblcenterlined, { fontWeight: '100', fontSize: Constance.small, color: theme.text }]}> Change password </Text>\r\n                                </View>\r\n                                <Icon type='ionicon' name='chevron-forward' color={theme.text} />\r\n                            </View>\r\n                            <Divider style={{ height: Constance.smallDivider, backgroundColor: theme.borderAlt, }} />\r\n                        </View>\r\n                    </TouchableHighlight>\r\n\r\n                    <TouchableHighlight onPress={() => { setModalComfirmVisible(true); setaction('username') }} style={{ alignSelf: 'center', width: '85%', borderRadius: 7, marginTop: 8 }}>\r\n                        <View>\r\n                            <View style={[style.flexContainer, { justifyContent: 'space-between', height: 50, alignItems: 'center', marginTop: 5 }]}>\r\n                                <View style={[style.flexContainer,]}>\r\n                                    <Icon type='ionicon' name='person-circle' color={theme.text} />\r\n                                    <Text style={[style.lblcenterlined, { fontWeight: '100', fontSize: Constance.small, color: theme.text }]}> Change username </Text>\r\n                                </View>\r\n                                <Icon type='ionicon' name='chevron-forward' color={theme.text} />\r\n                            </View>\r\n                            <Divider style={{ height: Constance.smallDivider, backgroundColor: theme.borderAlt, }} />\r\n                        </View>\r\n                    </TouchableHighlight>\r\n\r\n                </View>\r\n\r\n            </ScrollView>\r\n            <View style={{ backgroundColor: theme.borderAlt, paddingVertical: 5, alignSelf: 'center', width: '85%', borderRadius: 12, marginTop: 8, position: 'absolute', bottom: 15, flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center' }}>\r\n                <Text style={{ color: theme.text }}>Ts  Cs</Text>\r\n                <View>\r\n                    <Icon type='ionicon' name=\"alert-circle\" color={Constance.Yellow} />\r\n                    <Text style={{ color: theme.text }}>About</Text>\r\n                </View>\r\n                <View >\r\n                    <Icon type='ionicon' name=\"exit-outline\" color={Constance.Red} />\r\n                    <Text style={{ color: theme.text }}>Exit</Text>\r\n                </View>\r\n            </View>\r\n\r\n            {/* bottom sheet models */}\r\n            {/* comfirm password model */}\r\n            <Modal\r\n                entry=\"bottom\"\r\n                backdropPressToClose={true}\r\n                isOpen={modalComfirmVisible}\r\n                style={[modal.modalBox]}\r\n                onClosed={() => setModalComfirmVisible(false)}\r\n            >\r\n                <View style={[modal.content, { backgroundColor: theme.background }]}>\r\n                    <View style={[modal.modelContainerChild, { marginVertical: 10 }]}>\r\n                        <Text style={modal.textStyle}>Enter your recent password</Text>\r\n                        <Icon type=\"ionicon\" name=\"close\" onPress={() => { setModalComfirmVisible(false) }} />\r\n                    </View>\r\n\r\n\r\n                    <InputComponent right={<TextInput.Icon name={visiblepassword ? \"eye\" : \"eye-off\"} onPress={() => visiblepassword ? setvisiblepassword(false) : setvisiblepassword(true)} />} secured={visiblepassword} left={<TextInput.Icon name=\"lock\" />} hint='Password' changeText={(e: any) => setoldPassword(e)} value={oldPassword} />\r\n\r\n                    <ButtonComponent mode='contained' btnstyle={{ backgroundColor: Constance.Yellow, marginTop: 20, marginBottom: 30 }} lblstyle={{ color: Constance.White, textTransform: 'capitalize' }} text='Comfirm' press={handleConfirmPassword} />\r\n\r\n\r\n                </View>\r\n            </Modal>\r\n\r\n            {/* new password model  */}\r\n            <Modal\r\n                entry=\"bottom\"\r\n                backdropPressToClose={true}\r\n                isOpen={modalPasswordVisible}\r\n                style={[modal.modalBox, { backgroundColor: theme.border }]}\r\n                onClosed={() => setModalPasswordVisible(false)}\r\n            >\r\n                <View style={[modal.content, { backgroundColor: theme.background }]}>\r\n                    <Divider style={{ borderRadius: 12, height: Constance.largeDivider, width: 100, backgroundColor: theme.borderAlt, alignSelf: 'center' }} />\r\n\r\n                    <View style={modal.modelContainerChild}>\r\n                        <Text style={modal.textStyle}>Enter your new password</Text>\r\n                        <Icon type=\"ionicon\" name=\"close\" onPress={() => { setModalPasswordVisible(false) }} />\r\n                    </View>\r\n\r\n\r\n                    <InputComponent right={<TextInput.Icon name={visiblepassword ? \"eye\" : \"eye-off\"} onPress={() => visiblepassword ? setvisiblepassword(false) : setvisiblepassword(true)} />} secured={visiblepassword} left={<TextInput.Icon name=\"lock\" />} hint='Password' changeText={(e: any) => setoldPassword(e)} value={oldPassword} />\r\n                    <InputComponent right={<TextInput.Icon name={visibleComfirmPassword ? \"eye\" : \"eye-off\"} onPress={() => visibleComfirmPassword ? setvisibleComfirmPassword(false) : setvisibleComfirmPassword(true)} />} secured={visiblepassword} left={<TextInput.Icon name=\"lock\" />} hint='Password' changeText={(e: any) => setoldPassword(e)} value={oldPassword} />\r\n\r\n                    <ButtonComponent mode='contained' btnstyle={{ backgroundColor: Constance.Yellow, marginTop: 20, marginBottom: 30 }} lblstyle={{ color: Constance.White, textTransform: 'capitalize' }} text='Proceed' press={handleConfirmPassword} />\r\n\r\n\r\n                </View>\r\n            </Modal>\r\n\r\n            {/* new username model */}\r\n            <Modal\r\n                entry=\"bottom\"\r\n                backdropPressToClose={true}\r\n                isOpen={modalUsernameVisible}\r\n                style={[modal.modalBox, { backgroundColor: theme.border }]}\r\n                onClosed={() => setModalUsernameVisible(false)}\r\n            >\r\n                <View style={[modal.content, { backgroundColor: theme.background }]}>\r\n                    <Divider style={{ borderRadius: 12, height: Constance.largeDivider, width: 100, backgroundColor: theme.borderAlt, alignSelf: 'center' }} />\r\n                    <View style={modal.modelContainerChild}>\r\n                        <Text style={modal.textStyle}>Enter your new username</Text>\r\n                        <Icon type=\"ionicon\" name=\"close\" onPress={() => { setModalUsernameVisible(false) }} />\r\n                    </View>\r\n\r\n\r\n                    <InputComponent left={<TextInput.Icon name=\"account-box\" />} hint='E-mail' changeText={(e: any) => setoldPassword(e)} value={oldPassword} />\r\n\r\n                    <ButtonComponent mode='contained' btnstyle={{ backgroundColor: Constance.Yellow, marginTop: 20, marginBottom: 30 }} lblstyle={{ color: Constance.White, textTransform: 'capitalize' }} text='Proceed' press={() => { }} />\r\n\r\n\r\n                </View>\r\n            </Modal>\r\n\r\n            {/* update model */}\r\n            <Modal\r\n                entry=\"bottom\"\r\n                backdropPressToClose={true}\r\n                isOpen={modalUpdateVisible}\r\n                style={modal.modalBox}\r\n                onClosed={() => setModalUpdateVisible(false)}\r\n            >\r\n                <View style={[modal.content, { backgroundColor: theme.background }]}>\r\n                    <Divider style={{ borderRadius: 12, height: Constance.largeDivider, width: 100, backgroundColor: theme.borderAlt, alignSelf: 'center' }} />\r\n                    <View style={modal.modelContainerChild}>\r\n                        <Text style={modal.textStyle}>Update your profile.</Text>\r\n                        <Icon type=\"ionicon\" name=\"close\" onPress={() => { setModalUpdateVisible(false) }} />\r\n                    </View>\r\n\r\n\r\n                    <InputComponent left={<TextInput.Icon name=\"account-box\" />} hint='Names' changeText={(e: any) => setoldPassword(e)} value={oldPassword} />\r\n                    <InputComponent left={<TextInput.Icon name=\"phone\" />} hint='Contact' changeText={(e: any) => setoldPassword(e)} value={oldPassword} />\r\n\r\n                    <ButtonComponent mode='contained' btnstyle={{ backgroundColor: Constance.Yellow, marginTop: 20, marginBottom: 30 }} lblstyle={{ color: Constance.White, textTransform: 'capitalize' }} text='Proceed' press={() => { }} />\r\n\r\n\r\n                </View>\r\n            </Modal>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Account\r\n"]},"metadata":{},"sourceType":"module"}